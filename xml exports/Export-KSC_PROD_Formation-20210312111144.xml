<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26" zv="IRIS for Windows (x86-64) 2019.1 (Build 510_4_19056U)" ts="2021-03-12 11:12:33">
<Class name="AGIRH.Absences.BatchIn">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Absences'
on 2021-03-08 at 14:37:54.774 [2021-03-08 13:37:54.774 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65811,52674.825023</TimeChanged>
<TimeCreated>65811,52665.885682</TimeCreated>

<Parameter name="XMLNAME">
<Default>AGIRH_Absences_BatchIn</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>AGIRH.Absences.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>AGIRH_Absences_BatchIn</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Absences.BatchInD</DataLocation>
<DefaultData>BatchInDefaultData</DefaultData>
<IdLocation>^AGIRH.Absences.BatchInD</IdLocation>
<IndexLocation>^AGIRH.Absences.BatchInI</IndexLocation>
<StreamLocation>^AGIRH.Absences.BatchInS</StreamLocation>
<Data name="BatchInDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Absences">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Absences'
on 2021-03-08 at 14:37:54.783 [2021-03-08 13:37:54.783 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65811,52674.784889</TimeChanged>
<TimeCreated>65811,52310.531427</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>AGIRH.Absences.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Matricule = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeAbsenceQualifiée = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléAbsenceQualifiée = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateDébutAbsence = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateFinAbsenceCalculée = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.Matricule, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeAbsenceQualifiée, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléAbsenceQualifiée, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateDébutAbsence, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateFinAbsenceCalculée, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("AGIRH.Absences.BatchIn")=""
	Set pClasses("AGIRH.Absences.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="AGIRH.Absences" type="delimited" char_encoding="UTF-8" targetClassname="AGIRH.Absences.Record" batchClass="AGIRH.Absences.BatchIn" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Matricule" datatype="%String">
  </Field>
  <Field name="CodeAbsenceQualifiée" datatype="%String">
  </Field>
  <Field name="LibelléAbsenceQualifiée" datatype="%String">
  </Field>
  <Field name="DateDébutAbsence" datatype="%String">
  </Field>
  <Field name="DateFinAbsenceCalculée" datatype="%String">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="AGIRH.Absences.Record">
<Description>
RECORDMAP: Generated from RecordMap 'AGIRH.Absences'
on 2021-03-08 at 14:37:54.766 [2021-03-08 13:37:54.766 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65811,52674.840448</TimeChanged>
<TimeCreated>65811,52674.766456</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Matricule">
<Type>%String</Type>
</Property>

<Property name="CodeAbsenceQualifiée">
<Type>%String</Type>
</Property>

<Property name="LibelléAbsenceQualifiée">
<Type>%String</Type>
</Property>

<Property name="DateDébutAbsence">
<Type>%String</Type>
</Property>

<Property name="DateFinAbsenceCalculée">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>AGIRH.Absences.BatchIn</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Absences.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^AGIRH.Absences.RecordD</IdLocation>
<IndexLocation>^AGIRH.Absences.RecordI</IndexLocation>
<StreamLocation>^AGIRH.Absences.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Matricule</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>LibelléAbsenceQualifiée</Value>
</Value>
<Value name="5">
<Value>DateDébutAbsence</Value>
</Value>
<Value name="6">
<Value>DateFinAbsenceCalculée</Value>
</Value>
<Value name="7">
<Value>%ParentBatch</Value>
</Value>
<Value name="8">
<Value>CodeAbsenceQualifiée</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Accidents.BatchIn">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Accidents'
on 2021-03-05 at 07:06:12.365 [2021-03-05 06:06:12.365 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65808,25572.365719</TimeChanged>
<TimeCreated>65807,50070.280046</TimeCreated>

<Parameter name="XMLNAME">
<Default>AGIRH_Accidents_BatchIn</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>AGIRH.Accidents.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>AGIRH_Accidents_BatchIn</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Accidents.BatchInD</DataLocation>
<DefaultData>BatchInDefaultData</DefaultData>
<IdLocation>^AGIRH.Accidents.BatchInD</IdLocation>
<IndexLocation>^AGIRH.Accidents.BatchInI</IndexLocation>
<StreamLocation>^AGIRH.Accidents.BatchInS</StreamLocation>
<Data name="BatchInDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Accidents">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Accidents'
on 2021-03-05 at 07:06:12.373 [2021-03-05 06:06:12.373 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65808,25572.374405</TimeChanged>
<TimeCreated>65807,50053.063335</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>AGIRH.Accidents.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Matricule = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateEffetAT = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.HeureAT = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NatureAT = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléNatureAT = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CommentaireAT = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateduCertificatMédical = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.ElémentMatérielAT = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléElémentMatérielAT = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.SiègeAT = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléSiègeAT = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.Matricule, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateEffetAT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.HeureAT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NatureAT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléNatureAT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CommentaireAT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateduCertificatMédical, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.ElémentMatérielAT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléElémentMatérielAT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.SiègeAT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléSiègeAT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("AGIRH.Accidents.BatchIn")=""
	Set pClasses("AGIRH.Accidents.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="AGIRH.Accidents" type="delimited" char_encoding="UTF-8" targetClassname="AGIRH.Accidents.Record" batchClass="AGIRH.Accidents.BatchIn" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Matricule" datatype="%String">
  </Field>
  <Field name="DateEffetAT" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="HeureAT" datatype="%String">
  </Field>
  <Field name="NatureAT" datatype="%String">
  </Field>
  <Field name="LibelléNatureAT" datatype="%String">
  </Field>
  <Field name="CommentaireAT" required="0" ignored="0" datatype="%String" params="MAXLEN=200" repeating="0">
  </Field>
  <Field name="DateduCertificatMédical" datatype="%String">
  </Field>
  <Field name="ElémentMatérielAT" datatype="%String">
  </Field>
  <Field name="LibelléElémentMatérielAT" datatype="%String">
  </Field>
  <Field name="SiègeAT" datatype="%String">
  </Field>
  <Field name="LibelléSiègeAT" datatype="%String">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="AGIRH.Accidents.Record">
<Description>
RECORDMAP: Generated from RecordMap 'AGIRH.Accidents'
on 2021-03-05 at 07:06:12.352 [2021-03-05 06:06:12.352 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65808,25572.364358</TimeChanged>
<TimeCreated>65808,25572.352746</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Matricule">
<Type>%String</Type>
</Property>

<Property name="DateEffetAT">
<Type>%String</Type>
</Property>

<Property name="HeureAT">
<Type>%String</Type>
</Property>

<Property name="NatureAT">
<Type>%String</Type>
</Property>

<Property name="LibelléNatureAT">
<Type>%String</Type>
</Property>

<Property name="CommentaireAT">
<Type>%String</Type>
<Parameter name="MAXLEN" value="200"/>
</Property>

<Property name="DateduCertificatMédical">
<Type>%String</Type>
</Property>

<Property name="ElémentMatérielAT">
<Type>%String</Type>
</Property>

<Property name="LibelléElémentMatérielAT">
<Type>%String</Type>
</Property>

<Property name="SiègeAT">
<Type>%String</Type>
</Property>

<Property name="LibelléSiègeAT">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>AGIRH.Accidents.BatchIn</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Accidents.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^AGIRH.Accidents.RecordD</IdLocation>
<IndexLocation>^AGIRH.Accidents.RecordI</IndexLocation>
<StreamLocation>^AGIRH.Accidents.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Matricule</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>HeureAT</Value>
</Value>
<Value name="5">
<Value>NatureAT</Value>
</Value>
<Value name="6">
<Value>LibelléNatureAT</Value>
</Value>
<Value name="7">
<Value>CommentaireAT</Value>
</Value>
<Value name="8">
<Value>DateduCertificatMédical</Value>
</Value>
<Value name="9">
<Value>ElémentMatérielAT</Value>
</Value>
<Value name="10">
<Value>LibelléElémentMatérielAT</Value>
</Value>
<Value name="11">
<Value>SiègeAT</Value>
</Value>
<Value name="12">
<Value>LibelléSiègeAT</Value>
</Value>
<Value name="13">
<Value>%ParentBatch</Value>
</Value>
<Value name="14">
<Value>DateEffetdAT</Value>
</Value>
<Value name="15">
<Value>DateEffetAT</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Affectations.BatchIn">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Affectations'
on 2021-03-05 at 07:15:01.846 [2021-03-05 06:15:01.846 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65808,26101.846269</TimeChanged>
<TimeCreated>65805,63656.00833</TimeCreated>

<Parameter name="XMLNAME">
<Default>AGIRH_Affectations_BatchIn</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>AGIRH.Affectations.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>AGIRH_Affectations_BatchIn</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Affectations.BatchInD</DataLocation>
<DefaultData>BatchInDefaultData</DefaultData>
<IdLocation>^AGIRH.Affectations.BatchInD</IdLocation>
<IndexLocation>^AGIRH.Affectations.BatchInI</IndexLocation>
<StreamLocation>^AGIRH.Affectations.BatchInS</StreamLocation>
<Data name="BatchInDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Affectations">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Affectations'
on 2021-03-05 at 07:15:01.854 [2021-03-05 06:15:01.854 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65808,26101.855795</TimeChanged>
<TimeCreated>65801,34548.358848</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>AGIRH.Affectations.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Matricule = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.UF = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.TypeAffectation = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateEffetAffectation = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.TempsdeAffPrincnum = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateFinAffectation = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.TempsdeAffSecnum = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.Matricule, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.UF, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.TypeAffectation, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateEffetAffectation, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.TempsdeAffPrincnum, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateFinAffectation, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.TempsdeAffSecnum, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("AGIRH.Affectations.BatchIn")=""
	Set pClasses("AGIRH.Affectations.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="AGIRH.Affectations" type="delimited" char_encoding="UTF-8" targetClassname="AGIRH.Affectations.Record" batchClass="AGIRH.Affectations.BatchIn" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Matricule" datatype="%String">
  </Field>
  <Field name="UF" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="TypeAffectation" datatype="%String">
  </Field>
  <Field name="DateEffetAffectation" datatype="%String">
  </Field>
  <Field name="TempsdeAffPrincnum" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="DateFinAffectation" datatype="%String">
  </Field>
  <Field name="TempsdeAffSecnum" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="AGIRH.Affectations.Record">
<Description>
RECORDMAP: Generated from RecordMap 'AGIRH.Affectations'
on 2021-03-05 at 07:15:01.835 [2021-03-05 06:15:01.835 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65808,26101.844794</TimeChanged>
<TimeCreated>65808,26101.835398</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Matricule">
<Type>%String</Type>
</Property>

<Property name="UF">
<Type>%String</Type>
</Property>

<Property name="TypeAffectation">
<Type>%String</Type>
</Property>

<Property name="DateEffetAffectation">
<Type>%String</Type>
</Property>

<Property name="TempsdeAffPrincnum">
<Type>%String</Type>
</Property>

<Property name="DateFinAffectation">
<Type>%String</Type>
</Property>

<Property name="TempsdeAffSecnum">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>AGIRH.Affectations.BatchIn</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Affectations.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^AGIRH.Affectations.RecordD</IdLocation>
<IndexLocation>^AGIRH.Affectations.RecordI</IndexLocation>
<StreamLocation>^AGIRH.Affectations.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Matricule</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>TypeAffectation</Value>
</Value>
<Value name="5">
<Value>DateEffetAffectation</Value>
</Value>
<Value name="6">
<Value>TempsdeAffPrincnum</Value>
</Value>
<Value name="7">
<Value>DateFinAffectation</Value>
</Value>
<Value name="8">
<Value>TempsdeAffSecnum</Value>
</Value>
<Value name="9">
<Value>UF</Value>
</Value>
<Value name="10">
<Value>%ParentBatch</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Arborescence.BatchIn">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Arborescence'
on 2021-03-05 at 07:15:16.635 [2021-03-05 06:15:16.635 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65808,26116.635407</TimeChanged>
<TimeCreated>65805,59549.535619</TimeCreated>

<Parameter name="XMLNAME">
<Default>AGIRH_Arborescence_BatchIn</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>AGIRH.Arborescence.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>AGIRH_Arborescence_BatchIn</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Arborescence.BatchInD</DataLocation>
<DefaultData>BatchInDefaultData</DefaultData>
<IdLocation>^AGIRH.Arborescence.BatchInD</IdLocation>
<IndexLocation>^AGIRH.Arborescence.BatchInI</IndexLocation>
<StreamLocation>^AGIRH.Arborescence.BatchInS</StreamLocation>
<Data name="BatchInDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Arborescence">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Arborescence'
on 2021-03-05 at 07:15:16.643 [2021-03-05 06:15:16.643 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65808,26116.644862</TimeChanged>
<TimeCreated>65800,50639.624811</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>AGIRH.Arborescence.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.UF = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléUF = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateDébutUF = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateFinUF = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.EtablissementGéo = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléEtabGéo = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Pôle = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléPôle = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.UF, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléUF, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateDébutUF, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateFinUF, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.EtablissementGéo, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléEtabGéo, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Pôle, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléPôle, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("AGIRH.Arborescence.BatchIn")=""
	Set pClasses("AGIRH.Arborescence.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="AGIRH.Arborescence" type="delimited" char_encoding="UTF-8" targetClassname="AGIRH.Arborescence.Record" batchClass="AGIRH.Arborescence.BatchIn" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="UF" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléUF" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="DateDébutUF" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="DateFinUF" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="EtablissementGéo" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléEtabGéo" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Pôle" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléPôle" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="AGIRH.Arborescence.Record">
<Description>
RECORDMAP: Generated from RecordMap 'AGIRH.Arborescence'
on 2021-03-05 at 07:15:16.623 [2021-03-05 06:15:16.623 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65808,26116.63396</TimeChanged>
<TimeCreated>65808,26116.623397</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="UF">
<Type>%String</Type>
</Property>

<Property name="LibelléUF">
<Type>%String</Type>
</Property>

<Property name="DateDébutUF">
<Type>%String</Type>
</Property>

<Property name="DateFinUF">
<Type>%String</Type>
</Property>

<Property name="EtablissementGéo">
<Type>%String</Type>
</Property>

<Property name="LibelléEtabGéo">
<Type>%String</Type>
</Property>

<Property name="Pôle">
<Type>%String</Type>
</Property>

<Property name="LibelléPôle">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>AGIRH.Arborescence.BatchIn</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Arborescence.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^AGIRH.Arborescence.RecordD</IdLocation>
<IndexLocation>^AGIRH.Arborescence.RecordI</IndexLocation>
<StreamLocation>^AGIRH.Arborescence.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>UF</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>DateDébutUF</Value>
</Value>
<Value name="5">
<Value>DateFinUF</Value>
</Value>
<Value name="6">
<Value>EtablissementGéo</Value>
</Value>
<Value name="7">
<Value>LibelléEtabGéo</Value>
</Value>
<Value name="8">
<Value>Pôle</Value>
</Value>
<Value name="9">
<Value>LibelléPôle</Value>
</Value>
<Value name="10">
<Value>%ParentBatch</Value>
</Value>
<Value name="11">
<Value>LibelléUF</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Enfants.BatchIn">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Enfants'
on 2021-03-05 at 13:43:37.141 [2021-03-05 12:43:37.141 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65808,49417.141875</TimeChanged>
<TimeCreated>65808,48411.40664</TimeCreated>

<Parameter name="XMLNAME">
<Default>AGIRH_Enfants_BatchIn</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>AGIRH.Enfants.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>AGIRH_Enfants_BatchIn</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Enfants.BatchInD</DataLocation>
<DefaultData>BatchInDefaultData</DefaultData>
<IdLocation>^AGIRH.Enfants.BatchInD</IdLocation>
<IndexLocation>^AGIRH.Enfants.BatchInI</IndexLocation>
<StreamLocation>^AGIRH.Enfants.BatchInS</StreamLocation>
<Data name="BatchInDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Enfants">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Enfants'
on 2021-03-05 at 13:43:37.148 [2021-03-05 12:43:37.148 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65808,49417.1493</TimeChanged>
<TimeCreated>65808,48333.438192</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>AGIRH.Enfants.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Matricule = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NomPrénomEnfant = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateNaissanceEnfant = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.SexeEnfant = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeSuspensionEnfant = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeSFT = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléSFT = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.Matricule, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NomPrénomEnfant, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateNaissanceEnfant, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.SexeEnfant, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeSuspensionEnfant, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeSFT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléSFT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("AGIRH.Enfants.BatchIn")=""
	Set pClasses("AGIRH.Enfants.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="AGIRH.Enfants" type="delimited" char_encoding="UTF-8" targetClassname="AGIRH.Enfants.Record" batchClass="AGIRH.Enfants.BatchIn" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Matricule" datatype="%String">
  </Field>
  <Field name="NomPrénomEnfant" required="0" ignored="0" datatype="%String" params="MAXLEN=100" repeating="0">
  </Field>
  <Field name="DateNaissanceEnfant" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="SexeEnfant" datatype="%String">
  </Field>
  <Field name="CodeSuspensionEnfant" datatype="%String">
  </Field>
  <Field name="CodeSFT" datatype="%String">
  </Field>
  <Field name="LibelléSFT" datatype="%String">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="AGIRH.Enfants.Record">
<Description>
RECORDMAP: Generated from RecordMap 'AGIRH.Enfants'
on 2021-03-05 at 13:43:37.133 [2021-03-05 12:43:37.133 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65808,49417.140716</TimeChanged>
<TimeCreated>65808,49417.133407</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Matricule">
<Type>%String</Type>
</Property>

<Property name="NomPrénomEnfant">
<Type>%String</Type>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="DateNaissanceEnfant">
<Type>%String</Type>
</Property>

<Property name="SexeEnfant">
<Type>%String</Type>
</Property>

<Property name="CodeSuspensionEnfant">
<Type>%String</Type>
</Property>

<Property name="CodeSFT">
<Type>%String</Type>
</Property>

<Property name="LibelléSFT">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>AGIRH.Enfants.BatchIn</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Enfants.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^AGIRH.Enfants.RecordD</IdLocation>
<IndexLocation>^AGIRH.Enfants.RecordI</IndexLocation>
<StreamLocation>^AGIRH.Enfants.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Matricule</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>DateNaissanceEnfant</Value>
</Value>
<Value name="5">
<Value>SexeEnfant</Value>
</Value>
<Value name="6">
<Value>CodeSuspensionEnfant</Value>
</Value>
<Value name="7">
<Value>CodeSFT</Value>
</Value>
<Value name="8">
<Value>LibelléSFT</Value>
</Value>
<Value name="9">
<Value>%ParentBatch</Value>
</Value>
<Value name="10">
<Value>NomPrénomEnfant</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Formations.BatchIn">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Formations'
on 2021-03-05 at 09:57:42.229 [2021-03-05 08:57:42.229 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65808,35862.230122</TimeChanged>
<TimeCreated>65808,29259.997335</TimeCreated>

<Parameter name="XMLNAME">
<Default>AGIRH_Formations_BatchIn</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>AGIRH.Formations.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>AGIRH_Formations_BatchIn</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Formations.BatchInD</DataLocation>
<DefaultData>BatchInDefaultData</DefaultData>
<IdLocation>^AGIRH.Formations.BatchInD</IdLocation>
<IndexLocation>^AGIRH.Formations.BatchInI</IndexLocation>
<StreamLocation>^AGIRH.Formations.BatchInS</StreamLocation>
<Data name="BatchInDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Formations">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Formations'
on 2021-03-05 at 09:57:42.237 [2021-03-05 08:57:42.237 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65808,35862.238165</TimeChanged>
<TimeCreated>65808,29238.908067</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>AGIRH.Formations.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Matricule = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NuméroFormation = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.IntituléFormation = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateDébut = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateFin = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CommentaireFormation = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.Matricule, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NuméroFormation, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.IntituléFormation, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateDébut, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateFin, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CommentaireFormation, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("AGIRH.Formations.BatchIn")=""
	Set pClasses("AGIRH.Formations.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="AGIRH.Formations" type="delimited" char_encoding="UTF-8" targetClassname="AGIRH.Formations.Record" batchClass="AGIRH.Formations.BatchIn" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Matricule" datatype="%String">
  </Field>
  <Field name="NuméroFormation" datatype="%String">
  </Field>
  <Field name="IntituléFormation" required="0" ignored="0" datatype="%String" params="MAXLEN=100" repeating="0">
  </Field>
  <Field name="DateDébut" datatype="%String">
  </Field>
  <Field name="DateFin" datatype="%String">
  </Field>
  <Field name="CommentaireFormation" required="0" ignored="0" datatype="%String" params="MAXLEN=100" repeating="0">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="AGIRH.Formations.Record">
<Description>
RECORDMAP: Generated from RecordMap 'AGIRH.Formations'
on 2021-03-05 at 09:57:42.222 [2021-03-05 08:57:42.222 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65808,35862.228934</TimeChanged>
<TimeCreated>65808,35862.222032</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Matricule">
<Type>%String</Type>
</Property>

<Property name="NuméroFormation">
<Type>%String</Type>
</Property>

<Property name="IntituléFormation">
<Type>%String</Type>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="DateDébut">
<Type>%String</Type>
</Property>

<Property name="DateFin">
<Type>%String</Type>
</Property>

<Property name="CommentaireFormation">
<Type>%String</Type>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="%ParentBatch">
<Type>AGIRH.Formations.BatchIn</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Formations.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^AGIRH.Formations.RecordD</IdLocation>
<IndexLocation>^AGIRH.Formations.RecordI</IndexLocation>
<StreamLocation>^AGIRH.Formations.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Matricule</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>IntituléFormation</Value>
</Value>
<Value name="5">
<Value>DateDébut</Value>
</Value>
<Value name="6">
<Value>DateFin</Value>
</Value>
<Value name="7">
<Value>CommentaireFormation</Value>
</Value>
<Value name="8">
<Value>%ParentBatch</Value>
</Value>
<Value name="9">
<Value>NuméroFormation</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Handicap.BatchIn">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Handicap'
on 2021-03-05 at 07:15:34.637 [2021-03-05 06:15:34.637 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65808,26134.637522</TimeChanged>
<TimeCreated>65807,48056.518748</TimeCreated>

<Parameter name="XMLNAME">
<Default>AGIRH_Handicap_BatchIn</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>AGIRH.Handicap.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>AGIRH_Handicap_BatchIn</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Handicap.BatchInD</DataLocation>
<DefaultData>BatchInDefaultData</DefaultData>
<IdLocation>^AGIRH.Handicap.BatchInD</IdLocation>
<IndexLocation>^AGIRH.Handicap.BatchInI</IndexLocation>
<StreamLocation>^AGIRH.Handicap.BatchInS</StreamLocation>
<Data name="BatchInDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Handicap">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Handicap'
on 2021-03-05 at 07:15:34.645 [2021-03-05 06:15:34.645 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65808,26134.646695</TimeChanged>
<TimeCreated>65807,48026.12719</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>AGIRH.Handicap.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Matricule = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NatureHandicap = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.TauxHandicap = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CatégorieHandicap = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléCatégorieHandicap = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateEffetHandicap = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateFinHandicap = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.Matricule, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NatureHandicap, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.TauxHandicap, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CatégorieHandicap, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléCatégorieHandicap, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateEffetHandicap, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateFinHandicap, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("AGIRH.Handicap.BatchIn")=""
	Set pClasses("AGIRH.Handicap.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="AGIRH.Handicap" type="delimited" char_encoding="UTF-8" targetClassname="AGIRH.Handicap.Record" batchClass="AGIRH.Handicap.BatchIn" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Matricule" datatype="%String">
  </Field>
  <Field name="NatureHandicap" datatype="%String">
  </Field>
  <Field name="TauxHandicap" datatype="%String">
  </Field>
  <Field name="CatégorieHandicap" datatype="%String">
  </Field>
  <Field name="LibelléCatégorieHandicap" datatype="%String">
  </Field>
  <Field name="DateEffetHandicap" datatype="%String">
  </Field>
  <Field name="DateFinHandicap" datatype="%String">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="AGIRH.Handicap.Record">
<Description>
RECORDMAP: Generated from RecordMap 'AGIRH.Handicap'
on 2021-03-05 at 07:15:34.626 [2021-03-05 06:15:34.626 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65808,26134.636103</TimeChanged>
<TimeCreated>65808,26134.626749</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Matricule">
<Type>%String</Type>
</Property>

<Property name="NatureHandicap">
<Type>%String</Type>
</Property>

<Property name="TauxHandicap">
<Type>%String</Type>
</Property>

<Property name="CatégorieHandicap">
<Type>%String</Type>
</Property>

<Property name="LibelléCatégorieHandicap">
<Type>%String</Type>
</Property>

<Property name="DateEffetHandicap">
<Type>%String</Type>
</Property>

<Property name="DateFinHandicap">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>AGIRH.Handicap.BatchIn</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Handicap.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^AGIRH.Handicap.RecordD</IdLocation>
<IndexLocation>^AGIRH.Handicap.RecordI</IndexLocation>
<StreamLocation>^AGIRH.Handicap.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Matricule</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>TauxHandicap</Value>
</Value>
<Value name="5">
<Value>CatégorieHandicap</Value>
</Value>
<Value name="6">
<Value>LibelléCatégorieHandicap</Value>
</Value>
<Value name="7">
<Value>DateEffetHandicap</Value>
</Value>
<Value name="8">
<Value>DateFinHandicap</Value>
</Value>
<Value name="9">
<Value>%ParentBatch</Value>
</Value>
<Value name="10">
<Value>NatureHandicap</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Nomenclature.BatchIn">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Nomenclature'
on 2021-03-10 at 19:24:15.042 [2021-03-10 18:24:15.042 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65813,69855.144954</TimeChanged>
<TimeCreated>65813,69846.599924</TimeCreated>

<Parameter name="XMLNAME">
<Default>AGIRH_Nomenclature_BatchIn</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>AGIRH.Nomenclature.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>AGIRH_Nomenclature_BatchIn</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Nomenclature.BatchInD</DataLocation>
<DefaultData>BatchInDefaultData</DefaultData>
<IdLocation>^AGIRH.Nomenclature.BatchInD</IdLocation>
<IndexLocation>^AGIRH.Nomenclature.BatchInI</IndexLocation>
<StreamLocation>^AGIRH.Nomenclature.BatchInS</StreamLocation>
<Data name="BatchInDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Nomenclature">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Nomenclature'
on 2021-03-10 at 19:24:15.052 [2021-03-10 18:24:15.052 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65813,69855.053801</TimeChanged>
<TimeCreated>65813,69817.085887</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>AGIRH.Nomenclature.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, "")
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Type = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Code = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléLong = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléCourt = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: pObject.Type,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Code,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.LibelléLong,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.LibelléCourt,1: ""),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("AGIRH.Nomenclature.BatchIn")=""
	Set pClasses("AGIRH.Nomenclature.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="AGIRH.Nomenclature" type="delimited" char_encoding="UTF-8" targetClassname="AGIRH.Nomenclature.Record" batchClass="AGIRH.Nomenclature.BatchIn" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Type" datatype="%String">
  </Field>
  <Field name="Code" datatype="%String">
  </Field>
  <Field name="LibelléLong" datatype="%String">
  </Field>
  <Field name="LibelléCourt" datatype="%String">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="AGIRH.Nomenclature.Record">
<Description>
RECORDMAP: Generated from RecordMap 'AGIRH.Nomenclature'
on 2021-03-10 at 19:24:15.035 [2021-03-10 18:24:15.035 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65813,69855.154895</TimeChanged>
<TimeCreated>65813,69855.035873</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Type">
<Type>%String</Type>
</Property>

<Property name="Code">
<Type>%String</Type>
</Property>

<Property name="LibelléLong">
<Type>%String</Type>
</Property>

<Property name="LibelléCourt">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>AGIRH.Nomenclature.BatchIn</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Nomenclature.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^AGIRH.Nomenclature.RecordD</IdLocation>
<IndexLocation>^AGIRH.Nomenclature.RecordI</IndexLocation>
<StreamLocation>^AGIRH.Nomenclature.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Type</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>LibelléLong</Value>
</Value>
<Value name="5">
<Value>LibelléCourt</Value>
</Value>
<Value name="6">
<Value>%ParentBatch</Value>
</Value>
<Value name="7">
<Value>Code</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Personnes.BatchIn">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Personnes'
on 2021-03-05 at 07:15:52.831 [2021-03-05 06:15:52.831 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65808,26152.831647</TimeChanged>
<TimeCreated>65806,55420.150992</TimeCreated>

<Parameter name="XMLNAME">
<Default>AGIRH_Personnes_BatchIn</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>AGIRH.Personnes.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>AGIRH_Personnes_BatchIn</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Personnes.BatchInD</DataLocation>
<DefaultData>BatchInDefaultData</DefaultData>
<IdLocation>^AGIRH.Personnes.BatchInD</IdLocation>
<IndexLocation>^AGIRH.Personnes.BatchInI</IndexLocation>
<StreamLocation>^AGIRH.Personnes.BatchInS</StreamLocation>
<Data name="BatchInDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRH.Personnes">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'AGIRH.Personnes'
on 2021-03-05 at 07:15:52.846 [2021-03-05 06:15:52.846 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65808,26152.848235</TimeChanged>
<TimeCreated>65805,51745.840638</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>AGIRH.Personnes.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Matricule = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NomUsage = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NomFamille = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Prénom = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateNaissance = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeSexe = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NumINSEE = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeTitre = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeSituationFamiliale = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelSituationFamiliale = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléNationalitéactuelle = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CommunedeNaissance = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléPaysdeNaissance = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NombreEnfants = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NumérodeVoie = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.ExtensiondeVoie = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.TypedeVoie = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibellédeVoie = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.ComplémentAdresse2 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodePostal = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléCommune = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Téléphone1 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Téléphone2 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Mail = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Date1èreEntréedansHôpital = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Métier = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléMétier = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléEmploi = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.TempsPartielNumérateur = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléMotifTpsPartiel = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateEffetContrat = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Statut = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléStatut = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateDernierDépart = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DernierModeSortie = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléDernierDépart = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Grade = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléGrade = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.Matricule, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NomUsage, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NomFamille, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Prénom, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateNaissance, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeSexe, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NumINSEE, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeTitre, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeSituationFamiliale, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelSituationFamiliale, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléNationalitéactuelle, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CommunedeNaissance, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléPaysdeNaissance, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NombreEnfants, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NumérodeVoie, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.ExtensiondeVoie, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.TypedeVoie, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibellédeVoie, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.ComplémentAdresse2, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodePostal, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléCommune, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Téléphone1, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Téléphone2, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Mail, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Date1èreEntréedansHôpital, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Métier, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléMétier, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléEmploi, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.TempsPartielNumérateur, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléMotifTpsPartiel, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateEffetContrat, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Statut, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléStatut, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateDernierDépart, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DernierModeSortie, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléDernierDépart, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Grade, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléGrade, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("AGIRH.Personnes.BatchIn")=""
	Set pClasses("AGIRH.Personnes.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="AGIRH.Personnes" type="delimited" char_encoding="UTF-8" targetClassname="AGIRH.Personnes.Record" batchClass="AGIRH.Personnes.BatchIn" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Matricule" datatype="%String">
  </Field>
  <Field name="NomUsage" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="NomFamille" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Prénom" datatype="%String">
  </Field>
  <Field name="DateNaissance" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="CodeSexe" datatype="%String">
  </Field>
  <Field name="NumINSEE" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="CodeTitre" datatype="%String">
  </Field>
  <Field name="CodeSituationFamiliale" datatype="%String">
  </Field>
  <Field name="LibelSituationFamiliale" datatype="%String">
  </Field>
  <Field name="LibelléNationalitéactuelle" datatype="%String">
  </Field>
  <Field name="CommunedeNaissance" datatype="%String">
  </Field>
  <Field name="LibelléPaysdeNaissance" datatype="%String">
  </Field>
  <Field name="NombreEnfants" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="NumérodeVoie" datatype="%String">
  </Field>
  <Field name="ExtensiondeVoie" datatype="%String">
  </Field>
  <Field name="TypedeVoie" datatype="%String">
  </Field>
  <Field name="LibellédeVoie" datatype="%String">
  </Field>
  <Field name="ComplémentAdresse2" required="0" ignored="0" datatype="%String" params="MAXLEN=100" repeating="0">
  </Field>
  <Field name="CodePostal" datatype="%String">
  </Field>
  <Field name="LibelléCommune" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Téléphone1" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Téléphone2" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Mail" datatype="%String">
  </Field>
  <Field name="Date1èreEntréedansHôpital" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Métier" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléMétier" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléEmploi" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="TempsPartielNumérateur" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléMotifTpsPartiel" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="DateEffetContrat" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Statut" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléStatut" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="DateDernierDépart" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="DernierModeSortie" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléDernierDépart" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Grade" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléGrade" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="AGIRH.Personnes.Record">
<Description>
RECORDMAP: Generated from RecordMap 'AGIRH.Personnes'
on 2021-03-05 at 07:15:52.780 [2021-03-05 06:15:52.780 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65808,26152.829506</TimeChanged>
<TimeCreated>65808,26152.780464</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Matricule">
<Type>%String</Type>
</Property>

<Property name="NomUsage">
<Type>%String</Type>
</Property>

<Property name="NomFamille">
<Type>%String</Type>
</Property>

<Property name="Prénom">
<Type>%String</Type>
</Property>

<Property name="DateNaissance">
<Type>%String</Type>
</Property>

<Property name="CodeSexe">
<Type>%String</Type>
</Property>

<Property name="NumINSEE">
<Type>%String</Type>
</Property>

<Property name="CodeTitre">
<Type>%String</Type>
</Property>

<Property name="CodeSituationFamiliale">
<Type>%String</Type>
</Property>

<Property name="LibelSituationFamiliale">
<Type>%String</Type>
</Property>

<Property name="LibelléNationalitéactuelle">
<Type>%String</Type>
</Property>

<Property name="CommunedeNaissance">
<Type>%String</Type>
</Property>

<Property name="LibelléPaysdeNaissance">
<Type>%String</Type>
</Property>

<Property name="NombreEnfants">
<Type>%String</Type>
</Property>

<Property name="NumérodeVoie">
<Type>%String</Type>
</Property>

<Property name="ExtensiondeVoie">
<Type>%String</Type>
</Property>

<Property name="TypedeVoie">
<Type>%String</Type>
</Property>

<Property name="LibellédeVoie">
<Type>%String</Type>
</Property>

<Property name="ComplémentAdresse2">
<Type>%String</Type>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="CodePostal">
<Type>%String</Type>
</Property>

<Property name="LibelléCommune">
<Type>%String</Type>
</Property>

<Property name="Téléphone1">
<Type>%String</Type>
</Property>

<Property name="Téléphone2">
<Type>%String</Type>
</Property>

<Property name="Mail">
<Type>%String</Type>
</Property>

<Property name="Date1èreEntréedansHôpital">
<Type>%String</Type>
</Property>

<Property name="Métier">
<Type>%String</Type>
</Property>

<Property name="LibelléMétier">
<Type>%String</Type>
</Property>

<Property name="LibelléEmploi">
<Type>%String</Type>
</Property>

<Property name="TempsPartielNumérateur">
<Type>%String</Type>
</Property>

<Property name="LibelléMotifTpsPartiel">
<Type>%String</Type>
</Property>

<Property name="DateEffetContrat">
<Type>%String</Type>
</Property>

<Property name="Statut">
<Type>%String</Type>
</Property>

<Property name="LibelléStatut">
<Type>%String</Type>
</Property>

<Property name="DateDernierDépart">
<Type>%String</Type>
</Property>

<Property name="DernierModeSortie">
<Type>%String</Type>
</Property>

<Property name="LibelléDernierDépart">
<Type>%String</Type>
</Property>

<Property name="Grade">
<Type>%String</Type>
</Property>

<Property name="LibelléGrade">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>AGIRH.Personnes.BatchIn</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^AGIRH.Personnes.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^AGIRH.Personnes.RecordD</IdLocation>
<IndexLocation>^AGIRH.Personnes.RecordI</IndexLocation>
<StreamLocation>^AGIRH.Personnes.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Matricule</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>Nomdefamille</Value>
</Value>
<Value name="5">
<Value>Prénom</Value>
</Value>
<Value name="6">
<Value>Datedenaissance</Value>
</Value>
<Value name="7">
<Value>CodeSexe</Value>
</Value>
<Value name="8">
<Value>NINSEEComplet</Value>
</Value>
<Value name="9">
<Value>CodeTitre</Value>
</Value>
<Value name="10">
<Value>CodeSituationFamiliale</Value>
</Value>
<Value name="11">
<Value>LibelSituationFamiliale</Value>
</Value>
<Value name="12">
<Value>LibelléNationalitéactuelle</Value>
</Value>
<Value name="13">
<Value>CommunedeNaissance</Value>
</Value>
<Value name="14">
<Value>LibelléPaysdeNaissance</Value>
</Value>
<Value name="15">
<Value>Nbretotaldenfants</Value>
</Value>
<Value name="16">
<Value>NumérodeVoie</Value>
</Value>
<Value name="17">
<Value>ExtensiondeVoie</Value>
</Value>
<Value name="18">
<Value>TypedeVoie</Value>
</Value>
<Value name="19">
<Value>LibellédeVoie</Value>
</Value>
<Value name="20">
<Value>ComplémentadresseNouv</Value>
</Value>
<Value name="21">
<Value>CodePostal</Value>
</Value>
<Value name="22">
<Value>LibellédelaCommune</Value>
</Value>
<Value name="23">
<Value>NdeTéléphone1</Value>
</Value>
<Value name="24">
<Value>NdeTéléphone2</Value>
</Value>
<Value name="25">
<Value>Mail</Value>
</Value>
<Value name="26">
<Value>Date1èreEntréedansHôpital</Value>
</Value>
<Value name="27">
<Value>LibelléduMétier</Value>
</Value>
<Value name="28">
<Value>LibelléEmploi</Value>
</Value>
<Value name="29">
<Value>TempsPartielNumérateur</Value>
</Value>
<Value name="30">
<Value>LibelléMotifTpsPartiel</Value>
</Value>
<Value name="31">
<Value>DateEffetContrat</Value>
</Value>
<Value name="32">
<Value>Statut</Value>
</Value>
<Value name="33">
<Value>DateDernierDépart</Value>
</Value>
<Value name="34">
<Value>DernierModeSortie</Value>
</Value>
<Value name="35">
<Value>LibelléDernierDépart</Value>
</Value>
<Value name="36">
<Value>Grade</Value>
</Value>
<Value name="37">
<Value>LibelléduGrade</Value>
</Value>
<Value name="38">
<Value>Nomdusage</Value>
</Value>
<Value name="39">
<Value>NomUsage</Value>
</Value>
<Value name="40">
<Value>NomFamille</Value>
</Value>
<Value name="41">
<Value>DateNaissance</Value>
</Value>
<Value name="42">
<Value>NumINSEE</Value>
</Value>
<Value name="43">
<Value>NombreEnfants</Value>
</Value>
<Value name="44">
<Value>ComplémentAdresse2</Value>
</Value>
<Value name="45">
<Value>LibelléCommune</Value>
</Value>
<Value name="46">
<Value>Téléphone1</Value>
</Value>
<Value name="47">
<Value>Téléphone2</Value>
</Value>
<Value name="48">
<Value>LibelléMétier</Value>
</Value>
<Value name="49">
<Value>LibelléGrade</Value>
</Value>
<Value name="50">
<Value>Métier</Value>
</Value>
<Value name="51">
<Value>%ParentBatch</Value>
</Value>
<Value name="52">
<Value>LibelléStatut</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="AGIRHtoCHRONOS.Nomenclature">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65814,34996.241245</TimeChanged>
<TimeCreated>65814,34260.447235</TimeCreated>
<DependsOn>AGIRH.Nomenclature.BatchIn,CHRONOS.Nomenclature.BatchOut</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='AGIRH.Nomenclature.BatchIn' targetClass='CHRONOS.Nomenclature.BatchOut' create='new' language='objectscript' >
<foreach property='source.Records()' key='indice' >
<if condition='..In(source.Records.(indice).Type,"GRADES,PAFEMPL,PAFMETI,PSTSTAT,TUFETAB,TUFPOLE,TUFUFON")' >
<true>
<assign value='..Lookup("AGIRH_CHRONOS_Types",$zstrip(source.Records.(indice).Type,"&gt;W"))' property='target.Records.(indice).Type' action='set' />
<assign value='$zstrip(source.Records.(indice).Code,"&gt;W")' property='target.Records.(indice).Code' action='set' />
<assign value='$zstrip(source.Records.(indice).LibelléLong,"&gt;W")' property='target.Records.(indice).LibelléLong' action='set' />
<assign value='$zstrip(source.Records.(indice).LibelléCourt,"&gt;W")' property='target.Records.(indice).LibelléCourt' action='set' />
</true>
</if>
</foreach>
</transform>
]]></Data>
</XData>
</Class>


<Class name="AGIRHtoKITRY.Absences">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65811,52872.499824</TimeChanged>
<TimeCreated>65811,52617.846265</TimeCreated>
<DependsOn>AGIRH.Absences.BatchIn,KITRY.Absences.BatchOut</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='AGIRH.Absences.BatchIn' targetClass='KITRY.Absences.BatchOut' create='new' language='objectscript' >
<foreach property='source.Records()' key='indice' >
<if condition='indice&gt;1' >
<true>
<assign value='$zstrip(source.Records.(indice).Matricule,"&gt;W")' property='target.Records.(indice).Matricule' action='set' />
<assign value='$zstrip(source.Records.(indice).CodeAbsenceQualifiée,"&gt;W")' property='target.Records.(indice).CodeAbsenceQualifiée' action='set' />
<assign value='$zstrip(source.Records.(indice).LibelléAbsenceQualifiée,"&gt;W")' property='target.Records.(indice).LibelléAbsenceQualifiée' action='set' />
<assign value='..ConvertDateTime($E(source.Records.(indice).DateDébutAbsence,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateDébutAbsence' action='set' />
<assign value='..ConvertDateTime($E(source.Records.(indice).DateFinAbsenceCalculée,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateFinAbsenceCalculée' action='set' />
</true>
</if>
</foreach>
</transform>
]]></Data>
</XData>
</Class>


<Class name="AGIRHtoKITRY.Accidents">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65811,50423.614255</TimeChanged>
<TimeCreated>65807,71171.256498</TimeCreated>
<DependsOn>AGIRH.Accidents.BatchIn,KITRY.Accidents.BatchOut</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='AGIRH.Accidents.BatchIn' targetClass='KITRY.Accidents.BatchOut' create='new' language='objectscript' >
<foreach property='source.Records()' key='indice' >
<if condition='indice&gt;1' >
<true>
<assign value='$zstrip(source.Records.(indice).Matricule,"&gt;W")' property='target.Records.(indice).Matricule' action='set' />
<assign value='..ConvertDateTime($E(source.Records.(indice).DateEffetAT,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateAT' action='set' />
<if condition='source.Records.(indice).HeureAT="0"' >
<true>
<assign value='"00:00"' property='target.Records.(indice).HeureAT' action='set' />
</true>
<false>
<assign value='$number(source.Records.(indice).HeureAT)\60' property='target.Records.(indice).HeureAT' action='set' disabled='1' />
<assign value='$number(source.Records.(indice).HeureAT)\60' property='H' action='set' />
<assign value='$number(source.Records.(indice).HeureAT)#60' property='M' action='set' />
<assign value='$extract("0"_H,*-1)_$extract("0"_H,*)_":"_$extract("0"_M,*-1)_$extract("0"_M,*)' property='Tmp' action='set' />
<assign value='Tmp' property='target.Records.(indice).HeureAT' action='set' />
</false>
</if>
<assign value='source.Records.(indice).NatureAT' property='target.Records.(indice).CodeTypeAT' action='set' />
<assign value='$zstrip(source.Records.(indice).LibelléNatureAT,"&gt;W")' property='target.Records.(indice).LibelléTypeAT' action='set' />
<assign value='$zstrip(source.Records.(indice).CommentaireAT,"&gt;W")' property='target.Records.(indice).Circonstances' action='set' />
<assign value='..ConvertDateTime($E(source.Records.(indice).DateduCertificatMédical,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateDéclaration' action='set' />
<assign value='source.Records.(indice).ElémentMatérielAT' property='target.Records.(indice).CodeElemMat1' action='set' />
<assign value='$zstrip(source.Records.(indice).LibelléElémentMatérielAT,"&gt;W")' property='target.Records.(indice).LibElemMat1' action='set' />
<assign value='source.Records.(indice).SiègeAT' property='target.Records.(indice).CodeSiège1' action='set' />
<assign value='$zstrip(source.Records.(indice).LibelléSiègeAT,"&gt;W")' property='target.Records.(indice).LibelléSiège1' action='set' />
</true>
</if>
</foreach>
</transform>
]]></Data>
</XData>
</Class>


<Class name="AGIRHtoKITRY.Affectations">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65808,27989.607068</TimeChanged>
<TimeCreated>65806,26764.171007</TimeCreated>
<DependsOn>AGIRH.Affectations.BatchIn,KITRY.Affectations.BatchOut</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='AGIRH.Affectations.BatchIn' targetClass='KITRY.Affectations.BatchOut' create='new' language='objectscript' >
<foreach property='source.Records()' key='indice' >
<if condition='indice&gt;1' >
<true>
<assign value='$zstrip(source.Records.(indice).Matricule,"&gt;W")' property='target.Records.(indice).Matricule' action='set' />
<assign value='"0"' property='target.Records.(indice).Racine' action='set' />
<assign value='$zstrip(source.Records.(indice).UF,"&gt;W")' property='target.Records.(indice).UF' action='set' />
<assign value='""' property='target.Records.(indice).TypeUF' action='set' />
<assign value='..ConvertDateTime($E(source.Records.(indice).DateEffetAffectation,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateDébut' action='set' />
<if condition='$E(source.Records.(indice).DateFinAffectation,1,4)="3000"' >
<true>
<assign value='""' property='target.Records.(indice).DateFin' action='set' />
</true>
<false>
<assign value='..ConvertDateTime($E(source.Records.(indice).DateFinAffectation,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateFin' action='set' />
</false>
</if>
<if condition='source.Records.(indice).TypeAffectation="P"' >
<true>
<assign value='..Round($number(source.Records.(indice).TempsdeAffPrincnum,",")*100,1)' property='target.Records.(indice).Pourcentage' action='set' />
</true>
<false>
<assign value='..Round($number(source.Records.(indice).TempsdeAffSecnum,",")*100,1)' property='target.Records.(indice).Pourcentage' action='set' />
</false>
</if>
</true>
</if>
</foreach>
</transform>
]]></Data>
</XData>
</Class>


<Class name="AGIRHtoKITRY.Arborescence">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65806,72317.031083</TimeChanged>
<TimeCreated>65805,63268.97909</TimeCreated>
<DependsOn>AGIRH.Arborescence.BatchIn,KITRY.Arborescence.BatchOut</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='AGIRH.Arborescence.BatchIn' targetClass='KITRY.Arborescence.BatchOut' create='new' language='objectscript' >
<foreach property='source.Records()' key='indice' >
<if condition='indice&gt;1' >
<true>
<assign value='"52"' property='target.Records.(indice).Etablissement' action='set' />
<assign value='$zstrip(source.Records.(indice).UF,"&gt;W")' property='target.Records.(indice).UF' action='set' />
<assign value='$zstrip(..ToUpper(source.Records.(indice).LibelléUF),"&gt;W")' property='target.Records.(indice).LibelléUF' action='set' />
<assign value='..ConvertDateTime($E(source.Records.(indice).DateDébutUF,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateDébutUF' action='set' />
<assign value='..ConvertDateTime($E(source.Records.(indice).DateFinUF,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateFinUF' action='set' />
<assign value='"52"_source.Records.(indice).EtablissementGéo' property='target.Records.(indice).EtablissementGéo' action='set' />
<assign value='$zstrip(..ToUpper(source.Records.(indice).LibelléEtabGéo),"&gt;W")' property='target.Records.(indice).LibelléEtabGéo' action='set' />
<assign value='$zstrip(source.Records.(indice).Pôle,"&gt;W")' property='target.Records.(indice).Pôle' action='set' />
<assign value='$zstrip(..ToUpper(source.Records.(indice).LibelléPôle),"&gt;W")' property='target.Records.(indice).LibelléPôle' action='set' />
</true>
</if>
</foreach>
</transform>
]]></Data>
</XData>
</Class>


<Class name="AGIRHtoKITRY.Enfants">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65808,49425.614509</TimeChanged>
<TimeCreated>65808,48796.288773</TimeCreated>
<DependsOn>AGIRH.Enfants.BatchIn,KITRY.Enfants.BatchOut</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='AGIRH.Enfants.BatchIn' targetClass='KITRY.Enfants.BatchOut' create='new' language='objectscript' >
<foreach property='source.Records()' key='indice' >
<if condition='indice&gt;1' >
<true>
<assign value='$zstrip(source.Records.(indice).Matricule,"&gt;W")' property='target.Records.(indice).Matricule' action='set' />
<assign value='..ReplaceStr($zstrip(source.Records.(indice).NomPrénomEnfant,"&gt;W"),"  "," ")' property='target.Records.(indice).NomPrénomEnfant' action='set' />
<assign value='..ConvertDateTime($E(source.Records.(indice).DateNaissanceEnfant,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateNaissanceEnfant' action='set' />
<assign value='source.Records.(indice).SexeEnfant' property='target.Records.(indice).SexeEnfant' action='set' />
<if condition='source.Records.(indice).CodeSuspensionEnfant="1"' >
<true>
<assign value='"01/01/1900"' property='target.Records.(indice).DateDécèsEnfant' action='set' />
</true>
<false>
<assign value='""' property='target.Records.(indice).DateDécèsEnfant' action='set' />
</false>
</if>
<assign value='$zstrip(source.Records.(indice).CodeSFT,"&gt;W")' property='target.Records.(indice).CodeACharge' action='set' />
<assign value='$zstrip(source.Records.(indice).LibelléSFT,"&gt;W")' property='target.Records.(indice).LibelléACharge' action='set' />
</true>
</if>
</foreach>
</transform>
]]></Data>
</XData>
</Class>


<Class name="AGIRHtoKITRY.Formations">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65808,35190.690524</TimeChanged>
<TimeCreated>65808,29497.253915</TimeCreated>
<DependsOn>AGIRH.Formations.BatchIn,KITRY.Formations.BatchOut</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='AGIRH.Formations.BatchIn' targetClass='KITRY.Formations.BatchOut' create='new' language='objectscript' >
<foreach property='source.Records()' key='indice' >
<if condition='indice&gt;1' >
<true>
<assign value='$zstrip(source.Records.(indice).Matricule,"&gt;W")' property='target.Records.(indice).Matricule' action='set' />
<if condition='$zstrip(source.Records.(indice).NuméroFormation,"&gt;W")=""' >
<true>
<assign value='"000000"' property='target.Records.(indice).CodeFormation' action='set' />
</true>
<false>
<assign value='$zstrip(source.Records.(indice).NuméroFormation,"&gt;W")' property='target.Records.(indice).CodeFormation' action='set' />
</false>
</if>
<assign value='$zstrip(source.Records.(indice).IntituléFormation,"&gt;W")' property='target.Records.(indice).IntituléFormation' action='set' />
<assign value='..ConvertDateTime($E(source.Records.(indice).DateDébut,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateDébut' action='set' />
<assign value='..ConvertDateTime($E(source.Records.(indice).DateFin,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateFin' action='set' />
<assign value='$zstrip(source.Records.(indice).CommentaireFormation,"&gt;W")' property='target.Records.(indice).Commentaire' action='set' />
</true>
</if>
</foreach>
</transform>
]]></Data>
</XData>
</Class>


<Class name="AGIRHtoKITRY.Handicap">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65807,48778.909025</TimeChanged>
<TimeCreated>65807,48411.59359</TimeCreated>
<DependsOn>AGIRH.Handicap.BatchIn,KITRY.Handicap.BatchOut</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='AGIRH.Handicap.BatchIn' targetClass='KITRY.Handicap.BatchOut' create='new' language='objectscript' >
<foreach property='source.Records()' key='indice' >
<if condition='indice&gt;1' >
<true>
<assign value='$zstrip(source.Records.(indice).Matricule,"&gt;W")' property='target.Records.(indice).Matricule' action='set' />
<if condition='..In($zstrip(source.Records.(indice).NatureHandicap,"&gt;W"),"C,01")' >
<true>
<assign value='"O"' property='target.Records.(indice).RQTH' action='set' />
</true>
<false>
<assign value='"N"' property='target.Records.(indice).RQTH' action='set' />
</false>
</if>
<assign value='source.Records.(indice).NatureHandicap' property='target.Records.(indice).CatégorieInvalidité' action='set' />
<assign value='source.Records.(indice).TauxHandicap' property='target.Records.(indice).TauxInvalidité' action='set' />
<assign value='source.Records.(indice).CatégorieHandicap' property='target.Records.(indice).CodeHandicap' action='set' />
<assign value='source.Records.(indice).LibelléCatégorieHandicap' property='target.Records.(indice).LibelléHandicap' action='set' />
<assign value='..ConvertDateTime($E(source.Records.(indice).DateEffetHandicap,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateDébutRQTH' action='set' />
<assign value='..ConvertDateTime($E(source.Records.(indice).DateFinHandicap,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateFinRQTH' action='set' />
</true>
</if>
</foreach>
</transform>
]]></Data>
</XData>
</Class>


<Class name="AGIRHtoKITRY.Personnes">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65815,37308.46878</TimeChanged>
<TimeCreated>65806,55493.634583</TimeCreated>
<DependsOn>AGIRH.Personnes.BatchIn,KITRY.Personnes.BatchOut</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='AGIRH.Personnes.BatchIn' targetClass='KITRY.Personnes.BatchOut' create='new' language='objectscript' >
<foreach property='source.Records()' key='indice' >
<if condition='indice&gt;1' >
<true>
<assign value='source.Records.(indice).Matricule' property='target.Records.(indice).Matricule' action='set' />
<assign value='$zstrip(source.Records.(indice).NomUsage,"&gt;W")' property='target.Records.(indice).NomUsage' action='set' />
<assign value='$zstrip(source.Records.(indice).NomFamille,"&gt;W")' property='target.Records.(indice).NomFamille' action='set' />
<assign value='$zstrip(source.Records.(indice).Prénom,"&gt;W")' property='target.Records.(indice).Prénom' action='set' />
<assign value='""' property='target.Records.(indice).Prenom2' action='set' />
<assign value='..ConvertDateTime($E(source.Records.(indice).DateNaissance,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateNaissance' action='set' />
<assign value='$zstrip(source.Records.(indice).CodeSexe,"&gt;W")' property='target.Records.(indice).CodeSexe' action='set' />
<assign value='source.Records.(indice).NumINSEE' property='target.Records.(indice).NumINSEE' action='set' />
<assign value='""' property='target.Records.(indice).NumINSEEProv' action='set' />
<assign value='$zstrip(source.Records.(indice).CodeSituationFamiliale,"&gt;W")' property='target.Records.(indice).CodeEtatCivil' action='set' />
<assign value='$zstrip(source.Records.(indice).CodeTitre,"&gt;W")' property='target.Records.(indice).Civilité' action='set' />
<assign value='$zstrip(source.Records.(indice).LibelSituationFamiliale,"&gt;W")' property='target.Records.(indice).LibelléEtatCivil' action='set' />
<assign value='$zstrip(source.Records.(indice).LibelléNationalitéactuelle,"&gt;W")' property='target.Records.(indice).Nationalité' action='set' />
<assign value='$zstrip(source.Records.(indice).CommunedeNaissance,"&gt;W")' property='target.Records.(indice).LieuNaissance' action='set' />
<assign value='$zstrip(source.Records.(indice).LibelléPaysdeNaissance,"&gt;W")' property='target.Records.(indice).PaysNaissance' action='set' />
<assign value='source.Records.(indice).NombreEnfants' property='target.Records.(indice).NombreEnfants' action='set' />
<if condition='$zstrip(source.Records.(indice).ExtensiondeVoie,"&gt;W")=""' >
<true>
<assign value='$zstrip(source.Records.(indice).NumérodeVoie,"&gt;W")_" "_$zstrip(source.Records.(indice).TypedeVoie,"&gt;W")_" "_$zstrip(source.Records.(indice).LibellédeVoie,"&gt;W")' property='target.Records.(indice).Adresse' action='set' />
</true>
<false>
<assign value='$zstrip(source.Records.(indice).NumérodeVoie,"&gt;W")_" "_$zstrip(source.Records.(indice).ExtensiondeVoie,"&gt;W")_" "_$zstrip(source.Records.(indice).TypedeVoie,"&gt;W")_" "_$zstrip(source.Records.(indice).LibellédeVoie,"&gt;W")' property='target.Records.(indice).Adresse' action='set' />
</false>
</if>
<assign value='$zstrip(source.Records.(indice).ComplémentAdresse2,"&gt;W")' property='target.Records.(indice).ComplémentAdresse' action='set' />
<assign value='$zstrip(source.Records.(indice).CodePostal,"&gt;W")' property='target.Records.(indice).CodePostal' action='set' />
<assign value='$zstrip(source.Records.(indice).LibelléCommune,"&gt;W")' property='target.Records.(indice).Commune' action='set' />
<assign value='$zstrip(source.Records.(indice).Téléphone1,"&gt;W")' property='target.Records.(indice).TéléphoneFixe' action='set' />
<assign value='$zstrip(source.Records.(indice).Téléphone2,"&gt;W")' property='target.Records.(indice).TéléphoneGSM' action='set' />
<assign value='$zstrip(source.Records.(indice).Mail,"&gt;W")' property='target.Records.(indice).MailPerso' action='set' />
<assign value='source.Records.(indice).Matricule_"@ch-cotebasque.fr"' property='target.Records.(indice).MailPro' action='set' />
<assign value='""' property='target.Records.(indice).TéléphonePro' action='set' />
<assign value='..ConvertDateTime($E(source.Records.(indice).Date1èreEntréedansHôpital,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateEntréeEtab' action='set' />
<if condition='$zstrip(source.Records.(indice).LibelléMétier,"&gt;W")=""' >
<true>
<assign value='"00000"' property='target.Records.(indice).CodeMétier' action='set' />
</true>
<false>
<assign value='$zstrip(source.Records.(indice).Métier,"&gt;W")' property='target.Records.(indice).CodeMétier' action='set' />
</false>
</if>
<if condition='$zstrip(source.Records.(indice).LibelléMétier,"&gt;W")=""' >
<true>
<assign value='"Non rempli"' property='target.Records.(indice).LibelléMétier' action='set' />
</true>
<false>
<assign value='$zstrip(source.Records.(indice).LibelléMétier,"&gt;W")' property='target.Records.(indice).LibelléMétier' action='set' />
</false>
</if>
<assign value='$zstrip(source.Records.(indice).LibelléEmploi,"&gt;W")' property='target.Records.(indice).LibelléEmploi' action='set' />
<assign value='source.Records.(indice).TempsPartielNumérateur' property='target.Records.(indice).CodeTempsTravail' action='set' />
<assign value='$zstrip(source.Records.(indice).LibelléMotifTpsPartiel,"&gt;W")' property='target.Records.(indice).LibelléTempsTravail' action='set' />
<if condition='source.Records.(indice).TempsPartielNumérateur="100"' >
<true>
<assign value='"100"' property='target.Records.(indice).LibelléTempsTravail' action='set' />
</true>
</if>
<assign value='..Lookup("AGIRH_Statut_Contrat",$zstrip(source.Records.(indice).Statut,"&gt;W"))' property='target.Records.(indice).CodeTypeDeContrat' action='set' />
<if condition='..In(target.Records.(indice).CodeTypeDeContrat,"CDD,CDI")' >
<true>
<assign value='..ConvertDateTime($E(source.Records.(indice).DateEffetContrat,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateDébutContrat' action='set' />
</true>
</if>
<assign value='$zstrip(source.Records.(indice).Statut,"&gt;W")' property='target.Records.(indice).CodeContrat' action='set' />
<if condition='$zstrip(source.Records.(indice).Statut,"&gt;W")="3E"' >
<true>
<assign value='"Contrat Accomp. Emploi"' property='target.Records.(indice).LibelleContrat' action='set' />
</true>
<false>
<assign value='$zstrip(source.Records.(indice).LibelléStatut,"&gt;W")' property='target.Records.(indice).LibelleContrat' action='set' />
</false>
</if>
<if condition='$E(source.Records.(indice).DateDernierDépart,1,4)="3000"' >
<true>
<assign value='""' property='target.Records.(indice).DateSortie' action='set' />
</true>
<false>
<assign value='..ConvertDateTime($E(source.Records.(indice).DateDernierDépart,1,10),"%Y/%m/%d","%d/%m/%Y")' property='target.Records.(indice).DateSortie' action='set' />
</false>
</if>
<assign value='$zstrip(source.Records.(indice).DernierModeSortie,"&gt;W")' property='target.Records.(indice).CodeMotifSortie' action='set' />
<assign value='$zstrip(source.Records.(indice).LibelléDernierDépart,"&gt;W")' property='target.Records.(indice).LibelléMotifSortie' action='set' />
<assign value='""' property='target.Records.(indice).MatriculeManager' action='set' />
<assign value='$zstrip(source.Records.(indice).Grade,"&gt;W")' property='target.Records.(indice).Grade' action='set' />
<assign value='$zstrip(source.Records.(indice).LibelléGrade,"&gt;W")' property='target.Records.(indice).LibelléGrade' action='set' />
</true>
</if>
</foreach>
</transform>
]]></Data>
</XData>
</Class>


<Class name="CHRONOS.Nomenclature.BatchOut">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'CHRONOS.Nomenclature'
on 2021-03-10 at 19:25:26.253 [2021-03-10 18:25:26.253 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65813,69926.295122</TimeChanged>
<TimeCreated>65813,69918.365949</TimeCreated>

<Parameter name="XMLNAME">
<Default>CHRONOS_Nomenclature_BatchOut</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>CHRONOS.Nomenclature.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>CHRONOS_Nomenclature_BatchOut</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^CHRONOS.Nomenclature.BatchOutD</DataLocation>
<DefaultData>BatchOutDefaultData</DefaultData>
<IdLocation>^CHRONOS.Nomenclature.BatchOutD</IdLocation>
<IndexLocation>^CHRONOS.Nomenclature.BatchOutI</IndexLocation>
<StreamLocation>^CHRONOS.Nomenclature.BatchOutS</StreamLocation>
<Data name="BatchOutDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="CHRONOS.Nomenclature">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'CHRONOS.Nomenclature'
on 2021-03-10 at 19:25:26.262 [2021-03-10 18:25:26.262 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65813,69926.263923</TimeChanged>
<TimeCreated>65813,69866.634418</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>CHRONOS.Nomenclature.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, "")
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Type = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Code = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléLong = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléCourt = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: pObject.Type,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Code,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.LibelléLong,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.LibelléCourt,1: ""),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("CHRONOS.Nomenclature.BatchOut")=""
	Set pClasses("CHRONOS.Nomenclature.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="CHRONOS.Nomenclature" type="delimited" char_encoding="UTF-8" targetClassname="CHRONOS.Nomenclature.Record" batchClass="CHRONOS.Nomenclature.BatchOut" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Type" datatype="%String">
  </Field>
  <Field name="Code" datatype="%String">
  </Field>
  <Field name="LibelléLong" datatype="%String">
  </Field>
  <Field name="LibelléCourt" datatype="%String">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="CHRONOS.Nomenclature.Record">
<Description>
RECORDMAP: Generated from RecordMap 'CHRONOS.Nomenclature'
on 2021-03-10 at 19:25:26.247 [2021-03-10 18:25:26.247 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65813,69926.329169</TimeChanged>
<TimeCreated>65813,69926.247467</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Type">
<Type>%String</Type>
</Property>

<Property name="Code">
<Type>%String</Type>
</Property>

<Property name="LibelléLong">
<Type>%String</Type>
</Property>

<Property name="LibelléCourt">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>CHRONOS.Nomenclature.BatchOut</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^CHRONOS.Nomenclature.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^CHRONOS.Nomenclature.RecordD</IdLocation>
<IndexLocation>^CHRONOS.Nomenclature.RecordI</IndexLocation>
<StreamLocation>^CHRONOS.Nomenclature.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Type</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>LibelléLong</Value>
</Value>
<Value name="5">
<Value>LibelléCourt</Value>
</Value>
<Value name="6">
<Value>%ParentBatch</Value>
</Value>
<Value name="7">
<Value>Code</Value>
</Value>
</Data>
</Storage>
</Class>


<Project name="EnsExportProduction_2021-03-12 11-11-41_624+1" LastModified="2021-03-12 11:12:33.444397">
  <ProjectDescription>Studio Project generated from Production 'KSC.PROD.Formation' at 2021-03-12 10:11:41.624 UTC</ProjectDescription>
  <Items>
    <ProjectItem name="AGIRH.Absences" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Absences.BatchIn" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Absences.Record" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Accidents" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Accidents.BatchIn" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Accidents.Record" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Affectations" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Affectations.BatchIn" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Affectations.Record" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Arborescence" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Arborescence.BatchIn" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Arborescence.Record" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Enfants" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Enfants.BatchIn" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Enfants.Record" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Formations" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Formations.BatchIn" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Formations.Record" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Handicap" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Handicap.BatchIn" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Handicap.Record" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Nomenclature" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Nomenclature.BatchIn" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Nomenclature.Record" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Personnes" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Personnes.BatchIn" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRH.Personnes.Record" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRHtoCHRONOS.Nomenclature" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRHtoKITRY.Absences" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRHtoKITRY.Accidents" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRHtoKITRY.Affectations" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRHtoKITRY.Arborescence" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRHtoKITRY.Enfants" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRHtoKITRY.Formations" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRHtoKITRY.Handicap" type="CLS"></ProjectItem>
    <ProjectItem name="AGIRHtoKITRY.Personnes" type="CLS"></ProjectItem>
    <ProjectItem name="CHRONOS.Nomenclature" type="CLS"></ProjectItem>
    <ProjectItem name="CHRONOS.Nomenclature.BatchOut" type="CLS"></ProjectItem>
    <ProjectItem name="CHRONOS.Nomenclature.Record" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.Adapter.Default.File.OutboundAdapter" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.Adapter.HL7.File.OutboundAdapter" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.Adapter.MTS.Message.Header" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.Adapter.MTS.Message.ListOfSegment" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.Adapter.MTS.Message.Message" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.Adapter.MTS.Message.Segment" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.Adapter.MTS.TCP.InboundAdapter" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.Adapter.MTS.TCP.OutboundAdapter" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.BO.HL7.FileOperation" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.BO.MTS.TCPOperation" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.BS.MTS.TCPService" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.BS.MTS.TCPServiceKSC" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoDMP.DMPSeb" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoDOCTOLIB.PBtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v231.ADtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v231.AStoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v231.DStoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v231.HMtoMFN" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v231.NDtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v231.NRtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v231.OD2toADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v231.OPtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v231.ORtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v231.PAtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v231.PBtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v231.PMtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v231.TRtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v231.URtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.ADtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.AStoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.DStoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.EVtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.NDtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.NRtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.OD2toADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.OPtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.ORtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.PAtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.PBtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.PLtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.PMtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.RItoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.SDtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.SVtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.TRtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoHL7v25.URtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoTC.APtoSRM" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoTC.ORtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoTITAN25.ADtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoTITAN25.DStoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoTITAN25.PBtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoTITAN25.RItoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoTITAN25.SDtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.CCOMtoTITAN25.TRtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.Doctolib.A08toTCA31" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.Doctolib.ADTtoA40Direct" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.Doctolib.CCOMADTA28ToTCADTA28" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.Doctolib.CCOMtoHL7v25PMtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.Doctolib.SIU14toDLSIU14" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.Doctolib.SIUtoSRM" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.Doctolib.SIUtoSRMUPD1" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.Doctolib.SIUtoSRMUPD2" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.Doctolib.TCSIUtoCCOMSIU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.Doctolib.TCSIUtoDoctolibSIU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.TCtoCCOM.ADTtoDIG" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.TCtoCCOM.SIUtoSIU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.DTL.TCtoMONDOCTEUR.SIUtoSIU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.Message.ClinicomHL7" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.Message.HPRIMv2HL7" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Common.Tools.RulesFunctions" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.AXBIOCEANtoTC.ORUtoORU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMToAXBIOCEAN.ADTToADM" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS.ORMtoOML" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.ADtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.AStoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.DStoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.EVtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.NDtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.NRtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.ODtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.OPtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.ORtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.PAtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.PBtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.PMtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.RItoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.SDtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.SVtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.TRtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.UFtoMFN" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.URtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.GLIMStoTC.ORUtoORU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.HEMADIALtoTC.ORUtoORU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.TCtoGLIMS.ORMtoOML" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.TCtoVENUS.ORMtoORM" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.TCtoVENUS.ORMtoORMsp" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.DTL.VENUStoTC.ORMtoORM" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.AGENDAtoQPLANNER.IAtoSIU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoCHIMIO.ADtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoCHIMIO.ORtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoCHIMIO.TRtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoGRAAL.ADtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoGRAAL.DStoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoGRAAL.RItoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoGRAAL.SDtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoGRAAL.TRtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.ADtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.DStoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.NDtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.NRtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.OPtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.ORtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.PAtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.PBtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.TRtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.URtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.ADtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.DStoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.NDtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.NRtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.OPtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.PAtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.PBtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.TRtoADT" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoINFOSERV.DStoUP2" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoINFOSERV.TRtoUP2" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoPIMPIRIN.CMtoCESSION" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.COPILOTEtoCCOM.ORUtoORU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.COPILOTEtoTC.ORUtoORU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.HEMOStoTC.HMVtoORU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.IMAGEtoTC.PHtoORU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.OPESIMtoCCOM.ORUtoORU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.OPESIMtoTC.ORUtoORU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.QPLANNERtoCCOM.SIUtoQPA" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.QPLANNERtoCCOM.SIUtoSIU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.TCtoCCOM.SIUtoSIU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.VENUStoCCOM.ORUtoORU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.VENUStoTC.ORUtoORU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.VIEWPOINTtoCCOM.ORUtoORU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.DTL.VIEWPOINTtoTC.ORUtoORU" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.PRD.Prod.RouterCCOMSourceRoutingRule" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.TRN.Prod.RouterCCOMSourceRoutingRule" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.TRN.Prod.RouterCCOMTargetRoutingRule" type="CLS"></ProjectItem>
    <ProjectItem name="ISSAS.Sites.Bayonne.TRN.Prod.RouterDoctolibHL7RoutingRule" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Absences" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Absences.BatchOut" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Absences.Record" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Accidents" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Accidents.BatchOut" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Accidents.Record" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Affectations" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Affectations.BatchOut" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Affectations.Record" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Arborescence" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Arborescence.BatchOut" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Arborescence.Record" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Enfants" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Enfants.BatchOut" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Enfants.Record" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Formations" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Formations.BatchOut" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Formations.Record" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Handicap" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Handicap.BatchOut" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Handicap.Record" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Personnes" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Personnes.BatchOut" type="CLS"></ProjectItem>
    <ProjectItem name="KITRY.Personnes.Record" type="CLS"></ProjectItem>
    <ProjectItem name="KSC.DTL.Alert" type="CLS"></ProjectItem>
    <ProjectItem name="KSC.DTL.Doctolib" type="CLS"></ProjectItem>
    <ProjectItem name="KSC.FileToMail" type="CLS"></ProjectItem>
    <ProjectItem name="KSC.FromVenus1" type="CLS"></ProjectItem>
    <ProjectItem name="KSC.MessageDPT.Record" type="CLS"></ProjectItem>
    <ProjectItem name="KSC.PROD.Formation" type="CLS"></ProjectItem>
    <ProjectItem name="KSC.Regles.RouteurDEPT" type="CLS"></ProjectItem>
    <ProjectItem name="MessageDPT" type="CLS"></ProjectItem>
    <ProjectItem name="Router.GTTRoutingRule" type="CLS"></ProjectItem>
    <ProjectItem name="Router.KitryRoutingRule" type="CLS"></ProjectItem>
    <ProjectItem name="RouteurCCOM.KSCRoutingRule" type="CLS"></ProjectItem>
    <ProjectItem name="RouteurDoctolib.KSCRoutingRule" type="CLS"></ProjectItem>
    <ProjectItem name="User.MessageDPT" type="CLS"></ProjectItem>
    <ProjectItem name="Clinicom.HL7" type="HL7"></ProjectItem>
    <ProjectItem name="ClinicomReceiver.HL7" type="HL7"></ProjectItem>
    <ProjectItem name="HL7v231IHE.HL7" type="HL7"></ProjectItem>
    <ProjectItem name="HL7v25IHE.HL7" type="HL7"></ProjectItem>
    <ProjectItem name="TrakCare.HL7" type="HL7"></ProjectItem>
    <ProjectItem name="EnsExportNotes.EnsExportProduction_2021-03-12 11-11-41_624+1.PTD" type="PTD"></ProjectItem>
  </Items>
</Project>


<Class name="ISSAS.Common.Adapter.Default.File.OutboundAdapter">
<ClassType/>
<IncludeCode>Ensemble</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>EnsLib.File.OutboundAdapter</Super>
<TimeChanged>64418,54397</TimeChanged>
<TimeCreated>62490,54471.357088</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/Adapter/Default/File/OutboundAdapter.xml#3 $</Default>
</Parameter>

<Property name="Charset">
<Description><![CDATA[
Character encoding scheme used for translating output to files. For binary output, use 'Binary'.
Other choices include: <br/>
 Native - the default character encoding of the installed locale of the Ensemble server <br/>
 latin1 - the ISO Latin1 8-bit encoding <br/>
 ISO-8859-1 - the ISO Latin1 8-bit encoding <br/>
 UTF-8 - the Unicode 8-bit encoding <br/>
 Unicode - the Unicode 16-bit encoding  (Little-Endian) <br/>
 UnicodeBig - the Unicode 16-bit encoding (Big-Endian) <br/>
 @&lt;ttable&gt; - &lt;ttable&gt; means a raw InterSystems character translation table name. A prefix of '@' means to use the named table.]]></Description>
<Type>%String</Type>
<InitialExpression>"ISO-8859-1"</InitialExpression>
</Property>

<Property name="OpenTimeout">
<Description>
Number of seconds to wait on each attempt to open the output file.</Description>
<Type>%Numeric</Type>
<InitialExpression>10</InitialExpression>
<Parameter name="MINVAL" value="0"/>
</Property>

<Property name="ConfigKeySharedFilePath">
<Description>
Key to get all settings to connect to a network resource (shared directory)</Description>
<Type>%String</Type>
</Property>

<Parameter name="SETTINGS">
<Default>ConfigKeySharedFilePath</Default>
</Parameter>

<Method name="OnInit">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim tSC As %Status = $$$OK

	// Don't need to check ^ISSAS.Config() global for shared resource => default 'OnInit()' method
	If ($L(..ConfigKeySharedFilePath) <= 0) { Quit ##super() }

	// Connect local device to network resource
	Set tSC = ..ConnectLocalDeviceToNetworkResource()
	If ($$$ISERR(tSC)) { Quit tSC }

	// Call base class process
	Quit ##super()
]]></Implementation>
</Method>

<Method name="OnBeforeProcessExecute">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim tSC As %Status = $$$OK

	// Test directory access with shared network resource (need to reconnect after a server reboot for example)
	Set tSC = ..ConnectLocalDeviceToNetworkResource()
	If ($$$ISERR(tSC)) { Quit tSC }

	Quit tSC
]]></Implementation>
</Method>

<Method name="ConnectLocalDeviceToNetworkResource">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim tSC As %Status = $$$OK

	// Don't need to check ^ISSAS.Config() global for shared resource
	If ($L(..ConfigKeySharedFilePath) <= 0) { Quit $$$OK }

	// Test directory access with shared network resource
	If (($L(..FilePath) > 0) && (##class(%Library.File).DirectoryExists(..FilePath) = 1)) { Quit $$$OK }

	// Connect local device to network resource
	$$$TRACE("Try to connect local device to network resource using '"_..ConfigKeySharedFilePath_"' key")
	Quit ##class(ISSAS.Common.Tools.ClassFile).ConnectLocalDeviceToNetworkResource(..ConfigKeySharedFilePath, 1)
]]></Implementation>
</Method>
</Class>


<Class name="ISSAS.Common.Adapter.HL7.File.OutboundAdapter">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>ISSAS.Common.Adapter.Default.File.OutboundAdapter</Super>
<TimeChanged>64418,54397</TimeChanged>
<TimeCreated>62469,54438.502326</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/Adapter/HL7/File/OutboundAdapter.xml#3 $</Default>
</Parameter>
</Class>


<Class name="ISSAS.Common.Adapter.MTS.Message.Header">
<Super>%SerialObject,%XML.Adaptor</Super>
<TimeChanged>64418,54397</TimeChanged>
<TimeCreated>62446,51247.54978</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/Adapter/MTS/Message/Header.xml#3 $</Default>
</Parameter>

<Property name="MessageType">
<Description>
Message type : DAT, ACK or NAK</Description>
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Property name="SegmentCount">
<Description>
Segment count with 3 characters : min value = 1, max value = 999</Description>
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Property name="MessageId">
<Description>
Message id with 3 characters : min value = 1, max value = 999</Description>
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Property name="IsLastSegment">
<Description>
Last segment flag : END or NLS</Description>
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Property name="DataSize">
<Description>
Data size with 4 characters : min value = 0, max value = 9999</Description>
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Method name="IsValid">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If ((..MessageType '= "DAT") && (..MessageType '= "ACK") && (..MessageType '= "NAK"))
	{ Quit $$$ERROR($$$GeneralError, "MTS Header : message type is not valid ("_..MessageType_")") }

	If ((..SegmentCount <= 0) || (..SegmentCount > 999))
	{ Quit $$$ERROR($$$GeneralError, "MTS Header : segment count is not valid ("_..SegmentCount_")") }

	If ((..MessageId <= 0) || (..MessageId > 999))
	{ Quit $$$ERROR($$$GeneralError, "MTS Header : message id is not valid ("_..MessageId_")") }

	If ((..IsLastSegment '= "END") && (..IsLastSegment '= "NLS"))
	{ Quit $$$ERROR($$$GeneralError, "MTS Header : last segment flag is not valid ("_..IsLastSegment_")") }

	If ((..DataSize < 0) || (..DataSize > 9999))
	{ Quit $$$ERROR($$$GeneralError, "MTS Header : data size is not valid ("_..DataSize_")") }

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="ToString">
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set str = $E(..MessageType, 1, 3)
	Set str = str_$E($TR($J(..SegmentCount, 3), " ", "0"), 1, 3)
	Set str = str_$E($TR($J(..MessageId, 3), " ", "0"), 1, 3)
	Set str = str_$E(..IsLastSegment, 1, 3)
	Set str = str_$E($TR($J(..DataSize, 4), " ", "0"), 1, 4)
	Quit str
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Serial</Type>
<State>HeaderState</State>
<StreamLocation>^ISSAS.Common.Adapte9272.HeaderS</StreamLocation>
<Data name="HeaderState">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>MessageType</Value>
</Value>
<Value name="2">
<Value>SegmentCount</Value>
</Value>
<Value name="3">
<Value>MessageId</Value>
</Value>
<Value name="4">
<Value>IsLastSegment</Value>
</Value>
<Value name="5">
<Value>DataSize</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="ISSAS.Common.Adapter.MTS.Message.ListOfSegment">
<Super>%Library.ListOfObjects,%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64418,54397</TimeChanged>
<TimeCreated>62446,50947.250074</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/Adapter/MTS/Message/ListOfSegment.xml#3 $</Default>
</Parameter>

<Parameter name="ELEMENTTYPE">
<Default>ISSAS.Common.Adapter.MTS.Message.Segment</Default>
</Parameter>

<Method name="GetLast">
<ReturnType>ISSAS.Common.Adapter.MTS.Message.Segment</ReturnType>
<Implementation><![CDATA[
	If (..Count() <= 0) { Quit "" }
	Quit ..GetAt(..Count())
]]></Implementation>
</Method>

<Storage name="Custom">
<Type>%Library.CompleteCustomStorage</Type>
</Storage>
</Class>


<Class name="ISSAS.Common.Adapter.MTS.Message.Message">
<IncludeCode>Ensemble</IncludeCode>
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64418,54397</TimeChanged>
<TimeCreated>62446,51321.850837</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/Adapter/MTS/Message/Message.xml#3 $</Default>
</Parameter>

<Property name="ListOfSegment">
<Description>
List of segments to define a message</Description>
<Type>ISSAS.Common.Adapter.MTS.Message.ListOfSegment</Type>
</Property>

<Property name="GUID">
<Description>
Current message GUID</Description>
<Type>%String</Type>
</Property>

<Property name="MessageId">
<Description>
Current message id with 3 characters : min value = 1, max value = 999</Description>
<Type>%String</Type>
</Property>

<Property name="BSBOName">
<Description>
Business Service/Operation name</Description>
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Property name="IsInbound">
<Description>
Inbound or Outbound side</Description>
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Property name="InvalidSegmentCount">
<Description>
An error occurred receiving segment count</Description>
<Type>%Integer</Type>
<InitialExpression>0</InitialExpression>
</Property>

<Method name="%OnNew">
<FormalSpec>initvalue:%CacheString</FormalSpec>
<Private>1</Private>
<ProcedureBlock>1</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[
	Set ..ListOfSegment = ##class(ISSAS.Common.Adapter.MTS.Message.ListOfSegment).%New()
	Set ..GUID = ##class(%SYSTEM.Util).CreateGUID()
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="InsertSegment">
<Description>
Insert a segment into the current message</Description>
<FormalSpec>segment:%String,bPersist:%Boolean</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If ($L(segment) < ##class(ISSAS.Common.Adapter.MTS.Message.Segment).#MINLENGTH)
	{ Quit $$$ERROR($$$GeneralError, "MTS Segment : segment size is not valid ("_$L(segment)_")") }

	Set newSegment = ##class(ISSAS.Common.Adapter.MTS.Message.Segment).%New()
	Set newSegment.MessageGUID = ..GUID
	Set newSegment.BSBOName = ..BSBOName
	Set newSegment.IsInbound = ..IsInbound

	Set newSegment.Header.MessageType = $E(segment, 1, 3)
	Set newSegment.Header.SegmentCount = $E(segment, 4, 6)
	Set newSegment.Header.MessageId = $E(segment, 7, 9)
	Set newSegment.Header.IsLastSegment = $E(segment, 10, 12)
	Set newSegment.Header.DataSize = $E(segment, 13, 16)

	If (newSegment.Header.DataSize > 0)
	{ Set newSegment.Data = $E(segment, 17, *) }

	If ((..ListOfSegment.Count() < 999) && ($NUMBER(newSegment.Header.SegmentCount) '= $NUMBER((..ListOfSegment.Count() + 1))))
	{
		Set ..InvalidSegmentCount = 1
		$$$LOGWARNING("MTS Segment : segment count is not valid (get "_newSegment.Header.SegmentCount_" instead of "_(..ListOfSegment.Count() + 1)_")")

		// JIRA CCOMTCC-20 : Traitement des segments dupliqués sur Adapter MTS
		If (..ListOfSegment.Count() > 0) { Quit $$$OK }
		/*
		Set lastSegment = ..ListOfSegment.GetLast()
		If ((lastSegment '= "") && (lastSegment.Data = newSegment.Data))
		{
			$$$LOGWARNING("MTS Segment : current received segment is equal to the last inserted segment, replace the last segment in the message")
			Do ..ListOfSegment.RemoveAt(..ListOfSegment.Count())
		}
		*/
	}

	Set sc = newSegment.IsValid()
	If ($$$ISERR(sc)) { $$$LOGWARNING($$$StatusDisplayString(sc)) }

	If (bPersist)
	{
		Set sc = newSegment.%Save()
		If ($$$ISERR(sc)) { $$$LOGERROR($$$StatusDisplayString(sc)) }
	}

	Do ..ListOfSegment.Insert(newSegment)
	Quit sc
]]></Implementation>
</Method>

<Method name="InsertData">
<Description>
Build a segment with parameter data (with a default header) and insert it into the current message</Description>
<FormalSpec>data:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set newSegment = ##class(ISSAS.Common.Adapter.MTS.Message.Segment).%New()
	Set newSegment.MessageGUID = ..GUID
	Set newSegment.BSBOName = ..BSBOName
	Set newSegment.IsInbound = ..IsInbound
	Set newSegment.Data = data

	Set newSegment.Header.MessageType = "DAT"
	Set newSegment.Header.SegmentCount = $TR($J((..ListOfSegment.Count() + 1), 3), " ", "0")
	Set newSegment.Header.MessageId = $TR($J(..MessageId, 3), " ", "0")
	Set newSegment.Header.IsLastSegment = "NLS"
	Set newSegment.Header.DataSize = $TR($J($L(data), 4), " ", "0")

	Do ..ListOfSegment.Insert(newSegment)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="BuildACK">
<FormalSpec>index:%Integer</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	If ((index <= 0) || (index > ..ListOfSegment.Count())) { Quit "" }
	Set segment = ..ListOfSegment.GetAt(index)
	If (segment = "") { Quit "" }
	Set segmentCount = $E($TR($J(segment.Header.SegmentCount, 3), " ", "0"), 1, 3)
	Set msgId = $E($TR($J(segment.Header.MessageId, 3), " ", "0"), 1, 3)
	Set ack = "ACK"  // If (..InvalidSegmentCount) { Set ack = "NAK" }
	Quit ack_segmentCount_msgId_"END"_"0000"
]]></Implementation>
</Method>

<Method name="FromStream">
<FormalSpec>pInput:%IO.DeviceStream,bPersist:%Boolean</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim tSC As %Status = $$$OK
	#Dim currSegCount As %Integer = 1

	// Read file and build all MTS segments
	Do ..ListOfSegment.Clear()
	While (' pInput.AtEnd)
	{
		Set line = pInput.ReadLine()
		$$$TRACE("read MTS line : "_line)
		Set tSC = ..InsertData(line)
		If ($$$ISERR(tSC)) { Quit }
	}
	If ($$$ISERR(tSC)) { Quit tSC }

	// Iterate over all segments into MTS message
	For I=1:1:..ListOfSegment.Count()
	{
		// Retrieve and prepare segment to send
		Set segment = ..ListOfSegment.GetAt(I)
		Set segment.Header.SegmentCount = $TR($J(currSegCount, 3), " ", "0")
		If ($NUMBER(I) = $NUMBER(..ListOfSegment.Count()))
		{ Set segment.Header.IsLastSegment = "END" }

		// Check if segment to send is valid
		Set tSC = segment.IsValid()
		If ($$$ISERR(tSC)) { $$$LOGWARNING($$$StatusDisplayString(tSC)) }

		If (bPersist)
		{
			// Persist segment into database
			Set tSC = segment.%Save()
			If ($$$ISERR(tSC)) { $$$LOGERROR($$$StatusDisplayString(tSC))  Quit }
		}

		// Increment segment count (max value = 999)
		Set currSegCount = (currSegCount + 1)
		If (currSegCount > 999) { Set currSegCount = 1 }
		Do ..ListOfSegment.%UnSwizzleAt(I)
	}

	Quit tSC
]]></Implementation>
</Method>
</Class>


<Class name="ISSAS.Common.Adapter.MTS.Message.Segment">
<Super>%Persistent,%XML.Adaptor</Super>
<TimeChanged>64418,54397</TimeChanged>
<TimeCreated>62446,51382.877819</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/Adapter/MTS/Message/Segment.xml#3 $</Default>
</Parameter>

<Parameter name="MINLENGTH">
<Description>
Min length of a segment</Description>
<Default>16</Default>
</Parameter>

<Property name="Header">
<Description>
Header of segment with 16 characters : MessageType + SegmentCount + MessageId + IsLastSegment + DataSize</Description>
<Type>ISSAS.Common.Adapter.MTS.Message.Header</Type>
</Property>

<Property name="Data">
<Description><![CDATA[
Data of segment with <DataSize> characters]]></Description>
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Property name="TimeStamp">
<Description>
Current timestamp</Description>
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Property name="MessageGUID">
<Description>
Message ID</Description>
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Property name="BSBOName">
<Description>
Business Service/Operation name</Description>
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Property name="IsInbound">
<Description>
Inbound or Outbound side</Description>
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Index name="IdxMessageGUID">
<Properties>MessageGUID</Properties>
</Index>

<Index name="IdxTimeStamp">
<Properties>TimeStamp</Properties>
</Index>

<Method name="%OnNew">
<FormalSpec>initvalue:%CacheString</FormalSpec>
<Private>1</Private>
<ProcedureBlock>1</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[
	Set ..Header = ##class(ISSAS.Common.Adapter.MTS.Message.Header).%New()
	Set ..TimeStamp = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="IsValid">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set sc = ..Header.IsValid()
	If ($$$ISERR(sc)) { Quit sc }

	If ($NUMBER($L(..Data)) '= $NUMBER(..Header.DataSize))
	{ Quit $$$ERROR($$$GeneralError, "MTS Segment : data size is not valid") }

	If ($L(..MessageGUID) <= 0)
	{ Quit $$$ERROR($$$GeneralError, "MTS Segment : message GUID is not valid") }

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="IsLast">
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	Quit (..Header.IsLastSegment = "END")
]]></Implementation>
</Method>

<Method name="IsACK">
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	Quit (..Header.MessageType = "ACK")
]]></Implementation>
</Method>

<Method name="ToString">
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit ..Header.ToString()_..Data
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^ISSAS.Common.Adapt9272.SegmentD</DataLocation>
<DefaultData>SegmentDefaultData</DefaultData>
<IdLocation>^ISSAS.Common.Adapt9272.SegmentD</IdLocation>
<IndexLocation>^ISSAS.Common.Adapt9272.SegmentI</IndexLocation>
<StreamLocation>^ISSAS.Common.Adapt9272.SegmentS</StreamLocation>
<ExtentSize>100000</ExtentSize>
<Data name="SegmentDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Header</Value>
</Value>
<Value name="3">
<Value>Data</Value>
</Value>
<Value name="4">
<Value>TimeStamp</Value>
</Value>
<Value name="5">
<Value>MessageGUID</Value>
</Value>
<Value name="6">
<Value>BSBOName</Value>
</Value>
<Value name="7">
<Value>IsInbound</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="ISSAS.Common.Adapter.MTS.TCP.InboundAdapter">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>EnsLib.TCP.CountedInboundAdapter</Super>
<TimeChanged>64418,54397</TimeChanged>
<TimeCreated>62446,59046.218111</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/Adapter/MTS/TCP/InboundAdapter.xml#3 $</Default>
</Parameter>

<Property name="Charset">
<Description><![CDATA[
Character encoding scheme used for decoding incoming data and encoding outgoing data. For no encoding, use 'Binary'.
Other choices include: <br/>
 Native - the default character encoding of the installed locale of the Ensemble server <br/>
 latin1 - the ISO Latin1 8-bit encoding <br/>
 ISO-8859-1 - the ISO Latin1 8-bit encoding <br/>
 UTF-8 - the Unicode 8-bit encoding <br/>
 Unicode - the Unicode 16-bit encoding  (Little-Endian) <br/>
 UnicodeBig - the Unicode 16-bit encoding (Big-Endian) <br/>
 @&lt;ttable&gt; - &lt;ttable&gt; means a raw InterSystems character translation table name. A prefix of '@' means to use the named table.]]></Description>
<Type>%String</Type>
<InitialExpression>"ISO-8859-1"</InitialExpression>
</Property>

<Property name="CallInterval">
<Description>
The minimum interval between invocations of the adapter by the Ensemble framework. For adapters that poll for
external events, this is the polling interval. However, most polling adapters will process all inputs immediately
if several are detected at one time. This is also the interval at which each Business Service will check for shutdown requests.</Description>
<Type>%Numeric</Type>
<InitialExpression>5</InitialExpression>
<Parameter name="MINVAL" value="0.1"/>
</Property>

<Property name="CurrentMessage">
<Description>
Current MTS message</Description>
<Type>ISSAS.Common.Adapter.MTS.Message.Message</Type>
</Property>

<Method name="OnConnected">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tQuitErr = 1
	Set bContinue = 0
	$$$TRACE("MTS OnConnected started : clear current message")
	Set ..CurrentMessage = ""

	Do {
		Set tCharset=..Charset  Set:$Case($ZCVT(..Charset,"L"),"default":1,"auto":1,:0) tCharset="UTF-8"
		Set tString=$$$NULLOREF, tSC=..ReadCountedString(.tString,tCharset,..CallInterval,..ReadTimeout,1)

		If $$$ISERR(tSC) {
			If ..IsReadError(tSC) {
				Set tSC=$$$ERROR($$$EnsErrInConnectionLost,"TCP Counted Read",..IOAddr,$$$StatusDisplayString(tSC))
				Set tQuitErr=0  Do ..Disconnect()
				If '$L(tString) Set tTxt=$$$StatusText(tSC), tSC=$$$OK  If ..StayConnected<0 { $$$LOGWARNING(tTxt) } ElseIf ..%logConnections { $$$LOGINFO(tTxt) } Else { $$$sysTRACE(tTxt) } ; change error to info if lost connection with no data and trying to stay connected
			} ElseIf $$$StatusEquals(tSC,$$$EnsErrTCPReadBlockSizeTimeoutExpired) {
				If '$L(tString) { Set tSC=$$$OK } ; no error if timed out with no data
				Else { Set tQuitErr=0 }
			}
			Quit
		}

		Set tStringOut = ""
		Set tSC = ..CollectMessage(tString, .tStringOut, .bContinue)
		If ($$$ISERR(tSC)) { $$$TRACE("MTS Collect Error : "_$$$StatusDisplayString(tSC))  Quit }

		If ($L(tStringOut))
		{
			Set tSC=..WriteCountedString(tStringOut,tCharset,1)
			If $$$ISERR(tSC) {
				If ..IsWriteError(tSC) {
					Set tSC=$$$ERROR($$$EnsErrInConnectionLost,"TCP Counted Write",..IOAddr,$$$StatusDisplayString(tSC))
					Set tQuitErr=0  Do ..Disconnect()
				}
				$$$ACLOSEIOLOGENTRY(tSC,"after TCP WriteCountedStream error on :"_..IOAddr,tStringOut)
				Quit
			}
			$$$ACLOSEIOLOGENTRY(tSC,"after TCP WriteCountedStream on :"_..IOAddr,tStringOut)
		} Else {
			$$$ACLOSEIOLOGENTRY(tSC,"after TCP ProcessInput on :"_..IOAddr,$$$NULLOREF)
		}
	} While (bContinue)

	#; Returning error status would cause this listener job to terminate
	If $$$ISERR(tSC) {
		#; Never quit the listener, but drop the connection on unrecognized error
		If tQuitErr&&..Connected&&..StayConnected { $$$LOGERROR("Disconnecting due to "_$$$StatusDisplayString(tSC)) Set tSC=$$$OK  Do ..Disconnect() }
		If $$$ISERR(tSC) $$$LOGSTATUS(tSC)
	}
	ElseIf (..CurrentMessage '= "")
	{ Set tSC = ..BusinessHost.ProcessInput(..CurrentMessage) }

	$$$TRACE("MTS OnConnected finished : clear current message")
	Set ..CurrentMessage = ""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="ReadCountedString">
<Description><![CDATA[
Read a counted block from the TCP socket into the Stream using a Charset for translation.
(logs errors except for <READ> errors after the initial blocksize read.)]]></Description>
<FormalSpec><![CDATA[&pString:%String,pCharset:%String="",pStartTimeout:%Numeric=-1,pChunkTimeout:%Numeric=60,pInbound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC=$$$OK, pString="", $ZT="Trap"
	Do {
		If 'pInbound $$$catTRACE("protocol","Waiting to read string counted data block from "_..IOAddr_" using charset '"_pCharset_"' with timeout="_pStartTimeout)
		Do SetIO^%NLS("RAW")  ; Switch to RAW input mode

		If -1=pStartTimeout { Read tHeader#16  Set tTimedOut = 0 }
		Else { Read tHeader#16:pStartTimeout  Set tTimedOut = '$Test }
		If tTimedOut { Set tSC = $$$ERROR($$$EnsErrTCPReadBlockSizeTimeoutExpired,pStartTimeout, 16) Quit }
		Set tLenStr = $E(tHeader, 13, 16)
		Set tLen = tLenStr
		$$$TRACE("read MTS header : "_tHeader)

		#; Convert to integer
		//Set tLen = $Case(..Endian,"Little":$ZLAscii(tLenStr), :$Ascii(tLenStr)*256+$Ascii(tLenStr,2)*256+$Ascii(tLenStr,3)*256+$Ascii(tLenStr,4))
		If 'tLen {
			If $$$ISOK(tSC) { $$$catTRACE("protocol","Got inbound string data block (size=0) from "_..IOAddr_", Status OK") }
			Quit
		}
		Set tTable = ##class(%IO.I.TranslationDevice).GetCharEncodingTable(pCharset)
		If "RAW"=tTable {
			$$$catTRACE("protocol","Got block count="_tLen_", waiting to read (raw) string with timeout="_pChunkTimeout)
			If -1=pChunkTimeout { Read pString#tLen  Set tTimedOut = 0 }
			Else { Read pString#tLen:pChunkTimeout  Set tTimedOut = '$Test }
		} Else {
			Set tLeft = tLen, tMaxChunk=$$$GetClassParameter("%Library.FileCharacterStream","MAXLOCALSIZE")
			$$$catTRACE("protocol","Got string block count="_tLen_", waiting to read in "_tMaxChunk_"-byte chunks using charset '"_pCharset_"' with chunk timeout="_pChunkTimeout)
			While tLeft>0 {
				Set tChunkSize = $select(tLeft>tMaxChunk:tMaxChunk,1:tLeft)
				Set tStartTime=$zh
				Read data#tChunkSize:pChunkTimeout  Set tTimedOut='$Test
				If tTimedOut {
					If $zh-tStartTime < pChunkTimeout { Set tSC = $$$EnsError($$$EnsErrTCPReadBlockSize,pChunkTimeout,tChunkSize,"("_$L(data)_"):"_data)  Quit }
					Else { Set tSC = $$$EnsError($$$EnsErrTCPReadTimeoutExpired,pChunkTimeout,tChunkSize,pCharset)  Quit }
				}
				$$$catTRACE("protocol","Got string data chunk, size="_$L(data)_"/"_tChunkSize)
				Set tLeft = tLeft-$L(data)
				Set pString=pString_$ZCVT(data,"I",tTable)
			}
			$$$catTRACE("protocol","Converted("_tLen_") input string bytes to ("_$L(pString)_") characters using charset '"_pCharset_"', table '"_tTable_"'")
		}
		$$$catTRACE("protocol","Got inbound string data (size="_$L(pString)_") from "_..IOAddr_" : "_$E(pString,1,1000))
	} While (0)

Exit
	If ($$$ISERR(tSC)) { $$$TRACE("MTS ReadCountedString Error : "_$$$StatusDisplayString(tSC))  Set ..CurrentMessage = "" }
	If ($L(pString) > 0) { $$$TRACE("read MTS data ("_$L(pString)_")"_" : "_pString) }
	If ($L($G(tHeader)) > 0) { Set pString = tHeader_pString }
	Quit tSC

Trap
	Set $ZT="", tSC=$$$SystemError
	$$$TRACE("MTS ReadCountedString Trap : clear current message")
	Set ..CurrentMessage = ""
	If ..IsReadError(tSC) {
		Set tSC=$$$ERROR($S(pInbound:$$$EnsErrInConnectionLost,1:$$$EnsErrOutConnectionLost),$S('$D(tLenStr):"BlockCount Read",1:"Counted Read"), ..IOAddr, $$$StatusDisplayString(tSC))
		Set:'pInbound ..BusinessHost.Retry=1
		Do ..Disconnect()
	}
	Goto Exit
]]></Implementation>
</Method>

<Method name="WriteCountedString">
<Description><![CDATA[
Write the stream contents as a counted block on the TCP socket
(logs errors except for <WRITE> error.)]]></Description>
<FormalSpec>pString:%String,pCharset:%String="",pInbound:%Boolean=0</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC=$$$OK, $ZT="Trap"
	Do {
		Set tTable = ##class(%IO.I.TranslationDevice).GetCharEncodingTable(pCharset)
		Do SetIO^%NLS("RAW")
		Set tmp(1) = ""

		$$$TRACE("write MTS segment ("_$L(pString)_") : "_pString)
		Set tLen=$L(pString)
		Write pString
		Write *-3 // flush buffer
		Quit

		If "RAW"=tTable {
			Set tLenStr=$Case(..Endian,"JavaUTF":$Reverse($ZWChar(tLen)),"Little":$ZLChar(tLen), :$Reverse($ZLChar(tLen)))
			Write tLenStr,pString
		} Else {
			#; Use 8k chunks to allow up to 4x expansion in $ZCVT
			Set tLeft=tLen, tLen=0, tMaxChunk=$$$GetClassParameter("%Library.FileCharacterStream","MAXLOCALSIZE") \ 4
			For iChunk=1:1 {
				Set tChunkSize = $S(tLeft>tMaxChunk:tMaxChunk,1:tLeft)
				Set tmp(iChunk) = $ZCVT($E(pString,1,tChunkSize),"O",tTable), tLen=tLen+$L(tmp(iChunk)), $E(pString,1,tChunkSize)=""
				Set tLeft = tLeft-tChunkSize  Quit:tLeft<=0
			}
			$$$catTRACE("protocol","Converted("_tLen_") characters to ("_tLen_") output string bytes using charset '"_pCharset_"', table '"_tTable_"'")
			Set tLenStr=$Case(..Endian,"JavaUTF":$Reverse($ZWChar(tLen)),"Little":$ZLChar(tLen), :$Reverse($ZLChar(tLen)))
			Write tLenStr  For i=1:1:iChunk Write tmp(i)
		}
		Write *-3 // flush buffer
	} While (0)
	If $$$ISOK(tSC) {
		$$$catTRACE("protocol","Wrote output string data block(size="_tLen_") to "_..IOAddr_": "_$E($S("RAW"=tTable:pString,1:tmp(1)),1,1000))
	}

Exit
	If ($$$ISERR(tSC)) { $$$TRACE("MTS WriteCountedString Error : "_$$$StatusDisplayString(tSC))  Set ..CurrentMessage = "" }
	Quit tSC

Trap
	Set $ZT="", tSC=$$$SystemError
	$$$TRACE("MTS WriteCountedString Trap : clear current message")
	Set ..CurrentMessage = ""
	If ..IsWriteError(tSC) {
		Set tSC=$$$ERROR($S(pInbound:$$$EnsErrInConnectionLost,1:$$$EnsErrOutConnectionLost),$S('$D(tLenStr):"BlockCount Write",1:"Counted Write"), ..IOAddr, $$$StatusDisplayString(tSC))
		Set:'pInbound ..BusinessHost.Retry=1
		Do ..Disconnect()
	}
	Goto Exit
]]></Implementation>
</Method>

<Method name="CollectMessage">
<FormalSpec><![CDATA[pInput:%String,pOutput:%String,&bOutContinue:%Boolean]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim tSC As %Status = $$$OK
	#Dim pSegment As ISSAS.Common.Adapter.MTS.Message.Segment = ""
	Set bOutContinue = 0

	// Create and initialize a new MTS message
	If (..CurrentMessage = "")
	{
		$$$TRACE("MTS CollectMessage : create new message")
		Set ..CurrentMessage = ##class(ISSAS.Common.Adapter.MTS.Message.Message).%New()
		Set ..CurrentMessage.BSBOName = ..BusinessHost.%ConfigName
		Set ..CurrentMessage.IsInbound = "IN"
	}

	// Create a new segment, insert it into the message and build last insert ACK
	Set tSC = ..CurrentMessage.InsertSegment(pInput, 1)
	If (' $$$ISERR(tSC)) { Set pSegment = ..CurrentMessage.ListOfSegment.GetLast() }
	If (' $$$ISERR(tSC)) { Set pOutput = ..CurrentMessage.BuildACK(..CurrentMessage.ListOfSegment.Count()) }
	If (pSegment '= "") { Set bOutContinue = (' pSegment.IsLast()) }

	// Send a NAK to CCOM instead of ACK
	If ($E($G(pOutput), 1, 3) = "NAK")
	{ $$$TRACE("MTS : send a NAK ("_pOutput_")")  Set bOutContinue = 1 }

	Quit tSC
]]></Implementation>
</Method>
</Class>


<Class name="ISSAS.Common.Adapter.MTS.TCP.OutboundAdapter">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>EnsLib.TCP.CountedOutboundAdapter</Super>
<TimeChanged>64418,54397</TimeChanged>
<TimeCreated>62446,59373.306576</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/Adapter/MTS/TCP/OutboundAdapter.xml#3 $</Default>
</Parameter>

<Property name="Charset">
<Description><![CDATA[
Character encoding scheme used for decoding incoming data and encoding outgoing data. For no encoding, use 'Binary'.
Other choices include: <br/>
 Native - the default character encoding of the installed locale of the Ensemble server <br/>
 latin1 - the ISO Latin1 8-bit encoding <br/>
 ISO-8859-1 - the ISO Latin1 8-bit encoding <br/>
 UTF-8 - the Unicode 8-bit encoding <br/>
 Unicode - the Unicode 16-bit encoding  (Little-Endian) <br/>
 UnicodeBig - the Unicode 16-bit encoding (Big-Endian) <br/>
 @&lt;ttable&gt; - &lt;ttable&gt; means a raw InterSystems character translation table name. A prefix of '@' means to use the named table.]]></Description>
<Type>%String</Type>
<InitialExpression>"ISO-8859-1"</InitialExpression>
</Property>

<Property name="ReinitMsgCount">
<Description>
If TCP adapter has been disconnected, need to reinit message counter to synchronize with MTS side</Description>
<Type>%Boolean</Type>
<InitialExpression>0</InitialExpression>
</Property>

<Method name="SendMessage">
<FormalSpec>pInput:ISSAS.Common.Adapter.MTS.Message.Message</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim tSC As %Status = $$$OK
	#Dim currSegCount As %Integer = 1
	#Dim segment As ISSAS.Common.Adapter.MTS.Message.Segment
	#Dim %MSGCount = $I(%MSGCount)

	// Message count limited to 999
	If (%MSGCount > 999) { Set %MSGCount = 1 }
	If (..ReinitMsgCount) { Set %MSGCount = 1 }
	Set ..ReinitMsgCount = 0

	// Iterate over all segments to send
	For I=1:1:pInput.ListOfSegment.Count()
	{
		// Retrieve and prepare segment to send
		Set segment = pInput.ListOfSegment.GetAt(I)
		Set segment.Header.SegmentCount = $TR($J(currSegCount, 3), " ", "0")
		Set segment.Header.MessageId = $TR($J(%MSGCount, 3), " ", "0")
		If ($NUMBER(I) = $NUMBER(pInput.ListOfSegment.Count()))
		{ Set segment.Header.IsLastSegment = "END" }

		// Check if segment to send is valid
		Set tSC = segment.IsValid()
		If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }

		// Send segment and receive ACK
		Set ack = ""
		Set lineToSend = segment.ToString()
		Set tSC = ..SendMessageString(lineToSend, .ack)
		If ($$$ISERR(tSC)) { $$$LOGERROR(tSC)  Quit }

		// Verify that received ACK is valid
		Set validAck = pInput.BuildACK(I)
		If (ack '= validAck) { $$$LOGWARNING("MTS : received ACK is not valid ("_ack_")") }

		// Persist segment into database
		Set tSC = segment.%Save()
		If ($$$ISERR(tSC)) { $$$LOGERROR(tSC)  Quit }

		// Increment segment count (max value = 999)
		Set currSegCount = currSegCount + 1
		If (currSegCount > 999) { Set currSegCount = 1 }
	}

	Quit tSC
]]></Implementation>
</Method>

<Method name="Connect">
<FormalSpec>pTimeout:%Numeric</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// If TCP adapter has been disconnected, need to reinit message counter to synchronize with MTS side
	If ((' ..Connected) && (' ..ReinitMsgCount))
	{ $$$LOGINFO("MTS : init message counter to value '1'")  Set ..ReinitMsgCount = 1 }
	Quit ##super(pTimeout)
]]></Implementation>
</Method>

<Method name="ReadCountedString">
<Description><![CDATA[
Read a counted block from the TCP socket into the Stream using a Charset for translation.
(logs errors except for <READ> errors after the initial blocksize read.)]]></Description>
<FormalSpec><![CDATA[&pString:%String,pCharset:%String="",pStartTimeout:%Numeric=-1,pChunkTimeout:%Numeric=60,pInbound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC=$$$OK, pString="", $ZT="Trap"
	Do {
		If 'pInbound $$$catTRACE("protocol","Waiting to read string counted data block from "_..IOAddr_" using charset '"_pCharset_"' with timeout="_pStartTimeout)
		Do SetIO^%NLS("RAW")  ; Switch to RAW input mode

		If -1=pStartTimeout { Read tHeader#16  Set tTimedOut = 0 }
		Else { Read tHeader#16:pStartTimeout  Set tTimedOut = '$Test }
		If tTimedOut { Set tSC = $$$ERROR($$$EnsErrTCPReadBlockSizeTimeoutExpired,pStartTimeout, 16) Quit }
		Set tLenStr = $E(tHeader, 13, 16)
		Set tLen = tLenStr
		$$$TRACE("read MTS header : "_tHeader)

		#; Convert to integer
		//Set tLen = $Case(..Endian,"Little":$ZLAscii(tLenStr), :$Ascii(tLenStr)*256+$Ascii(tLenStr,2)*256+$Ascii(tLenStr,3)*256+$Ascii(tLenStr,4))
		If 'tLen {
			If $$$ISOK(tSC) { $$$catTRACE("protocol","Got inbound string data block (size=0) from "_..IOAddr_", Status OK") }
			Quit
		}
		Set tTable = ##class(%IO.I.TranslationDevice).GetCharEncodingTable(pCharset)
		If "RAW"=tTable {
			$$$catTRACE("protocol","Got block count="_tLen_", waiting to read (raw) string with timeout="_pChunkTimeout)
			If -1=pChunkTimeout { Read pString#tLen  Set tTimedOut = 0 }
			Else { Read pString#tLen:pChunkTimeout  Set tTimedOut = '$Test }
		} Else {
			Set tLeft = tLen, tMaxChunk=$$$GetClassParameter("%Library.FileCharacterStream","MAXLOCALSIZE")
			$$$catTRACE("protocol","Got string block count="_tLen_", waiting to read in "_tMaxChunk_"-byte chunks using charset '"_pCharset_"' with chunk timeout="_pChunkTimeout)
			While tLeft>0 {
				Set tChunkSize = $select(tLeft>tMaxChunk:tMaxChunk,1:tLeft)
				Set tStartTime=$zh
				Read data#tChunkSize:pChunkTimeout  Set tTimedOut='$Test
				If tTimedOut {
					If $zh-tStartTime < pChunkTimeout { Set tSC = $$$EnsError($$$EnsErrTCPReadBlockSize,pChunkTimeout,tChunkSize,"("_$L(data)_"):"_data)  Quit }
					Else { Set tSC = $$$EnsError($$$EnsErrTCPReadTimeoutExpired,pChunkTimeout,tChunkSize,pCharset)  Quit }
				}
				$$$catTRACE("protocol","Got string data chunk, size="_$L(data)_"/"_tChunkSize)
				Set tLeft = tLeft-$L(data)
				Set pString=pString_$ZCVT(data,"I",tTable)
			}
			$$$catTRACE("protocol","Converted("_tLen_") input string bytes to ("_$L(pString)_") characters using charset '"_pCharset_"', table '"_tTable_"'")
		}
		$$$catTRACE("protocol","Got inbound string data (size="_$L(pString)_") from "_..IOAddr_" : "_$E(pString,1,1000))
	} While (0)

Exit
	If ($L(pString) > 0) { $$$TRACE("read MTS data ("_$L(pString)_")"_" : "_pString) }
	Set pString = tHeader_pString
	Quit tSC

Trap
	Set $ZT="", tSC=$$$SystemError
	If ..IsReadError(tSC) {
		Set tSC=$$$ERROR($S(pInbound:$$$EnsErrInConnectionLost,1:$$$EnsErrOutConnectionLost),$S('$D(tLenStr):"BlockCount Read",1:"Counted Read"), ..IOAddr, $$$StatusDisplayString(tSC))
		Set:'pInbound ..BusinessHost.Retry=1
		Do ..Disconnect()
	}
	Goto Exit
]]></Implementation>
</Method>

<Method name="WriteCountedString">
<Description><![CDATA[
Write the stream contents as a counted block on the TCP socket
(logs errors except for <WRITE> error.)]]></Description>
<FormalSpec>pString:%String,pCharset:%String="",pInbound:%Boolean=0</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC=$$$OK, $ZT="Trap"
	Do {
		Set tTable = ##class(%IO.I.TranslationDevice).GetCharEncodingTable(pCharset)
		Do SetIO^%NLS("RAW")
		Set tmp(1) = ""

		$$$TRACE("write MTS segment ("_$L(pString)_") : "_pString)
		Set tLen=$L(pString)
		Write pString
		Write *-3 // flush buffer
		Quit

		If "RAW"=tTable {
			Set tLenStr=$Case(..Endian,"JavaUTF":$Reverse($ZWChar(tLen)),"Little":$ZLChar(tLen), :$Reverse($ZLChar(tLen)))
			Write tLenStr,pString
		} Else {
			#; Use 8k chunks to allow up to 4x expansion in $ZCVT
			Set tLeft=tLen, tLen=0, tMaxChunk=$$$GetClassParameter("%Library.FileCharacterStream","MAXLOCALSIZE") \ 4
			For iChunk=1:1 {
				Set tChunkSize = $S(tLeft>tMaxChunk:tMaxChunk,1:tLeft)
				Set tmp(iChunk) = $ZCVT($E(pString,1,tChunkSize),"O",tTable), tLen=tLen+$L(tmp(iChunk)), $E(pString,1,tChunkSize)=""
				Set tLeft = tLeft-tChunkSize  Quit:tLeft<=0
			}
			$$$catTRACE("protocol","Converted("_tLen_") characters to ("_tLen_") output string bytes using charset '"_pCharset_"', table '"_tTable_"'")
			Set tLenStr=$Case(..Endian,"JavaUTF":$Reverse($ZWChar(tLen)),"Little":$ZLChar(tLen), :$Reverse($ZLChar(tLen)))
			Write tLenStr  For i=1:1:iChunk Write tmp(i)
		}
		Write *-3 // flush buffer
	} While (0)
	If $$$ISOK(tSC) {
		$$$catTRACE("protocol","Wrote output string data block(size="_tLen_") to "_..IOAddr_": "_$E($S("RAW"=tTable:pString,1:tmp(1)),1,1000))
	}

Exit
	Quit tSC

Trap
	Set $ZT="", tSC=$$$SystemError
	If ..IsWriteError(tSC) {
		Set tSC=$$$ERROR($S(pInbound:$$$EnsErrInConnectionLost,1:$$$EnsErrOutConnectionLost),$S('$D(tLenStr):"BlockCount Write",1:"Counted Write"), ..IOAddr, $$$StatusDisplayString(tSC))
		Set:'pInbound ..BusinessHost.Retry=1
		Do ..Disconnect()
	}
	Goto Exit
]]></Implementation>
</Method>
</Class>


<Class name="ISSAS.Common.BO.HL7.FileOperation">
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BusinessOperation</Super>
<TimeChanged>65475,61356</TimeChanged>
<TimeCreated>62469,54087.627545</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/BO/HL7/FileOperation.xml#9 $</Default>
</Parameter>

<Property name="MSHSendingApp">
<Description>
Define sending application to insert into MSH segment (MSH-3)</Description>
<Type>%String</Type>
</Property>

<Property name="MSHSendingFacility">
<Description>
Define sending facility to insert into MSH segment (MSH-4)</Description>
<Type>%String</Type>
</Property>

<Property name="MSHReceivingApp">
<Description>
Define receiving application to insert into MSH segment (MSH-5)</Description>
<Type>%String</Type>
</Property>

<Property name="MSHReceivingFacility">
<Description>
Define receiving facility to insert into MSH segment (MSH-6)</Description>
<Type>%String</Type>
</Property>

<Property name="MSHProcessingId">
<Description>
Define processing ID to insert into MSH segment (Environment) (MSH-11)</Description>
<Type>%String</Type>
<InitialExpression>"P"</InitialExpression>
</Property>

<Property name="MSHVersionId">
<Description>
Define version ID to insert into MSH segment (MSH-12)</Description>
<Type>%String</Type>
<InitialExpression>"2.3.1"</InitialExpression>
</Property>

<Property name="MSHAddMSH">
<Description>
Add MSH segment</Description>
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>
</Property>

<Property name="FileNameFormat">
<Description><![CDATA[
File name format can include any of the following keywords :<br/>
- %datetime% : will be replaced by the current date-time in the format 'yyyymmddhhmmss'<br/>
- %date% : will be replaced by the current date in the format 'yyyymmdd'<br/>
- %year% : will be replaced by the 4-digit year of the current date in the format 'yyyy'<br/>
- %month% : will be replaced by the 2-digit month of the current date in the format 'mm'<br/>
- %day% : will be replaced by the 2-digit day of the current date in the format 'dd'<br/>
- %time% : will be replaced by the current time in the format 'hhmmss'<br/>
- %hour% : will be replaced by the 2-digit hour of the current time in the format 'hh'<br/>
- %minute% : will be replaced by the 2-digit minute of the current time in the format 'mm'<br/>
- %second% : will be replaced by the 2-digit second of the current time in the format 'ss'<br/>
- %cpt01% : will be replaced by a 1-digit numeric transaction number starting at 1 and wrapping at 9<br/>
- %cpt02% : will be replaced by a 2-digit numeric transaction number starting at 01 and wrapping at 99<br/>
- %cpt03% : will be replaced by a 3-digit numeric transaction number starting at 001 and wrapping at 999<br/>
- %cpt04% : will be replaced by a 4-digit numeric transaction number starting at 0001 and wrapping at 9999<br/>
- %cpt05% : will be replaced by a 5-digit numeric transaction number starting at 00001 and wrapping at 99999<br/>
- %cpt06% : will be replaced by a 6-digit numeric transaction number starting at 000001 and wrapping at 999999<br/>
- %cpt07% : will be replaced by a 7-digit numeric transaction number starting at 0000001 and wrapping at 9999999<br/>
- %cpt08% : will be replaced by a 8-digit numeric transaction number starting at 00000001 and wrapping at 99999999<br/>
- %cpt09% : will be replaced by a 9-digit numeric transaction number starting at 000000001 and wrapping at 999999999<br/>]]></Description>
<Type>%String</Type>
<InitialExpression>"%datetime%_%cpt04%.txt"</InitialExpression>
</Property>

<Property name="SendFileOk">
<Description>
Send file ok 'filename'.ok when process is finished</Description>
<Type>%Boolean</Type>
<InitialExpression>0</InitialExpression>
</Property>

<Property name="FormatFileOk">
<Description><![CDATA[
Si SendFileOk est coché, indique le format du fichier .ok<BR/><BR/>
Si le format choisi est NomFichier.ok, alors le fichier Test.xml sera associé au fichier Test.ok<BR/>
Si le format choisi est NomFichier.ext.ok, alors le fichier Test.xml sera associé au fichier Test.xml.ok<BR/><BR/>
Le défaut est NomFichier.ok]]></Description>
<Type>%String</Type>
<InitialExpression>"FILE_OK"</InitialExpression>
<Parameter name="DISPLAYLIST" value=",NomFichier.ok,NomFichier.ext.ok"/>
<Parameter name="VALUELIST" value=",FILE_OK,FILE_EXT_OK"/>
</Property>

<Property name="PreScript">
<Description><![CDATA[
Execute a pre-script before processing message (using same process). <br/>
Put into this field a ClassMethod to call, for example : <i>##class(myClass).myClassMethod</i> <br/>
The signature of the ClassMethod must have 3 parameters and must return a <i>%Status</i> value, for example : <br/>
<i>ClassMethod myClassMethod(pCaller As Ens.BusinessOperation, pRequest As EnsLib.HL7.Message, Output pResponse As Ens.Response) As %Status;</i>]]></Description>
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Property name="PostScript">
<Description><![CDATA[
Execute a post-script after processing message (using same process). <br/>
Put into this field a ClassMethod to call, for example : <i>##class(myClass).myClassMethod</i> <br/>
The signature of the ClassMethod must have 3 parameters and must return a <i>%Status</i> value, for example : <br/>
<i>ClassMethod myClassMethod(pCaller As Ens.BusinessOperation, pRequest As EnsLib.HL7.Message, Output pResponse As Ens.Response) As %Status;</i>]]></Description>
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Property name="DaysToKeepMessages">
<Description><![CDATA[
Number of days to keep messages stored into database. <br/>
Each messages status are separated by a comma : <i>'msg completed', 'msg error', 'msg aborted', 'msg suspended', 'msg discarded'</i>. <br/>
If this parameter is empty (or equal to 0), messages are never removed from database. <br/>
Note : messages are automatically deleted by the scheduled task <i>ISSAS.Common.SysTask.PurgeMsg</i>. <br/>
Examples : <br/>
* <i>60, 120</i> => delete completed messages after 60 days, and error messages after 120 days. <br/>
* <i>30, 0, 180</i> => delete completed messages after 30 days, and aborted messages after 180 days. <br/>
* <i>120</i> => delete completed messages after 120 days.]]></Description>
<Type>%String</Type>
</Property>

<Property name="SearchTableClass">
<Description><![CDATA[
Store a set of searchable properties associated with each HL7 message processed. <br/>
These records will be stored in the named SearchTable class, if any.]]></Description>
<Type>%String</Type>
<Parameter name="MAXLEN" value="128"/>
</Property>

<Property name="EnableSearchTableWarning">
<Description>
Log warnings in journal when an error occurred storing message searchable properties in SearchTable class.</Description>
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>
</Property>

<Property name="FailureTimeout">
<Description><![CDATA[
How long to keep retrying before giving up and returning an error code. <br/>
-1 means never give up.]]></Description>
<Type>%Numeric</Type>
<InitialExpression>-1</InitialExpression>
<Parameter name="MINVAL" value="-1"/>
</Property>

<Property name="RetryInterval">
<Description>
How frequently to retry access to the output system</Description>
<Type>%Numeric</Type>
<InitialExpression>10</InitialExpression>
<Parameter name="MINVAL" value="0"/>
</Property>

<Property name="ReplyCodeActions">
<Description><![CDATA[
Comma-separated list of codes specifying what action this Operation will take on various reply status conditions. <br/>
The format of the list is: <br/>
&lt;code&gt;=&lt;actions&gt;,(&lt;code&gt;,&lt;code&gt;)=&lt;actions&gt;,... <br/>
Types of reply status condition are identified by a specification code: <br/>
<br/>
E - Error status returned from message handler <br/>
E#<statuscode> - Error status returned from message handler has status code equal to <statuscode> <br/>
E*<text> - Error status returned from message handler contains text string <text> <br/>
X - there is no reply message at all <br/>
<br/>
The following values for <action> may be used alone or in combinations: <br/>
<br/>
C - Treat the message as Completed OK. <br/>
W - Log a warning but treat the message as Completed OK. <br/>
R - Retry the message according to the configured RetryInterval and FailureTimeout; finally Fail unless a different action is also specified <br/>
S - Suspend the message, log an error, and move on to try the next message <br/>
D - Disable the Operation, log an error and restore the outbound message to the front of the Operation's queue <br/>
F - Fail with an error and move on to try the next message <br/>
<br/>
For example:'E#6301=R,E#<Ens>ErrGeneral=R,E=F' The default behavior is 'E=F' <br/>
<br/>
All codes where the <actions> consists of only 'W' (for 'log a Warning') will be evaluated and warnings generated if they trigger. <br/>
Other codes will be evaluated in left-to-right order, executing the first one that triggers that has a non-warning <actions> value.	]]></Description>
<Type>%String</Type>
<InitialExpression>"E=R"</InitialExpression>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="LineTerminator">
<Type>%String</Type>
</Property>

<Parameter name="ADAPTER">
<Default>ISSAS.Common.Adapter.HL7.File.OutboundAdapter</Default>
</Parameter>

<Property name="Adapter">
<Type>ISSAS.Common.Adapter.HL7.File.OutboundAdapter</Type>
</Property>

<Parameter name="INVOCATION">
<Default>Queue</Default>
</Parameter>

<Parameter name="SETTINGS">
<Default>MSHSendingApp, MSHSendingFacility, MSHReceivingApp, MSHReceivingFacility, MSHProcessingId, MSHVersionId, MSHAddMSH, FileNameFormat:Basic, SendFileOk, FormatFileOk, PreScript, PostScript, DaysToKeepMessages, SearchTableClass::selector?context={Ens.ContextSearch/SearchTableClasses?host=EnsLib.HL7.Service.Standard}, EnableSearchTableWarning, LineTerminator</Default>
</Parameter>

<Method name="OnProcessHL7">
<FormalSpec>pRequest:EnsLib.HL7.Message,*pResponse:Ens.Response</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim tSC As %Status = $$$OK
	#Dim clsFormat As ISSAS.Common.Tools.ClassFormat = ""
	#Dim pClone As EnsLib.HL7.Message = ""

	Try
	{
		// Check if adapter is ok before processing message
		Set tSC = ..Adapter.OnBeforeProcessExecute()
		If ($$$ISERR(tSC)) { Quit }

		// Build a clone request
		Set pClone = pRequest.%ConstructClone(1)
		Set tSC = pClone.%Save()  If ($$$ISERR(tSC)) { Quit }

		// Execute pre-script before processing message
		If ($L(..PreScript) > 0)
		{
			Set tSC = ##class(ISSAS.Common.Tools.ClassScript).ExecuteClassMethod(..PreScript, ##this, pClone, .pResponse)
			If ($$$ISERR(tSC)) { Quit }
		}

		// Verify that the file path is not empty
		If (' $L(..Adapter.FilePath))
		{ Set tSC = $$$ERROR($$$GeneralError, "File path parameter must not be empty : file cannot be created")  Quit }

		// Build a new file name
		Set fileName = ##class(ISSAS.Common.Tools.ClassFormat).BuildString(..%ConfigName, ..FileNameFormat, .clsFormat)

		// Initialize HL7 segment header
		If (..MSHAddMSH)
		{
			If (..MSHSendingApp '= "") { Set tSC = pClone.SetValueAt(..MSHSendingApp, "MSH:3")  If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) } }
			If (..MSHSendingFacility '= "") { Set tSC = pClone.SetValueAt(..MSHSendingFacility, "MSH:4")  If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) } }
			Set tSC = pClone.SetValueAt(..MSHReceivingApp, "MSH:5")  If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }
			Set tSC = pClone.SetValueAt(..MSHReceivingFacility, "MSH:6")  If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }
			Set tSC = pClone.SetValueAt(..MSHProcessingId, "MSH:11")  If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }
			Set tSC = pClone.SetValueAt(..MSHVersionId, "MSH:12")  If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }
		}

		// Need to copy some informations from MSH segment to H segment for "HPRIMV2:ADT" message
		If (pClone.DocType = "HPRIMV2:ADT")
		{
			Set tSC = pClone.SetValueAt(..MSHReceivingApp, "H:9.1")  If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }
			Set tSC = pClone.SetValueAt(..MSHReceivingFacility, "H:9.2")  If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }
			Set tSC = pClone.SetValueAt(..MSHProcessingId, "H:11")  If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }
			Set tSC = pClone.SetValueAt(..MSHVersionId, "H:12")  If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }
		}

		// Write or not MSH segment to output
		Set firstSegment = 1
		If (' ..MSHAddMSH) { Set firstSegment = 2 }
		
		// CCOMTCC-901 : custom line terminator
		If (..LineTerminator '= "") {
			Set ..Adapter.LineTerminator = $Select(..LineTerminator="CR":$char(13), ..LineTerminator="LF":$char(10), ..LineTerminator="CR/LF":$char(13,10), 1:$char(13))
		}
		
		// Iterate over all segments into HL7 message
		For I=firstSegment:1:pClone.SegCount
		{
			Set line = pClone.GetValueAt(I)
			Set tSC = ..Adapter.PutLine(fileName, line)
			If ($$$ISERR(tSC)) { $$$LOGERROR(tSC)  Quit }
			Do pClone.commitSegmentByIndex(I)
		}

		// If an error occured, stop process
		If ($$$ISERR(tSC)) { Quit }

		// Send file ok : <filename>.ok
		If (..SendFileOk && $$$ISOK(tSC))
		{
			if ..FormatFileOk = "FILE_EXT_OK"
			{
				// On ne fait rien
			}
			else
			{
				// Remove extension
				Set position = $FIND($REVERSE(fileName), ".")
				If (position > 0) { Set fileName = $E(fileName, 1, ($L(fileName) - position + 1)) }
			}

			// Send file ok : <filename>.ok
			Set fileName = fileName_".ok"
			Set tSC = ..Adapter.PutLine(fileName, "ok")
			If ($$$ISERR(tSC)) { Quit }
		}

		// Execute post-script after processing message
		If ($L(..PostScript) > 0)
		{
			Set tSC = ##class(ISSAS.Common.Tools.ClassScript).ExecuteClassMethod(..PostScript, ##this, pClone, .pResponse)
			If ($$$ISERR(tSC)) { Quit }
		}

		// Build index for search table
		Do ##class(ISSAS.Common.SearchTable.BaseClass).IndexDocHelper(..SearchTableClass, pClone, ..EnableSearchTableWarning)
	}
	Catch(exc)
	{ Set tSC = $System.Status.AppendStatus(tSC, exc.AsStatus()) }

	// JIRA CCOMTCC-17 : réinitialise le compteur en cas d'erreur
	If (($$$ISERR(tSC)) && (clsFormat '= ""))
	{ Do clsFormat.RestoreOldTransactionCount() }

	Quit tSC
]]></Implementation>
</Method>

<XData name="MessageMap">
<Data><![CDATA[
<MapItems>
	<MapItem MessageType="EnsLib.HL7.Message">
		<Method>OnProcessHL7</Method>
	</MapItem>
</MapItems>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.BO.MTS.TCPOperation">
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BusinessOperation</Super>
<TimeChanged>65434,54839</TimeChanged>
<TimeCreated>62446,60362.313915</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/BO/MTS/TCPOperation.xml#4 $</Default>
</Parameter>

<Property name="MSHAddToMTS">
<Description>
Add MSH segment to MTS message</Description>
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>
</Property>

<Property name="MSHSendingApp">
<Description>
Define sending application to insert into MSH segment</Description>
<Type>%String</Type>
</Property>

<Property name="MSHSendingFacility">
<Description>
Define sending facility to insert into MSH segment</Description>
<Type>%String</Type>
</Property>

<Property name="MSHReceivingApp">
<Description>
Define receiving application to insert into MSH segment</Description>
<Type>%String</Type>
</Property>

<Property name="MSHReceivingFacility">
<Description>
Define receiving facility to insert into MSH segment</Description>
<Type>%String</Type>
</Property>

<Property name="MSHProcessingId">
<Description>
Define processing ID to insert into MSH segment (Environment)</Description>
<Type>%String</Type>
</Property>

<Property name="FailureTimeout">
<Description><![CDATA[
How long to keep retrying before giving up and returning an error code. <br/>
-1 means never give up.]]></Description>
<Type>%Numeric</Type>
<InitialExpression>-1</InitialExpression>
<Parameter name="MINVAL" value="-1"/>
</Property>

<Property name="RetryInterval">
<Description>
How frequently to retry access to the output system</Description>
<Type>%Numeric</Type>
<InitialExpression>10</InitialExpression>
<Parameter name="MINVAL" value="0"/>
</Property>

<Property name="SearchTableClass">
<Description><![CDATA[
Store a set of searchable properties associated with each HL7 message processed. <br/>
These records will be stored in the named SearchTable class, if any.]]></Description>
<Type>%String</Type>
<InitialExpression>"ISSAS.Common.SearchTable.ClinicomReceiver"</InitialExpression>
<Parameter name="MAXLEN" value="128"/>
</Property>

<Property name="EnableSearchTableWarning">
<Description>
Log warnings in journal when an error occurred storing message searchable properties in SearchTable class.</Description>
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>
</Property>

<Property name="DaysToKeepMessages">
<Description><![CDATA[
Number of days to keep messages stored into database. <br/>
Each messages status are separated by a comma : <i>'msg completed', 'msg error', 'msg aborted', 'msg suspended', 'msg discarded'</i>. <br/>
If this parameter is empty (or equal to 0), messages are never removed from database. <br/>
Note : messages are automatically deleted by the scheduled task <i>ISSAS.Common.SysTask.PurgeMsg</i>. <br/>
Examples : <br/>
* <i>60, 120</i> => delete completed messages after 60 days, and error messages after 120 days. <br/>
* <i>30, 0, 180</i> => delete completed messages after 30 days, and aborted messages after 180 days. <br/>
* <i>120</i> => delete completed messages after 120 days.]]></Description>
<Type>%String</Type>
</Property>

<Parameter name="ADAPTER">
<Default>ISSAS.Common.Adapter.MTS.TCP.OutboundAdapter</Default>
</Parameter>

<Property name="Adapter">
<Type>ISSAS.Common.Adapter.MTS.TCP.OutboundAdapter</Type>
</Property>

<Parameter name="INVOCATION">
<Default>Queue</Default>
</Parameter>

<Parameter name="SETTINGS">
<Default>MSHAddToMTS, MSHSendingApp, MSHSendingFacility, MSHReceivingApp, MSHReceivingFacility, MSHProcessingId, SearchTableClass::selector?context={Ens.ContextSearch/SearchTableClasses?host=EnsLib.HL7.Service.Standard}, EnableSearchTableWarning, DaysToKeepMessages</Default>
</Parameter>

<Method name="OnProcessClinicomHL7">
<FormalSpec>pRequest:ISSAS.Common.Message.ClinicomHL7,*pResponse:Ens.Response</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim tSC As %Status = $$$OK
	#Dim pMTS As ISSAS.Common.Adapter.MTS.Message.Message = ##class(ISSAS.Common.Adapter.MTS.Message.Message).%New()

	// Initialize HL7 parameters
	Set pRequest.MSHAddToMTS = ..MSHAddToMTS
	Set pRequest.MSHSendingApp = ..MSHSendingApp
	Set pRequest.MSHSendingFacility = ..MSHSendingFacility
	Set pRequest.MSHReceivingApp = ..MSHReceivingApp
	Set pRequest.MSHReceivingFacility = ..MSHReceivingFacility
	Set pRequest.MSHProcessingId = ..MSHProcessingId
	Set tSC = pRequest.UpdateMSHToSendToClinicom()

	// Initialize MTS parameters
	Set pMTS.BSBOName = ..%ConfigName
	Set pMTS.IsInbound = "OUT"

	// Convert from HL7 to MTS
	Set tSC = pRequest.ToMTS(pMTS)

	// If an error occured, don't send message to outbound adapter
	If ($$$ISERR(tSC)) { Quit tSC }

	// Send MTS message to outbound adapter
	Set tSC = ..Adapter.SendMessage(pMTS)
	If ($$$ISERR(tSC)) { Quit tSC }

	// Build index for search table
	Do ##class(ISSAS.Common.SearchTable.BaseClass).IndexDocHelper(..SearchTableClass, pRequest, ..EnableSearchTableWarning)

	Quit tSC
]]></Implementation>
</Method>

<Method name="OnProcessHPRIMv2HL7">
<FormalSpec>pRequest:ISSAS.Common.Message.HPRIMv2HL7,*pResponse:Ens.Response</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit ..OnProcessHL7(pRequest, .pResponse)
]]></Implementation>
</Method>

<Method name="OnProcessHL7">
<FormalSpec>pRequest:EnsLib.HL7.Message,*pResponse:Ens.Response</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// This case should never happen
	$$$LOGWARNING("Bad target class defined into DTL : must be 'ISSAS.Common.Message.ClinicomHL7' instead of '"_$CLASSNAME(pRequest)_"'")

	// Clone HL7 message
	Set pClinicomHL7 = ##class(ISSAS.Common.Message.ClinicomHL7).%New()
	Set tSC = pClinicomHL7.CloneFromHL7(pRequest)
	If ($$$ISERR(tSC)) { Quit tSC }

	Quit ..OnProcessClinicomHL7(pClinicomHL7, .pResponse)
]]></Implementation>
</Method>

<XData name="MessageMap">
<Data><![CDATA[
<MapItems>
	<MapItem MessageType="ISSAS.Common.Message.ClinicomHL7">
		<Method>OnProcessClinicomHL7</Method>
	</MapItem>
	<MapItem MessageType="ISSAS.Common.Message.HPRIMv2HL7">
		<Method>OnProcessHPRIMv2HL7</Method>
	</MapItem>
	<MapItem MessageType="EnsLib.HL7.Message">
		<Method>OnProcessHL7</Method>
	</MapItem>
</MapItems>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.BS.MTS.TCPService">
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BusinessService</Super>
<TimeChanged>65434,54839</TimeChanged>
<TimeCreated>62446,59889.671721</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/BS/MTS/TCPService.xml#4 $</Default>
</Parameter>

<Property name="MSHDelimiter">
<Description>
Define fields separators to parse a segment</Description>
<Type>%String</Type>
<InitialExpression><![CDATA["\^~|&"]]></InitialExpression>
</Property>

<Property name="MSHDocType">
<Description><![CDATA[
Define document type <=> application name (caller)]]></Description>
<Type>%String</Type>
<InitialExpression>"Clinicom"</InitialExpression>
</Property>

<Property name="MSHPieceMessageType">
<Description>
Define piece index where we can find the message type</Description>
<Type>%Integer</Type>
<InitialExpression>1</InitialExpression>
</Property>

<Property name="MSHSendingApp">
<Description>
Define sending application to insert into MSH segment</Description>
<Type>%String</Type>
<InitialExpression>"Clinicom"</InitialExpression>
</Property>

<Property name="MSHSendingFacility">
<Description>
Define sending facility to insert into MSH segment</Description>
<Type>%String</Type>
<InitialExpression>"ISSAS"</InitialExpression>
</Property>

<Property name="MSHProcessingId">
<Description>
Define processing ID to insert into MSH segment (Environment)</Description>
<Type>%String</Type>
</Property>

<Property name="TargetConfigNames">
<Description>
Configuration item(s) to which to send messages</Description>
<Type>%String</Type>
<Parameter name="MAXLEN" value="2000"/>
</Property>

<Property name="TestInputString">
<Description>
Put some text into this field to simulate a message when the business service is started</Description>
<Type>%String</Type>
<Parameter name="MAXLEN" value="999999999"/>
</Property>

<Property name="SearchTableClass">
<Description><![CDATA[
Store a set of searchable properties associated with each HL7 message processed. <br/>
These records will be stored in the named SearchTable class, if any.]]></Description>
<Type>%String</Type>
<InitialExpression>"ISSAS.Common.SearchTable.Clinicom"</InitialExpression>
<Parameter name="MAXLEN" value="128"/>
</Property>

<Property name="EnableSearchTableWarning">
<Description>
Log warnings in journal when an error occurred storing message searchable properties in SearchTable class.</Description>
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>
</Property>

<Property name="DaysToKeepMessages">
<Description><![CDATA[
Number of days to keep messages stored into database. <br/>
Each messages status are separated by a comma : <i>'msg completed', 'msg error', 'msg aborted', 'msg suspended', 'msg discarded'</i>. <br/>
If this parameter is empty (or equal to 0), messages are never removed from database. <br/>
Note : messages are automatically deleted by the scheduled task <i>ISSAS.Common.SysTask.PurgeMsg</i>. <br/>
Examples : <br/>
* <i>60, 120</i> => delete completed messages after 60 days, and error messages after 120 days. <br/>
* <i>30, 0, 180</i> => delete completed messages after 30 days, and aborted messages after 180 days. <br/>
* <i>120</i> => delete completed messages after 120 days.]]></Description>
<Type>%String</Type>
</Property>

<Parameter name="ADAPTER">
<Default>ISSAS.Common.Adapter.MTS.TCP.InboundAdapter</Default>
</Parameter>

<Parameter name="SETTINGS">
<Default>TargetConfigNames, MSHDelimiter, MSHDocType, MSHPieceMessageType, MSHSendingApp, MSHSendingFacility, MSHProcessingId, TestInputString, SearchTableClass::selector?context={Ens.ContextSearch/SearchTableClasses?host=EnsLib.HL7.Service.Standard}, EnableSearchTableWarning, DaysToKeepMessages</Default>
</Parameter>

<Method name="OnProcessInput">
<FormalSpec>pInput:ISSAS.Common.Adapter.MTS.Message.Message,pOutput:%RegisteredObject</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim tSC As %Status = $$$OK
	#Dim pHL7 As ISSAS.Common.Message.ClinicomHL7 = ##class(ISSAS.Common.Message.ClinicomHL7).%New()

	// Initialize Clinicom HL7 parameters
	Set pHL7.MSHDelimiter = ..MSHDelimiter
	Set pHL7.MSHDocType = ..MSHDocType
	Set pHL7.MSHPieceMessageType = ..MSHPieceMessageType
	Set pHL7.MSHSendingApp = ..MSHSendingApp
	Set pHL7.MSHSendingFacility = ..MSHSendingFacility
	Set pHL7.MSHProcessingId = ..MSHProcessingId

	// Convert from MTS to HL7
	Set tSC = pHL7.FromMTS(pInput)

	// If an error occured, don't send message to targets
	If ($$$ISERR(tSC)) { Quit tSC }

	// Send HL7 message to all targets
	For iTarget=1:1:$L(..TargetConfigNames, ",")
	{
		Set tOneTarget=$ZStrip($P(..TargetConfigNames,",",iTarget),"<>W")  Continue:""=tOneTarget
		$$$sysTRACE("Sending HL7 Message "_pHL7_" / "_pHL7.%Id()_" from "_pHL7.Source_" to '"_tOneTarget_"'")
		Set tSC1=..SendRequestAsync(tOneTarget,pHL7)  Set:$$$ISERR(tSC1) tSC=$$$ADDSC(tSC,tSC1)
	}
	If ($$$ISERR(tSC)) { Quit tSC }

	// Build index for search table
	Do ##class(ISSAS.Common.SearchTable.BaseClass).IndexDocHelper(..SearchTableClass, pHL7, ..EnableSearchTableWarning)

	Quit tSC
]]></Implementation>
</Method>

<Method name="OnGetConnections">
<Description>
Return an array of connections for drawing lines on the config diagram</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>*pArray:%String,pItem:Ens.Config.Item</FormalSpec>
<Implementation><![CDATA[
	Do pItem.PopulateModifiedSettings()
	Set (tValue,tIndex)="" For {
		Set tSetting = pItem.ModifiedSettings.GetNext(.tIndex) Quit:tIndex=""
		If tSetting.Name="TargetConfigNames" Set tValue=tSetting.Value  Quit
	}
	For i=1:1:$L(tValue,",") { Set tOne=$ZStrip($P(tValue,",",i),"<>W")  Continue:""=tOne  Set pArray(tOne)="" }
]]></Implementation>
</Method>

<Method name="OnInit">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If ($L(..TestInputString))
	{
		// The user writes a text to simulate a message
		$$$LOGINFO("'TestInputString' property found to simulate a message : "_..TestInputString)

		// Build a stream from 'TestInputString' property
		Set pStream = ##class(%GlobalCharacterStream).%New()
		Do pStream.LineTerminatorSet($C(10))
		Do pStream.Write(..TestInputString)

		// Message count limited to 999
		Set %MSGCount = $I(%MSGCount)
		If (%MSGCount > 999) { Set %MSGCount = 1 }

		// Build a MTS message from the stream
		Set pMTS = ##class(ISSAS.Common.Adapter.MTS.Message.Message).%New()
		Set pMTS.BSBOName = ..%ConfigName
		Set pMTS.IsInbound = "IN"
		Set pMTS.MessageId = $TR($J(%MSGCount, 3), " ", "0")
		Set tSC = pMTS.FromStream(pStream, 1)
		If ($$$ISERR(tSC)) { $$$LOGERROR(tSC) }

		// Call OnProcessInput() method to send the message
		Set tSC = ..OnProcessInput(pMTS, "")
		If ($$$ISERR(tSC)) { $$$LOGERROR(tSC) }
		Set ..TestInputString = ""
	}

	Quit ##super()
]]></Implementation>
</Method>
</Class>


<Class name="ISSAS.Common.BS.MTS.TCPServiceKSC">
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BusinessService</Super>
<TimeChanged>65539,30037.538718</TimeChanged>
<TimeCreated>62446,59889.671721</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/BS/MTS/TCPService.xml#4 $</Default>
</Parameter>

<Property name="MSHDelimiter">
<Description>
Define fields separators to parse a segment</Description>
<Type>%String</Type>
<InitialExpression><![CDATA["\^~|&"]]></InitialExpression>
</Property>

<Property name="MSHDocType">
<Description><![CDATA[
Define document type <=> application name (caller)]]></Description>
<Type>%String</Type>
<InitialExpression>"ClinicomReceiver"</InitialExpression>
</Property>

<Property name="MSHPieceMessageType">
<Description>
Define piece index where we can find the message type</Description>
<Type>%Integer</Type>
<InitialExpression>1</InitialExpression>
</Property>

<Property name="MSHSendingApp">
<Description>
Define sending application to insert into MSH segment</Description>
<Type>%String</Type>
<InitialExpression>"Clinicom"</InitialExpression>
</Property>

<Property name="MSHSendingFacility">
<Description>
Define sending facility to insert into MSH segment</Description>
<Type>%String</Type>
<InitialExpression>"ISSAS"</InitialExpression>
</Property>

<Property name="MSHProcessingId">
<Description>
Define processing ID to insert into MSH segment (Environment)</Description>
<Type>%String</Type>
</Property>

<Property name="TargetConfigNames">
<Description>
Configuration item(s) to which to send messages</Description>
<Type>%String</Type>
<Parameter name="MAXLEN" value="2000"/>
</Property>

<Property name="TestInputString">
<Description>
Put some text into this field to simulate a message when the business service is started</Description>
<Type>%String</Type>
<Parameter name="MAXLEN" value="999999999"/>
</Property>

<Property name="SearchTableClass">
<Description><![CDATA[
Store a set of searchable properties associated with each HL7 message processed. <br/>
These records will be stored in the named SearchTable class, if any.]]></Description>
<Type>%String</Type>
<InitialExpression>"ISSAS.Common.SearchTable.Clinicom"</InitialExpression>
<Parameter name="MAXLEN" value="128"/>
</Property>

<Property name="EnableSearchTableWarning">
<Description>
Log warnings in journal when an error occurred storing message searchable properties in SearchTable class.</Description>
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>
</Property>

<Property name="DaysToKeepMessages">
<Description><![CDATA[
Number of days to keep messages stored into database. <br/>
Each messages status are separated by a comma : <i>'msg completed', 'msg error', 'msg aborted', 'msg suspended', 'msg discarded'</i>. <br/>
If this parameter is empty (or equal to 0), messages are never removed from database. <br/>
Note : messages are automatically deleted by the scheduled task <i>ISSAS.Common.SysTask.PurgeMsg</i>. <br/>
Examples : <br/>
* <i>60, 120</i> => delete completed messages after 60 days, and error messages after 120 days. <br/>
* <i>30, 0, 180</i> => delete completed messages after 30 days, and aborted messages after 180 days. <br/>
* <i>120</i> => delete completed messages after 120 days.]]></Description>
<Type>%String</Type>
</Property>

<Parameter name="ADAPTER">
<Default>ISSAS.Common.Adapter.MTS.TCP.InboundAdapter</Default>
</Parameter>

<Parameter name="SETTINGS">
<Default>TargetConfigNames, MSHDelimiter, MSHDocType, MSHPieceMessageType, MSHSendingApp, MSHSendingFacility, MSHProcessingId, TestInputString, SearchTableClass::selector?context={Ens.ContextSearch/SearchTableClasses?host=EnsLib.HL7.Service.Standard}, EnableSearchTableWarning, DaysToKeepMessages</Default>
</Parameter>

<Method name="OnProcessInput">
<FormalSpec>pInput:ISSAS.Common.Adapter.MTS.Message.Message,pOutput:%RegisteredObject</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim tSC As %Status = $$$OK
	#Dim pHL7 As ISSAS.Common.Message.ClinicomHL7 = ##class(ISSAS.Common.Message.ClinicomHL7).%New()

	// Initialize Clinicom HL7 parameters
	Set pHL7.MSHDelimiter = ..MSHDelimiter
	Set pHL7.MSHDocType = ..MSHDocType
	Set pHL7.MSHPieceMessageType = ..MSHPieceMessageType
	Set pHL7.MSHSendingApp = ..MSHSendingApp
	Set pHL7.MSHSendingFacility = ..MSHSendingFacility
	Set pHL7.MSHProcessingId = ..MSHProcessingId

	// Convert from MTS to HL7
	Set tSC = pHL7.FromMTS(pInput)

	// If an error occured, don't send message to targets
	If ($$$ISERR(tSC)) { Quit tSC }

	// Send HL7 message to all targets
	For iTarget=1:1:$L(..TargetConfigNames, ",")
	{
		Set tOneTarget=$ZStrip($P(..TargetConfigNames,",",iTarget),"<>W")  Continue:""=tOneTarget
		$$$sysTRACE("Sending HL7 Message "_pHL7_" / "_pHL7.%Id()_" from "_pHL7.Source_" to '"_tOneTarget_"'")
		Set tSC1=..SendRequestAsync(tOneTarget,pHL7)  Set:$$$ISERR(tSC1) tSC=$$$ADDSC(tSC,tSC1)
	}
	If ($$$ISERR(tSC)) { Quit tSC }

	// Build index for search table
	Do ##class(ISSAS.Common.SearchTable.BaseClass).IndexDocHelper(..SearchTableClass, pHL7, ..EnableSearchTableWarning)

	Quit tSC
]]></Implementation>
</Method>

<Method name="OnGetConnections">
<Description>
Return an array of connections for drawing lines on the config diagram</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>*pArray:%String,pItem:Ens.Config.Item</FormalSpec>
<Implementation><![CDATA[
	Do pItem.PopulateModifiedSettings()
	Set (tValue,tIndex)="" For {
		Set tSetting = pItem.ModifiedSettings.GetNext(.tIndex) Quit:tIndex=""
		If tSetting.Name="TargetConfigNames" Set tValue=tSetting.Value  Quit
	}
	For i=1:1:$L(tValue,",") { Set tOne=$ZStrip($P(tValue,",",i),"<>W")  Continue:""=tOne  Set pArray(tOne)="" }
]]></Implementation>
</Method>

<Method name="OnInit">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If ($L(..TestInputString))
	{
		// The user writes a text to simulate a message
		$$$LOGINFO("'TestInputString' property found to simulate a message : "_..TestInputString)

		// Build a stream from 'TestInputString' property
		Set pStream = ##class(%GlobalCharacterStream).%New()
		Do pStream.LineTerminatorSet($C(10))
		Do pStream.Write(..TestInputString)

		// Message count limited to 999
		Set %MSGCount = $I(%MSGCount)
		If (%MSGCount > 999) { Set %MSGCount = 1 }

		// Build a MTS message from the stream
		Set pMTS = ##class(ISSAS.Common.Adapter.MTS.Message.Message).%New()
		Set pMTS.BSBOName = ..%ConfigName
		Set pMTS.IsInbound = "IN"
		Set pMTS.MessageId = $TR($J(%MSGCount, 3), " ", "0")
		Set tSC = pMTS.FromStream(pStream, 1)
		If ($$$ISERR(tSC)) { $$$LOGERROR(tSC) }

		// Call OnProcessInput() method to send the message
		Set tSC = ..OnProcessInput(pMTS, "")
		If ($$$ISERR(tSC)) { $$$LOGERROR(tSC) }
		Set ..TestInputString = ""
	}

	Quit ##super()
]]></Implementation>
</Method>
</Class>






<Class name="ISSAS.Common.DTL.CCOMtoHL7v231.ADtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65132,54419</TimeChanged>
<TimeCreated>62468,40604.01095</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v231/ADtoADT.xml#8 $</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:AD" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.3.1"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt("ADT^"_..Lookup("CCOM_HL7_MessageType_v231","AD"_source.GetValueAt("AD:AD01Mode")),"MSH:MessageType","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v231","AD"_source.GetValueAt("AD:AD01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>

<!-- segment EVN -->
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD320DateHeureAdmission}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD331Utilisateur.Username}" property="target.{EVN:OperatorID(1).IDNumberST}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD03IPP}" property="target.{PID:PatientIdentifierList(1).ID}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD04NomUsuel.Nom}" property="target.{PID:PatientName(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD04NomUsuel.NameTypeCode}" property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD05Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD211AutresPrenoms}" property="target.{PID:PatientName(1).middleinitialorname}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD06Qualite}" property="target.{PID:PatientName(1).prefix}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{AD:AD07NomDeNaissance.Nom}) &amp;&amp; (source.{AD:AD04NomUsuel.Nom} '= source.{AD:AD07NomDeNaissance.Nom})">
<true>
<assign value="source.{AD:AD07NomDeNaissance.Nom}" property="target.{PID:PatientName(2).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD07NomDeNaissance.NameTypeCode}" property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD05Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{AD:AD09DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{AD:AD10Sexe})" property="target.{PID:Sex}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD11NoRueAdresse}" property="target.{PID:PatientAddress(1).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD12CodePostalAdresse}" property="target.{PID:PatientAddress(1).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD201LocaliteAdresse}" property="target.{PID:PatientAddress(1).city}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD206ComplementAdresse}" property="target.{PID:PatientAddress(1).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD207PaysAdresse}" property="target.{PID:PatientAddress(1).country}" key="&quot;&quot;" action="set" />

<!-- téléphones seulement si valorisés -->
<if condition="$L(source.{AD2:AD202TelephoneDomicile})">
<true>
<assign value="source.{AD2:AD202TelephoneDomicile}" property="target.{PID:PhoneNumberHome($I(nbtel)).phoneNumber1}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{AD2:AD208TelephoneProfessionnel})">
<true>
<assign value="source.{AD2:AD208TelephoneProfessionnel}" property="target.{PID:PhoneNumberBusiness(1).phoneNumber1}" key="&quot;&quot;" action="set" />
<assign value="&quot;WPN&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{AD2:AD212TelephonePortable})">
<true>
<assign value="source.{AD2:AD212TelephonePortable}" property="target.{PID:PhoneNumberHome($I(nbtel)).phoneNumber1}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;CP&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>

<assign value="source.{AD2:AD203Nationalite}" property="target.{PID:Nationality}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD215NumeroSSDernierEpisode}" property="target.{PID:SSNNumberPatient}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD303NumeroEpisode}" property="target.{PID:PatientAccountNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="..Lookup($G(^ISSAS.Config(&quot;LUT&quot;, &quot;CCOM_HL7_MaritalStatus&quot;)),source.{AD3:AD309SituationFamiliale})" property="target.{PID:MaritalStatus.identifier}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<!-- Patient Class = R si épisode récurrent, I sinon -->
<if condition="source.{AD3:AD322IndicateurEpisodeRecurr} = 1">
<true>
<assign value="&quot;R&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;I&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
</false>
</if>

<assign value="source.{AD2:AD213IdentifiantUniqueDeMouv}" property="target.{PV1:AlternateVisitID}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD303NumeroEpisode}" property="target.{PV1:VisitNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value='source.{AD3:AD301Hopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.FacilityHD}' action='set' />
<assign value="source.{AD3:AD305CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD307Lit}" property="target.{PV1:AssignedPatientLocation.bed}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD308Chambre}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD313ModeEntree}" property="target.{PV1:AdmitSource}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD319MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumberST}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD319MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD319MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD319MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD319MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD320DateHeureAdmission}" property="target.{PV1:AdmitDateTime.timeofanevent}" key="&quot;&quot;" action="set" />

<!-- segment ZFU -->
<assign value="source.{AD3:AD306CodeUF}" property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD320DateHeureAdmission}" property="target.{ZFU:MedicalFunctionalUnitStartDa}" key="&quot;&quot;" action="set" />

<if condition="$L(source.{AD3:AD334DateHeureDecisionMedica})">
<true>
<assign value="source.{AD3:AD334DateHeureDecisionMedica}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD334DateHeureDecisionMedica}" property="target.{ZFU:MedicalFunctionalUnitStartDa}" key="&quot;&quot;" action="set" />
</true>
</if>
</transform>
]]></Data>
</XData>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v231.AStoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64418,54398</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v231/AStoADT.xml#3 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:AS" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ 
 Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.3.1"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_PatientClass&quot;,source.{AS:AS01Mode})" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt("ADT^"_..Lookup("CCOM_HL7_MessageType_v231","AS"_source.GetValueAt("AS:AS01Mode")),"MSH:MessageType","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v231","AS"_source.GetValueAt("AS:AS01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>

<!-- segment EVN -->
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS05IPP}" property="target.{PID:PatientIdentifierList(1).ID}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS15NomUsuel.Nom}" property="target.{PID:PatientName(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS15NomUsuel.NameTypeCode}" property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS16Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{AS:AS17NomDeNaissance.Nom}) &amp;&amp; (source.{AS:AS15NomUsuel.Nom} '= source.{AS:AS17NomDeNaissance.Nom})">
<true>
<assign value="source.{AS:AS17NomDeNaissance.Nom}" property="target.{PID:PatientName(2).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS17NomDeNaissance.NameTypeCode}" property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS16Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{AS:AS19DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{AS:AS18Sexe})" property="target.{PID:Sex}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS06NumeroEpisode}" property="target.{PID:PatientAccountNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS10IPPMere}" property="target.{PID:MothersIdentifier.ID}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS21IdentifiantUniqueDeMouve}" property="target.{PV1:AlternateVisitID}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS06NumeroEpisode}" property="target.{PV1:VisitNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS13CodeUSOuConsultation}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS12DateHeureEpisode}" property="target.{PV1:AdmitDateTime.timeofanevent}" key="&quot;&quot;" action="set" />

<!-- segment ZFU -->
<assign value="source.{AS:AS14CodeUF}" property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS12DateHeureEpisode}" property="target.{ZFU:MedicalFunctionalUnitStartDa}" key="&quot;&quot;" action="set" />
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v231.DStoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65132,54419</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v231/DStoADT.xml#6 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:DS" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.3.1"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt("ADT^"_..Lookup("CCOM_HL7_MessageType_v231","DS"_source.GetValueAt("DS:DS01Mode")),"MSH:MessageType","set","")]]]]><![CDATA[>
</code>

<!-- ENV -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v231","DS"_source.GetValueAt("DS:DS01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS07DateHeureSortie}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS28Utilisateur.Username}" property="target.{EVN:OperatorID(1).IDNumberST}" key="&quot;&quot;" action="set" />

<!-- PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS05IPP}" property="target.{PID:PatientIdentifierList(1).ID}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS19NomUsuel.Nom}" property="target.{PID:PatientName(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS19NomUsuel.NameTypeCode}" property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS20Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{DS:DS22NomDeNaissance.Nom}) &amp;&amp; (source.{DS:DS19NomUsuel.Nom} '= source.{DS:DS22NomDeNaissance.Nom})">
<true>
<assign value="source.{DS:DS22NomDeNaissance.Nom}" property="target.{PID:PatientName(2).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS22NomDeNaissance.NameTypeCode}" property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS20Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{DS:DS24DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{DS:DS23Sexe})" property="target.{PID:Sex}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS06NumeroEpisode}" property="target.{PID:PatientAccountNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />

<!-- PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<!-- Patient Class = R si épisode récurrent, I sinon -->
<if condition="source.{DS:DS26IndicateurEpisodeRecurre} = 1">
<true>
<assign value="&quot;R&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;I&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value='source.{DS:DS02Hopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.FacilityHD}' action='set' />
<assign value="source.{DS:DS14CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS21Chambre}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS10ModeSortie}" property="target.{PV1:DischargeDisposition}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS06NumeroEpisode}" property="target.{PV1:VisitNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS25MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumberST}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS25MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS25MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS25MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS25MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS07DateHeureSortie}" property="target.{PV1:DischargeDateTime.timeofanevent}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS27IdentifiantUniqueDeMouve}" property="target.{PV1:AlternateVisitID}" key="&quot;&quot;" action="set" />

<!-- ZFU -->
<assign value="source.{DS:DS13CodeUF}" property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS07DateHeureSortie}" property="target.{ZFU:MedicalFunctionalUnitStartDa}" key="&quot;&quot;" action="set" />

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v231.HMtoMFN">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64418,54398</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v231/HMtoMFN.xml#4 $</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='EnsLib.HL7.Message' sourceDocType='Clinicom:HM' targetDocType='2.3.1:MFN_M02' create='new' language='objectscript' >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.3.1"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) 
 Set nbTel=0 ]]]]><![CDATA[>
 </code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"MFN^M02"' property="target.{MSH:MessageType}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />

<!-- segment MFI -->
<assign value='"CLINICOM"' property='target.{MFI:MasterFileIdentifier}' action='set' />
<assign value='"UPD"' property='target.{MFI:FileLevelEventCode}' action='set' />
<assign value="$E(strNow, 1, 12)" property="target.{MFI:EnteredDateTime}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MFI:EffectiveDateTime}" key="&quot;&quot;" action="set" />
<assign value='"AL"' property='target.{MFI:ResponseLevelCode}' action='set' />

<!-- segment MFE -->
<if condition='source.{HM:HM01Mode}="01"'>
<true>
<assign value='"MAD"' property='target.{MFEgrp(1).MFE:RecordLevelEventCode}' action='set' />
</true>
</if>
<if condition='source.{HM:HM01Mode}="02"'>
<true>
<assign value='"MUP"' property='target.{MFEgrp(1).MFE:RecordLevelEventCode}' action='set' />
</true>
</if>
<if condition='source.{HM:HM01Mode}="03"'>
<true>
<assign value='"MDL"' property='target.{MFEgrp(1).MFE:RecordLevelEventCode}' action='set' />
</true>
</if>
<assign value="$E(strNow, 1, 12)" property="target.{MFEgrp(1).MFE:EffectiveDateTime}" key="&quot;&quot;" action="set" />
<assign value='source.{HM:HM02CodeClinicom}' property='target.{MFEgrp(1).MFE:PrimaryKeyValueMFE(1)}' action='set' />
<assign value='"CE"' property='target.{MFEgrp(1).MFE:PrimaryKeyValueType(1)}' action='set' />

<!-- segment STF -->
<assign value='source.{HM:HM02CodeClinicom}' property='target.{MFEgrp(1).STF:PrimaryKeyValueSTF.identifier}' action='set' />
<assign value='source.{HM:HM03NomUsuel}' property='target.{MFEgrp(1).STF:StaffName(1).familylastname}' action='set' />
<assign value='source.{HM:HM04Prenom}' property='target.{MFEgrp(1).STF:StaffName(1).givenname}' action='set' />
<assign value='source.{HM:HM05Qualite}' property='target.{MFEgrp(1).STF:StaffName(1).prefix}' action='set' />
<assign value='source.{HM2:HM201Titre}' property='target.{MFEgrp(1).STF:StaffName(1).degree}' action='set' />
<assign value='source.{HM2:HM203Telephone1}' property='target.{MFEgrp(1).STF:Phone($I(nbTel)).phonenumber1}' action='set' />
<assign value='source.{HM2:HM204Telephone2}' property='target.{MFEgrp(1).STF:Phone($I(nbTel)).phonenumber1}' action='set' />
<assign value='source.{HM2:HM205NoFax}' property='target.{MFEgrp(1).STF:Phone($I(nbTel)).phonenumber1}' action='set' />
<assign value='source.{HM:HM06NoRueAdresse}' property='target.{MFEgrp(1).STF:OfficeHomeAddress(1).streetaddress}' action='set' />
<assign value='source.{HM:HM07ComplementAdresse}' property='target.{MFEgrp(1).STF:OfficeHomeAddress(1).otherdesignation}' action='set' />
<assign value='source.{HM:HM08LocaliteAdresse}' property='target.{MFEgrp(1).STF:OfficeHomeAddress(1).city}' action='set' />
<assign value='source.{HM:HM09CodePostalAdresse}' property='target.{MFEgrp(1).STF:OfficeHomeAddress(1).ziporpostalcode}' action='set' />
<assign value='source.{HM2:HM202PaysAdresse}' property='target.{MFEgrp(1).STF:OfficeHomeAddress(1).country}' action='set' />
<assign value='source.{HM2:HM209AdresseEmail}' property='target.{MFEgrp(1).STF:EMailAddress(1)}' action='set' />
<assign value='"I"' property='target.{MFEgrp(1).STF:JobCodeClass}' action='set' />

<!-- segment PRA -->
<assign value='source.{HM:HM02CodeClinicom}' property='target.{MFEgrp(1).PRA:PrimaryKeyValuePRA}' action='set' />
<assign value='"MPMD"' property='target.{MFEgrp(1).PRA:PractitionerGroup(1)}' action='set' />
<assign value='source.{HM2:HM206Specialite}' property='target.{MFEgrp(1).PRA:Specialty(1)}' action='set' />
<assign value='source.{HM2:HM207NoInscriptionALOrdre}' property='target.{MFEgrp(1).PRA:PractitionerIDNumbers(1)}' action='set' />
</transform>
]]></Data>
</XData>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v231.NDtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64751,60678</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v231/NDtoADT.xml#4 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:ND" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.3.1"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt("ADT^"_..Lookup("CCOM_HL7_MessageType_v231","ND"_source.GetValueAt("ND:ND01Mode")),"MSH:MessageType","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v231","ND"_source.GetValueAt("ND:ND01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND05IPP}" property="target.{PID:PatientIdentifierList(1).ID}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND20NomUsuel.Nom}" property="target.{PID:PatientName(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND20NomUsuel.NameTypeCode}" property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND21Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND24DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{ND:ND26Sexe})" property="target.{PID:Sex}" key="&quot;&quot;" action="set" />
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;I&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND23IdentifiantUniqueDeMouve}" property="target.{PV1:AlternateVisitID}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND06NumeroEpisode}" property="target.{PID:PatientAccountNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND06NumeroEpisode}" property="target.{PV1:VisitNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND13IPPMere}" property="target.{PID:MothersIdentifier}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND17CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND16CodeUF}" property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND22Chambre}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND15ModeSortie}" property="target.{PV1:DischargeDisposition}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND07DateHeureSortie}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND07DateHeureSortie}" property="target.{ZFU:MedicalFunctionalUnitStartDa}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND07DateHeureSortie}" property="target.{PV1:DischargeDateTime.timeofanevent}" key="&quot;&quot;" action="set" />

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v231.NRtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65132,54419</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v231/NRtoADT.xml#6 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:NR" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.3.1"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt("ADT^"_..Lookup("CCOM_HL7_MessageType_v231","NR"_source.GetValueAt("NR:NR01Mode")),"MSH:MessageType","set","")]]]]><![CDATA[>
</code>

<!-- segment EVN -->
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v231","NR"_source.GetValueAt("NR:NR01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="source.{NR4:NR411DateHeureAdmission}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR306Utilisateur.Username}" property="target.{EVN:OperatorID(1).IDNumberST}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{NR:NR03IPP}" property="target.{PID:PatientIdentifierList(1).ID}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="source.{NR:NR04NomUsuel.Nom}" property="target.{PID:PatientName(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{NR:NR04NomUsuel.NameTypeCode}" property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{NR:NR05Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{NR:NR06AutresPrenoms}" property="target.{PID:PatientName(1).middleinitialorname}" key="&quot;&quot;" action="set" />
<assign value="source.{NR:NR07Qualite}" property="target.{PID:PatientName(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{NR:NR10DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{NR:NR11Sexe})" property="target.{PID:Sex}" key="&quot;&quot;" action="set" />
<assign value="source.{NR:NR12NoRueAdresse}" property="target.{PID:PatientAddress(1).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{NR:NR13CodePostalAdresse}" property="target.{PID:PatientAddress(1).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{NR2:NR201LocaliteAdresse}" property="target.{PID:PatientAddress(1).city}" key="&quot;&quot;" action="set" />
<assign value="source.{NR2:NR206ComplementAdresse}" property="target.{PID:PatientAddress(1).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{NR2:NR202PaysAdresse}" property="target.{PID:PatientAddress(1).country}" key="&quot;&quot;" action="set" />
<assign value="source.{NR2:NR203Telephone}" property="target.{PID:PhoneNumberHome(1).phonenumber1}" key="&quot;&quot;" action="set" />
<assign value="source.{NR2:NR204Nationalite}" property="target.{PID:Nationality}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR303NumeroEpisode}" property="target.{PID:PatientAccountNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{NR4:NR415IPPMere}" property="target.{PID:MothersIdentifier}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;I&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="&quot;R&quot;" property="target.{PV1:AdmissionType}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR307IdentifiantUniqueDeMouv}" property="target.{PV1:AlternateVisitID}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR303NumeroEpisode}" property="target.{PV1:VisitNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value='source.{NR3:NR301CodeHopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.FacilityHD}' action='set' />
<assign value="source.{NR4:NR408CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR304Chambre}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR305MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumberST}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR305MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR305MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR305MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR305MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value="source.{NR4:NR411DateHeureAdmission}" property="target.{PV1:AdmitDateTime.timeofanevent}" key="&quot;&quot;" action="set" />

<!-- segment ZFU -->
<assign value="source.{NR4:NR411DateHeureAdmission}" property="target.{ZFU:MedicalFunctionalUnitStartDa}" key="&quot;&quot;" action="set" />
<assign value="source.{NR4:NR409CodeUF}" property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v231.OD2toADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64418,54398</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v231/OD2toADT.xml#3 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:OD" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.3.1"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt("ADT^"_..Lookup("CCOM_HL7_MessageType_v231","DS"_source.GetValueAt("OD:OD01Mode")),"MSH:MessageType","set","")]]]]><![CDATA[>
</code>

<!-- EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v231","DS"_source.GetValueAt("OD:OD01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD07DateHeureCloture}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />

<!-- PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD05IPP}" property="target.{PID:PatientIdentifierList(1).ID}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD10NomUsuel}" property="target.{PID:PatientName(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD11Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{OD:OD12NomDeNaissance}) &amp;&amp; (source.{OD:OD10NomUsuel} '= source.{OD:OD12NomDeNaissance})">
<true>
<assign value="source.{OD:OD12NomDeNaissance}" property="target.{PID:PatientName(2).familylastname}" key="&quot;&quot;" action="set" />
<assign value='"M"' property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD11Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{OD:OD13DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{OD:OD14Sexe})" property="target.{PID:Sex}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD06NumeroEpisode}" property="target.{PID:PatientAccountNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />

<!-- PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;O&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD15CodeUniteConsultation}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD06NumeroEpisode}" property="target.{PV1:VisitNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD17CodeMedecinResponsable}" property="target.{PV1:AttendingDoctor(1).IDnumberST}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD07DateHeureCloture}" property="target.{PV1:DischargeDateTime.timeofanevent}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD09IdentifiantUniqueDeMouve}" property="target.{PV1:AlternateVisitID}" key="&quot;&quot;" action="set" />

<!-- ZFU -->
<assign value="source.{OD:OD16CodeUF}" property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD07DateHeureCloture}" property="target.{ZFU:MedicalFunctionalUnitStartDa}" key="&quot;&quot;" action="set" />

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v231.OPtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65132,54419</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v231/OPtoADT.xml#4 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:OP" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ 
 Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.3.1"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt("ADT^"_..Lookup("CCOM_HL7_MessageType_v231","OP"_source.GetValueAt("OP:OP01Mode")),"MSH:MessageType","set","")]]]]><![CDATA[>
</code>

<!-- segment EVN -->
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v231","OP"_source.GetValueAt("OP:OP01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="source.{OP3:OP306DateHeureEnregistrement}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP311Utilisateur.Username}" property="target.{EVN:OperatorID(1).IDNumberST}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{OP:OP03IPP}" property="target.{PID:PatientIdentifierList(1).ID}" key="&quot;&quot;" action="set" />
<assign value="source.{OP:OP04NomUsuel}" property="target.{PID:PatientName(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="&quot;L&quot;" property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{OP:OP05Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{OP:OP06Qualite}" property="target.{PID:PatientName(1).prefix}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{OP:OP07NomDeNaissance}) &amp;&amp; (source.{OP:OP04NomUsuel} '= source.{OP:OP07NomDeNaissance})">
<true>
<assign value="source.{OP:OP07NomDeNaissance}" property="target.{PID:PatientName(2).familylastname}" key="&quot;&quot;" action="set" />
<assign value="&quot;M&quot;" property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{OP:OP05Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{OP:OP09DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{OP:OP10Sexe})" property="target.{PID:Sex}" key="&quot;&quot;" action="set" />
<assign value="source.{OP:OP11NoRueAdresse}" property="target.{PID:PatientAddress(1).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{OP:OP12CodePostalAdresse}" property="target.{PID:PatientAddress(1).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{OP2:OP201LocaliteAdresse}" property="target.{PID:PatientAddress(1).city}" key="&quot;&quot;" action="set" />
<assign value="source.{OP2:OP206ComplementAdresse}" property="target.{PID:PatientAddress(1).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{OP2:OP207PaysAdresse}" property="target.{PID:PatientAddress(1).country}" key="&quot;&quot;" action="set" />
<assign value="source.{OP2:OP202TelephoneDomicile}" property="target.{PID:PhoneNumberHome(1).phonenumber1}" key="&quot;&quot;" action="set" />
<assign value="source.{OP2:OP208TelephoneProfessionnel}" property="target.{PID:PhoneNumberBusiness(1).phonenumber1}" key="&quot;&quot;" action="set" />
<assign value="source.{OP2:OP203Nationalite}" property="target.{PID:Nationality}" key="&quot;&quot;" action="set" />
<assign value="source.{OP2:OP211NumeroSSDernierEpisode}" property="target.{PID:SSNNumberPatient}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP303NumeroEpisode}" property="target.{PID:PatientAccountNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="..Lookup($G(^ISSAS.Config(&quot;LUT&quot;, &quot;CCOM_HL7_MaritalStatus&quot;)),source.{OP3:OP308SituationFamiliale})" property="target.{PID:MaritalStatus.identifier}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;P&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="&quot;R&quot;" property="target.{PV1:AdmissionType}" key="&quot;&quot;" action="set" />
<assign value="source.{OP2:OP209IdentifiantUniqueDeMouv}" property="target.{PV1:AlternateVisitID}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP303NumeroEpisode}" property="target.{PV1:VisitNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value='source.{OP3:OP301CodeHopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.FacilityHD}' action='set' />
<assign value="source.{OP3:OP304CodeUniteConsultation}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP309CodeMedecinResponsable}" property="target.{PV1:AttendingDoctor(1).IDnumberST}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP306DateHeureEnregistrement}" property="target.{PV1:AdmitDateTime.timeofanevent}" key="&quot;&quot;" action="set" />

<!-- segment ZFU -->
<assign value="source.{OP3:OP305CodeUF}" property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP306DateHeureEnregistrement}" property="target.{ZFU:MedicalFunctionalUnitStartDa}" key="&quot;&quot;" action="set" />

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v231.ORtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65183,62726</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v231/ORtoADT.xml#8 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:OR" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.3.1"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt("ADT^"_..Lookup("CCOM_HL7_MessageType_v231","OR"_source.GetValueAt("OR:OR01Mode")),"MSH:MessageType","set","")]]]]><![CDATA[>
</code>

<!-- segment EVN -->
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v231","OR"_source.GetValueAt("OR:OR01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="source.{OR3:OR307DateHeureEnregistrement}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR320Utilisateur.Username}" property="target.{EVN:OperatorID(1).IDNumberST}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR03IPP}" property="target.{PID:PatientIdentifierList(1).ID}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR04NomUsuel.Nom}" property="target.{PID:PatientName(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR04NomUsuel.NameTypeCode}" property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR05Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR318AutresPrenoms}" property="target.{PID:PatientName(1).middleinitialorname}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR06Qualite}" property="target.{PID:PatientName(1).prefix}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{OR:OR07NomDeNaissance.Nom}) &amp;&amp; (source.{OR:OR04NomUsuel.Nom} '= source.{OR:OR07NomDeNaissance.Nom})">
<true>
<assign value="source.{OR:OR07NomDeNaissance.Nom}" property="target.{PID:PatientName(2).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR07NomDeNaissance.NameTypeCode}" property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR05Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{OR:OR09DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{OR:OR10Sexe})" property="target.{PID:Sex}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR11NoRueAdresse}" property="target.{PID:PatientAddress(1).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR12CodePostalAdresse}" property="target.{PID:PatientAddress(1).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{OR2:OR201LocaliteAdresse}" property="target.{PID:PatientAddress(1).city}" key="&quot;&quot;" action="set" />
<assign value="source.{OR2:OR206ComplementAdresse}" property="target.{PID:PatientAddress(1).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{OR2:OR207PaysAdresse}" property="target.{PID:PatientAddress(1).country}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{OR2:OR202TelephoneDomicile})">
<true>
<assign value="source.{OR2:OR202TelephoneDomicile}" property="target.{PID:PhoneNumberHome($I(nbtel)).phoneNumber1}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{OR2:OR208TelephoneProfessionnel})">
<true>
<assign value="source.{OR2:OR208TelephoneProfessionnel}" property="target.{PID:PhoneNumberBusiness(1).phoneNumber1}" key="&quot;&quot;" action="set" />
<assign value="&quot;WPN&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{OR2:OR209TelephonePortable})">
<true>
<assign value="source.{OR2:OR209TelephonePortable}" property="target.{PID:PhoneNumberHome($I(nbtel)).phoneNumber1}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;CP&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{OR2:OR203Nationalite}" property="target.{PID:Nationality}" key="&quot;&quot;" action="set" />
<assign value="source.{OR2:OR212NumeroSSDernierEpisode}" property="target.{PID:SSNNumberPatient}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR303NumeroEpisode}" property="target.{PID:PatientAccountNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="..Lookup($G(^ISSAS.Config(&quot;LUT&quot;, &quot;CCOM_HL7_MaritalStatus&quot;)),source.{OR3:OR309SituationFamiliale})" property="target.{PID:MaritalStatus.identifier}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;O&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="source.{OR2:OR210IdentifiantUniqueDeMouv}" property="target.{PV1:AlternateVisitID}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR303NumeroEpisode}" property="target.{PV1:VisitNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value='source.{OR3:OR301CodeHopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.FacilityHD}' action='set' />
<assign value="source.{OR3:OR305CodeUniteConsultation}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR315MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumberST}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR315MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR315MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR315MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR315MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR307DateHeureEnregistrement}" property="target.{PV1:AdmitDateTime.timeofanevent}" key="&quot;&quot;" action="set" />

<!-- segment ZFU -->
<assign value="source.{OR3:OR306CodeUF}" property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR307DateHeureEnregistrement}" property="target.{ZFU:MedicalFunctionalUnitStartDa}" key="&quot;&quot;" action="set" />

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v231.PAtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65132,54420</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v231/PAtoADT.xml#5 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:PA" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.3.1"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt("ADT^"_..Lookup("CCOM_HL7_MessageType_v231","PA"_source.GetValueAt("PA:PA01Mode")),"MSH:MessageType","set","")]]]]><![CDATA[>
</code>

<!-- segment EVN -->
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA316DateHeureAdmissionPrevu}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v231","PA"_source.GetValueAt("PA:PA01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="source.{PA7:PA712Utilisateur.Username}" property="target.{EVN:OperatorID(1).IDNumberST}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA03IPP}" property="target.{PID:PatientIdentifierList(1).ID}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA04NomUsuel.Nom}" property="target.{PID:PatientName(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA04NomUsuel.NameTypeCode}" property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA05Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA324AutresPrenoms}" property="target.{PID:PatientName(1).middleinitialorname}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA06Qualite}" property="target.{PID:PatientName(1).prefix}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PA:PA07NomDeNaissance.Nom}) &amp;&amp; (source.{PA:PA04NomUsuel.Nom} '= source.{PA:PA07NomDeNaissance.Nom})">
<true>
<assign value="source.{PA:PA07NomDeNaissance.Nom}" property="target.{PID:PatientName(2).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA07NomDeNaissance.NameTypeCode}" property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA05Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{PA:PA09DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{PA:PA10Sexe})" property="target.{PID:Sex}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA11NoRueAdresse}" property="target.{PID:PatientAddress(1).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA12CodePostalAdresse}" property="target.{PID:PatientAddress(1).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{PA2:PA201LocaliteAdresse}" property="target.{PID:PatientAddress(1).city}" key="&quot;&quot;" action="set" />
<assign value="source.{PA2:PA206ComplementAdresse}" property="target.{PID:PatientAddress(1).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{PA2:PA207PaysAdresse}" property="target.{PID:PatientAddress(1).country}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PA2:PA202TelephoneDomicile})">
<true>
<assign value="source.{PA2:PA202TelephoneDomicile}" property="target.{PID:PhoneNumberHome($I(nbtel)).phoneNumber1}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{PA2:PA208TelephoneProfessionnel})">
<true>
<assign value="source.{PA2:PA208TelephoneProfessionnel}" property="target.{PID:PhoneNumberBusiness(1).phoneNumber1}" key="&quot;&quot;" action="set" />
<assign value="&quot;WPN&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{PA2:PA209TelephonePortable})">
<true>
<assign value="source.{PA2:PA209TelephonePortable}" property="target.{PID:PhoneNumberHome($I(nbtel)).phoneNumber1}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;CP&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{PA2:PA203Nationalite}" property="target.{PID:Nationality}" key="&quot;&quot;" action="set" />
<assign value="source.{PA2:PA212NumeroSSDernierEpisode}" property="target.{PID:SSNNumberPatient}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA303NumeroEpisode}" property="target.{PID:PatientAccountNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="..Lookup($G(^ISSAS.Config(&quot;LUT&quot;, &quot;CCOM_HL7_MaritalStatus&quot;)),source.{PA3:PA307SituationFamiliale})" property="target.{PID:MaritalStatus.identifier}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="source.{PA2:PA210IdentifiantUniqueDeMouv}" property="target.{PV1:AlternateVisitID}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA303NumeroEpisode}" property="target.{PV1:VisitNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;P&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value='source.{PA3:PA301CodeHopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.FacilityHD}' action='set' />
<assign value="source.{PA3:PA305CodeUSPrevue}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA311ModeEntree}" property="target.{PV1:AdmitSource}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA321MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumberST}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA321MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA321MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA321MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA321MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA316DateHeureAdmissionPrevu}" property="target.{PV1:AdmitDateTime.timeofanevent}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA303NumeroEpisode}" property="target.{PV1:PreadmitNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:PreadmitNumber.assigningauthority}" key="&quot;&quot;" action="set" />

<!-- segment ZFU -->
<assign value="source.{PA3:PA316DateHeureAdmissionPrevu}" property="target.{ZFU:MedicalFunctionalUnitStartDa}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA306CodeUFPrevue}" property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v231.PBtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65449,52536</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v231/PBtoADT.xml#11 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:PB" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ 
 Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.3.1"), "CLINICOM")
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt("ADT^"_..Lookup("CCOM_HL7_MessageType_v231","PB"_source.GetValueAt("PB:PB01Mode")),"MSH:MessageType","set","")]]]]><![CDATA[>
</code>

<!-- segment EVN -->
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v231","PB"_source.GetValueAt("PB:PB01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="source.{PB2:PB218Utilisateur.Username}" property="target.{EVN:OperatorID(1).IDNumberST}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{PB:PB03IPP}" property="target.{PID:PatientIdentifierList(1).ID}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PB2:PB220IdentifiantNational.Valeur})">
<true>
<assign value="source.{PB2:PB220IdentifiantNational.Valeur}" property="target.{PID:PatientIdentifierList(2).ID}" key="&quot;&quot;" action="set" />
<assign value="&quot;1.2.250.1.213.1.4.2&quot;" property="target.{PID:PatientIdentifierList(2).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;INS-C&quot;" property="target.{PID:PatientIdentifierList(2).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;ASIP&quot;" property="target.{PID:PatientIdentifierList(2).AssigningFacility}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{PB:PB04NomUsuel}" property="target.{PID:PatientName(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="&quot;L&quot;" property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PB:PB05Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB213AutresPrenoms}" property="target.{PID:PatientName(1).middleinitialorname}" key="&quot;&quot;" action="set" />
<assign value="source.{PB:PB06Qualite}" property="target.{PID:PatientName(1).prefix}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PB:PB07NomDeNaissance}) &amp;&amp; (source.{PB:PB04NomUsuel} '= source.{PB:PB07NomDeNaissance})">
<true>
<assign value="source.{PB:PB07NomDeNaissance}" property="target.{PID:PatientName(2).familylastname}" key="&quot;&quot;" action="set" />
<assign value="&quot;M&quot;" property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PB:PB05Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{PB:PB09DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{PB:PB10Sexe})" property="target.{PID:Sex}" key="&quot;&quot;" action="set" />
<assign value="source.{PB:PB11NoRueAdresse}" property="target.{PID:PatientAddress(1).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{PB:PB12CodePostalAdresse}" property="target.{PID:PatientAddress(1).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB201LocaliteAdresse}" property="target.{PID:PatientAddress(1).city}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB206ComplementAdresse}" property="target.{PID:PatientAddress(1).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB207PaysAdresse}" property="target.{PID:PatientAddress(1).country}" key="&quot;&quot;" action="set" />

<if condition="$L(source.{PB2:PB202TelephoneDomicile})">
<true>
<assign value="source.{PB2:PB202TelephoneDomicile}" property="target.{PID:PhoneNumberHome($I(nbtel)).phoneNumber1}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{PB2:PB208TelephoneProfessionnel})">
<true>
<assign value="source.{PB2:PB208TelephoneProfessionnel}" property="target.{PID:PhoneNumberBusiness(1).phoneNumber1}" key="&quot;&quot;" action="set" />
<assign value="&quot;WPN&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{PB2:PB217TelephonePortable})">
<true>
<assign value="source.{PB2:PB217TelephonePortable}" property="target.{PID:PhoneNumberHome($I(nbtel)).phoneNumber1}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;CP&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{PB2:PB203Nationalite}" property="target.{PID:Citizenship(1)}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB203Nationalite}" property="target.{PID:Nationality}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB209DateDeDeces}" property="target.{PID:PatientDeathDateandTime(1)}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PB2:PB209DateDeDeces})">
<true>
<assign value="&quot;Y&quot;" property="target.{PID:PatientDeathIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;N&quot;" property="target.{PID:PatientDeathIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="..Lookup($G(^ISSAS.Config(&quot;LUT&quot;, &quot;CCOM_HL7_MaritalStatus&quot;)),source.{PB2:PB210SituationFamiliale})" property="target.{PID:MaritalStatus.identifier}" key="&quot;&quot;" action="set" />

<!-- segment(s) NK1 -->
<foreach key="kPaP" property="source.{PB4()}">
<code>
<![CDATA[ Set occTel=0 ]]]]><![CDATA[>
</code>
<assign value="kPaP" property="target.{NK1(kPaP):SetIDNK1}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB402NomUsuel}" property="target.{NK1(kPaP):Name(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB403Prenom}" property="target.{NK1(kPaP):Name(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB416Civilite}" property="target.{NK1(kPaP):Name(1).Prefix}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_RelationShip&quot;,source.{PB4(kPaP):PB404LienDeParente.Code},&quot;UNK&quot;)" property="target.{NK1(kPaP):Relationship}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB405NoRue}" property="target.{NK1(kPaP):Address(1).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB406ComplementAdresse}" property="target.{NK1(kPaP):Address(1).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB407Pays}" property="target.{NK1(kPaP):Address(1).country}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB408CodePostal}" property="target.{NK1(kPaP):Address(1).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB409Localite}" property="target.{NK1(kPaP):Address(1).city}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PB4(kPaP):PB410TelephoneDomicile})">
<true>
<assign value="source.{PB4(kPaP):PB410TelephoneDomicile}" property="target.{NK1(kPaP):PhoneNumber($I(occTel)).phonenumber1}" key="&quot;&quot;" action="set" />
<assign value='"PH"' property="target.{NK1(kPaP):PhoneNumber(occTel).telecommunicationequipmentty}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{PB4(kPaP):PB411TelephoneProfessionnel}" property="target.{NK1(kPaP):BusinessPhoneNumber(1).phonenumber1}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PB4(kPaP):PB413TelephoneMobile})">
<true>
<assign value="source.{PB4(kPaP):PB413TelephoneMobile}" property="target.{NK1(kPaP):PhoneNumber($I(occTel)).phonenumber1}" key="&quot;&quot;" action="set" />
<assign value='"CP"' property="target.{NK1(kPaP):PhoneNumber(occTel).telecommunicationequipmentty}" key="&quot;&quot;" action="set" />
</true>
</if>
</foreach>

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;N&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v231.PMtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64418,54398</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v231/PMtoADT.xml#3 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:PM" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.3.1"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt("ADT^"_..Lookup("CCOM_HL7_MessageType_v231","PM"_source.GetValueAt("PM:PM01Mode")),"MSH:MessageType","set","")]]]]><![CDATA[>
</code>

<!-- segment EVN -->
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v231","PM"_source.GetValueAt("PM:PM01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="source.{PM:PM17Utilisateur.Username}" property="target.{EVN:OperatorID(1).IDNumberST}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM08CibleIPP}" property="target.{PID:PatientIdentifierList(1).ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM11CibleNomUsuel}" property="target.{PID:PatientName(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="&quot;L&quot;" property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM12CiblePrenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PM:PM16CibleNomDeNaissance}) &amp;&amp; (source.{PM:PM11CibleNomUsuel} '= source.{PM:PM16CibleNomDeNaissance})">
<true>
<assign value="source.{PM:PM16CibleNomDeNaissance}" property="target.{PID:PatientName(2).familylastname}" key="&quot;&quot;" action="set" />
<assign value="&quot;M&quot;" property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM12CiblePrenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{PM:PM13CibleDateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{PM:PM14CibleSexe})" property="target.{PID:Sex}" key="&quot;&quot;" action="set" />

<!-- segment MRG -->
<assign value="source.{PM:PM04SourceIPP}" property="target.{MRG:PriorPatientIdentifierList(1).ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{MRG:PriorPatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM04SourceIPP}" property="target.{MRG:PriorPatientID(1).ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{MRG:PriorPatientID(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM09SourceNomUsuel}" property="target.{MRG:PriorPatientName(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="&quot;L&quot;" property="target.{MRG:PriorPatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM10SourcePrenom}" property="target.{MRG:PriorPatientName(1).givenname}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PM:PM15SourceNomDeNaissance}) &amp;&amp; (source.{PM:PM09SourceNomUsuel} '= source.{PM:PM15SourceNomDeNaissance})">
<true>
<assign value="source.{PM:PM15SourceNomDeNaissance}" property="target.{MRG:PriorPatientName(2).familylastname}" key="&quot;&quot;" action="set" />
<assign value="&quot;M&quot;" property="target.{MRG:PriorPatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM10SourcePrenom}" property="target.{MRG:PriorPatientName(2).givenname}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{PM:PM05CibleEpisode})">
<true>
<assign value="source.{PM:PM05CibleEpisode}" property="target.{MRG:PriorPatientAccountNumber(1).ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{MRG:PriorPatientAccountNumber(1).assigningauthority}" key="&quot;&quot;" action="set" />
</true>
</if>
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v231.TRtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65132,54420</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v231/TRtoADT.xml#5 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:TR" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.3.1"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt("ADT^"_..Lookup("CCOM_HL7_MessageType_v231","TR"_source.GetValueAt("TR:TR01Mode")),"MSH:MessageType","set","")]]]]><![CDATA[>
</code>

<!-- EVN -->
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v231","TR"_source.GetValueAt("TR:TR01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="source.{TR:TR07DateHeureMutation}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />

<!-- PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR05IPP}" property="target.{PID:PatientIdentifierList(1).ID}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR27NomUsuel.Nom}" property="target.{PID:PatientName(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR27NomUsuel.NameTypeCode}" property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR28Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{TR:TR29NomDeNaissance.Nom}) &amp;&amp; (source.{TR:TR27NomUsuel.Nom} '= source.{TR:TR29NomDeNaissance.Nom})">
<true>
<assign value="source.{TR:TR29NomDeNaissance.Nom}" property="target.{PID:PatientName(2).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR29NomDeNaissance.NameTypeCode}" property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR28Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{TR:TR31DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{TR:TR30Sexe})" property="target.{PID:Sex}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR06NumeroEpisode}" property="target.{PID:PatientAccountNumber.ID}" key="&quot;&quot;" action="set" />

<!-- PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;I&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR34IdentifiantUniqueDeMouve}" property="target.{PV1:AlternateVisitID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR06NumeroEpisode}" property="target.{PV1:VisitNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value='source.{TR:TR02CodeHopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.FacilityHD}' action='set' />
<assign value="source.{TR:TR09CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR10Chambre}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR14Lit}" property="target.{PV1:AssignedPatientLocation.bed}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumberST}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR23CodeUSPrecedente}" property="target.{PV1:PriorPatientLocation.PointofCare}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR33ChambrePrecedente}" property="target.{PV1:PriorPatientLocation.Room}" key="&quot;&quot;" action="set" />

<!-- ZFU -->
<assign value="source.{TR:TR13CodeUF}" property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR07DateHeureMutation}" property="target.{ZFU:MedicalFunctionalUnitStartDa}" key="&quot;&quot;" action="set" />

<if condition='source.{TR:TR01Mode} = "03"'>
<true>
<assign value="source.{TR:TR21CodeUFPrecedente}" property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR23CodeUSPrecedente}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR33ChambrePrecedente}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value='""' property="target.{PV1:AssignedPatientLocation.bed}" key="&quot;&quot;" action="set" />
</true>
</if>

	
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v231.URtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65132,54420</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v231/URtoADT.xml#5 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:UR" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.3.1"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt("ADT^"_..Lookup("CCOM_HL7_MessageType_v231","UR"_source.GetValueAt("UR:UR01Mode")),"MSH:MessageType","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v231","UR"_source.GetValueAt("UR:UR01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>

<!-- EVN -->
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR307DateHeureEnregistrement}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />

<!-- PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR03IPP}" property="target.{PID:PatientIdentifierList(1).ID}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR04NomUsuel.Nom}" property="target.{PID:PatientName(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR04NomUsuel.NameTypeCode}" property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR05Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR318AutresPrenoms}" property="target.{PID:PatientName(1).middleinitialorname}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR06Qualite}" property="target.{PID:PatientName(1).prefix}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{UR:UR07NomDeNaissance.Nom}) &amp;&amp; (source.{UR:UR04NomUsuel.Nom} '= source.{UR:UR07NomDeNaissance.Nom})">
<true>
<assign value="source.{UR:UR07NomDeNaissance.Nom}" property="target.{PID:PatientName(2).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR07NomDeNaissance.NameTypeCode}" property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR05Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{UR:UR09DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{UR:UR10Sexe})" property="target.{PID:Sex}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR11NoRueAdresse}" property="target.{PID:PatientAddress(1).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR12CodePostalAdresse}" property="target.{PID:PatientAddress(1).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{UR2:UR201LocaliteAdresse}" property="target.{PID:PatientAddress(1).city}" key="&quot;&quot;" action="set" />
<assign value="source.{UR2:UR206ComplementAdresse}" property="target.{PID:PatientAddress(1).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{UR2:UR207PaysAdresse}" property="target.{PID:PatientAddress(1).country}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{UR2:UR202TelephoneDomicile})">
<true>
<assign value="source.{UR2:UR202TelephoneDomicile}" property="target.{PID:PhoneNumberHome($I(nbtel)).phoneNumber1}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{UR2:UR208TelephoneProfessionnel})">
<true>
<assign value="source.{UR2:UR208TelephoneProfessionnel}" property="target.{PID:PhoneNumberBusiness(1).phoneNumber1}" key="&quot;&quot;" action="set" />
<assign value="&quot;WPN&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{UR2:UR209TelephonePortable})">
<true>
<assign value="source.{UR2:UR209TelephonePortable}" property="target.{PID:PhoneNumberHome($I(nbtel)).phoneNumber1}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;CP&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{UR2:UR203Nationalite}" property="target.{PID:Nationality}" key="&quot;&quot;" action="set" />
<assign value="source.{UR2:UR212NumeroSSDernierEpisode}" property="target.{PID:SSNNumberPatient}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR303NumeroEpisode}" property="target.{PID:PatientAccountNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="..Lookup($G(^ISSAS.Config(&quot;LUT&quot;, &quot;CCOM_HL7_MaritalStatus&quot;)),source.{UR3:UR309SituationFamiliale})" property="target.{PID:MaritalStatus.identifier}" key="&quot;&quot;" action="set" />

<!-- PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;E&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="&quot;E&quot;" property="target.{PV1:AdmissionType}" key="&quot;&quot;" action="set" />
<assign value="source.{UR2:UR210IdentifiantUniqueDeMouv}" property="target.{PV1:AlternateVisitID}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR303NumeroEpisode}" property="target.{PV1:VisitNumber.ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value='source.{UR3:UR301CodeHopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.FacilityHD}' action='set' />
<assign value="source.{UR3:UR305CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR315MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumberST}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR315MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familylastname}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR315MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR315MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR315MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR307DateHeureEnregistrement}" property="target.{PV1:AdmitDateTime.timeofanevent}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR319ModeEntree}" property="target.{PV1:AdmitSource}" key="&quot;&quot;" action="set" />

<!-- ZFU -->
<assign value="source.{UR3:UR306CodeUF}" property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR307DateHeureEnregistrement}" property="target.{ZFU:MedicalFunctionalUnitStartDa}" key="&quot;&quot;" action="set" />

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.ADtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65434,54839</TimeChanged>
<TimeCreated>62468,40604.01095</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/ADtoADT.xml#14 $</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:AD" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16)
 Set nbtel=0 ]]]]><![CDATA[>
</code>   

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","AD"_source.GetValueAt("AD:AD01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","AD"_source.GetValueAt("AD:AD01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","AD"_source.GetValueAt("AD:AD01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD320DateHeureAdmission}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD331Utilisateur.Username}" property="target.{EVN:OperatorID.IDNumber}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD03IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{AD:AD04NomUsuel.Nom}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD05Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD211AutresPrenoms}" property="target.{PID:PatientName(1).SecondandFurtherGivenNamesor}" key="&quot;&quot;" action="set" />
<assign value='"D"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD06Qualite}" property="target.{PID:PatientName(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD07NomDeNaissance.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD05Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD06Qualite}" property="target.{PID:PatientName(2).prefix}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{AD:AD07NomDeNaissance.Nom})">
<false>
<assign value="source.{AD:AD04NomUsuel.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{AD:AD09DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{AD:AD10Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD11NoRueAdresse}" property="target.{PID:PatientAddress(1).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{AD:AD12CodePostalAdresse}" property="target.{PID:PatientAddress(1).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD201LocaliteAdresse}" property="target.{PID:PatientAddress(1).city}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD206ComplementAdresse}" property="target.{PID:PatientAddress(1).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD207PaysAdresse}" property="target.{PID:PatientAddress(1).country}" key="&quot;&quot;" action="set" />
<assign value="&quot;H&quot;" property="target.{PID:PatientAddress(1).AddressType}" key="&quot;&quot;" action="set" />

<!-- telephone domicile seulement si valorisé -->
<if condition="$L(source.{AD2:AD202TelephoneDomicile})">
<true>
<assign value="source.{AD2:AD202TelephoneDomicile}" property="target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD202TelephoneDomicile}" property="target.{PID:PhoneNumberHome(nbtel).UnformattedTelephonenumber}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{AD2:AD208TelephoneProfessionnel})">
<true>
<assign value="source.{AD2:AD208TelephoneProfessionnel}" property="target.{PID:PhoneNumberBusiness(1).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;WPN&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD208TelephoneProfessionnel}" property="target.{PID:PhoneNumberBusiness(1).UnformattedTelephonenumber}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{AD2:AD212TelephonePortable})">
<true>
<assign value="source.{AD2:AD212TelephonePortable}" property="target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;CP&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD212TelephonePortable}" property="target.{PID:PhoneNumberHome(nbtel).UnformattedTelephonenumber}" key="&quot;&quot;" action="set" />
</true>
</if>

<assign value="source.{AD2:AD203Nationalite}" property="target.{PID:Nationality}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD203Nationalite}" property="target.{PID:Citizenship(1)}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD215NumeroSSDernierEpisode}" property="target.{PID:SSNNumberPatient}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD303NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="..Lookup($G(^ISSAS.Config(&quot;LUT&quot;, &quot;CCOM_HL7_MaritalStatus&quot;)),source.{AD3:AD309SituationFamiliale})" property="target.{PID:MaritalStatus.identifier}" key="&quot;&quot;" action="set" />
<assign value='"A"' property="target.{PV1:VisitIndicator}" key="&quot;&quot;" action="set" />

<!-- Identité validée ou provisoire -->
<if condition='source.{AD2:AD214InformationsIdentite.IndicateurIdentiteProvisoire}="1"'>
<true>
<assign value='"PROV"' property="target.{PID:IdentityReliabilityCode(1)}" key="&quot;&quot;" action="set" />
<assign value="&quot;Y&quot;" property="target.{PID:IdentityUnknownIndicator}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{AD2:AD214InformationsIdentite.IndicateurIdentiteValidee}="1"'>
<true>
<assign value='"VALI"' property="target.{PID:IdentityReliabilityCode(1)}" key="&quot;&quot;" action="set" />
<assign value="&quot;N&quot;" property="target.{PID:IdentityUnknownIndicator}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- segment ROL (médecin traitant) -->
<if condition="$L(source.{AD5:AD505MedecinTraitant.CodeClinicom})">
<true>
<assign value='"UP"' property="target.{ROL(1):ActionCode}" key="&quot;&quot;" action="set" />
<assign value='"ODRP"' property="target.{ROL(1):RoleROL}" key="&quot;&quot;" action="set" />
<assign value='source.{AD5:AD505MedecinTraitant.CodeClinicom}' property="target.{ROL(1):RolePerson(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value='source.{AD5:AD505MedecinTraitant.Nom}' property="target.{ROL(1):RolePerson(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='source.{AD5:AD505MedecinTraitant.Prenom}' property="target.{ROL(1):RolePerson(1).GivenName}" key="&quot;&quot;" action="set" />
<assign value='source.{AD5:AD505MedecinTraitant.Qualite}' property="target.{ROL(1):RolePerson(1).Prefix}" key="&quot;&quot;" action="set" />
<assign value='source.{AD5:AD505MedecinTraitant.Titre}' property="target.{ROL(1):RolePerson(1).Degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{ROL(1):RolePerson(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />

<!-- Adresse médecin traitant demandé par Firminy JIRA CCOMTCC-1076, nécessite mise à jour classe ODBC & PAYS_INSEE_3166-1-alpha-3.LUT -->
<assign value='"O"' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).AddressType}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedAdresse(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).StreetAddress}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedComplAd(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).OtherDesignation}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedCP(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).ZiporPostalCode}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedVille(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).City}" key="&quot;&quot;" action="set" />
<assign value='..Lookup("PAYS_INSEE_3166-1-alpha-3",##class(ISSAS.Common.Tools.ClassODBC).MedPays(source.{AD5:AD505MedecinTraitant.CodeClinicom}))' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).Country}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedVille(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).City}" key="&quot;&quot;" action="set" />
<!-- Téléphone et Email médecin traitant demandé par Pau JIRA CCOMTCC-1296, nécessite mise à jour classe ODBC -->
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedTel1(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property="target.{ROL(1):Phone(1).Telephonenumber}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedTel1(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property="target.{ROL(1):Phone(1).UnformattedTelephonenumber}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedEmail(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property="target.{ROL(1):Phone(1).EmailAddress}" key="&quot;&quot;" action="set" />

<!-- N° RPPS -->
<if condition="$L(source.{AD5:AD505MedecinTraitant.NoRPPS})">
<true>
<assign value='source.{AD5:AD505MedecinTraitant.NoRPPS}' property="target.{ROL(1):RolePerson(2).IDNumber}" key="&quot;&quot;" action="set" />
<assign value='source.{AD5:AD505MedecinTraitant.Nom}' property="target.{ROL(1):RolePerson(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='source.{AD5:AD505MedecinTraitant.Prenom}' property="target.{ROL(1):RolePerson(2).GivenName}" key="&quot;&quot;" action="set" />
<assign value='source.{AD5:AD505MedecinTraitant.Qualite}' property="target.{ROL(1):RolePerson(2).Prefix}" key="&quot;&quot;" action="set" />
<assign value='source.{AD5:AD505MedecinTraitant.Titre}' property="target.{ROL(1):RolePerson(2).Degree}" key="&quot;&quot;" action="set" />
<assign value='"RPPS"' property="target.{ROL(1):RolePerson(2).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>
</true>
</if>

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<if condition='source.{AD3:AD322IndicateurEpisodeRecurr} = "1"'>
<true>
<assign value="&quot;R&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;I&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{AD3:AD303NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD305CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD307Lit}" property="target.{PV1:AssignedPatientLocation.bed}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD308Chambre}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value='source.{AD3:AD301Hopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.Facility}' action='set' />
<assign value="source.{AD3:AD313ModeEntree}" property="target.{PV1:AdmitSource}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD319MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD319MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD319MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD319MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD319MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:AttendingDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{AD2:AD209MedecinEnvoyeur.CodeClinicom})">
<true>
<assign value="source.{AD2:AD209MedecinEnvoyeur.CodeClinicom}" property="target.{PV1:AdmittingDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD209MedecinEnvoyeur.Nom}" property="target.{PV1:AdmittingDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD209MedecinEnvoyeur.Prenom}" property="target.{PV1:AdmittingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD209MedecinEnvoyeur.Qualite}" property="target.{PV1:AdmittingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{AD2:AD209MedecinEnvoyeur.Titre}" property="target.{PV1:AdmittingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:AdmittingDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{AD3:AD320DateHeureAdmission}" property="target.{PV1:AdmitDateTime}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{AD5:AD505MedecinTraitant.CodeClinicom})">
<true>
<assign value="source.{AD5:AD505MedecinTraitant.CodeClinicom}" property="target.{PV1:ReferringDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{AD5:AD505MedecinTraitant.Nom}" property="target.{PV1:ReferringDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{AD5:AD505MedecinTraitant.Prenom}" property="target.{PV1:ReferringDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{AD5:AD505MedecinTraitant.Qualite}" property="target.{PV1:ReferringDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{AD5:AD505MedecinTraitant.Titre}" property="target.{PV1:ReferringDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:ReferringDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{AD3:AD335DateHospitalisationPrec}" property="target.{PV1:DischargedtoLocation.EffectiveDate}" key="&quot;&quot;" action="set" />

<!-- Attention : IHE PAM préconise Y / N , mais certains éditeurs attendent 0, 1 ou 2 --> 
<assign value="source.{AD3:AD316SupplementChambreSeule}" property="target.{PV1:CourtesyCode}" key="&quot;&quot;" action="set" />

<!-- segment PV2 -->
<if condition='$L(source.{AD3:AD332TypePlacementPsy})'>
<true>
<assign value="source.{AD3:AD332TypePlacementPsy}" property="target.{PV2:AdmitReason.Identifier}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='$L(source.{AD3:AD312ModeTransport.Code})'>
<true>
<assign value="source.{AD3:AD312ModeTransport.Code}" property="target.{PV2:ModeofArrivalCode}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- Confidentialité médicale peut prendre les valeurs 0 (normal), 1 (confidentiel) ou 2 (hyperconfidentiel) -->
<if condition='..In(source.{AD2:AD217ConfidentialiteMedicale},"1,2")'>
<true>
<assign value='"Y"' property="target.{PV2:VisitProtectionIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value='"N"' property="target.{PV2:VisitProtectionIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>

<!-- segment ZBE -->
<assign value="source.{AD2:AD213IdentifiantUniqueDeMouv}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD320DateHeureAdmission}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<if condition='source.{AD:AD01Mode} = "02"'>
<true>
<assign value="&quot;UPDATE&quot;" property="target.{ZBE:MovementAction}" key="&quot;&quot;" action="set" />
<assign value="&quot;A01&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;INSERT&quot;" property="target.{ZBE:MovementAction}" key="&quot;&quot;" action="set" />
</false>
</if>
<if condition='source.{AD7:AD711IndicateurDernierMouvem} = "1"'>
<true>
<assign value="&quot;N&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;Y&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{AD3:AD306CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD306CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />

<!-- segment ZFM -->
<!-- requete vers CLINICOM : SELECT TXT_COD_ModeEntreeUM FROM ClinicomSQL.Admission_Mode_Entree WHERE ID='?' -->
<assign value="##class(ISSAS.Common.Tools.ClassODBC).ClinicomAdmissionModeEntree(source.{AD3:AD313ModeEntree})" property="target.{ZFM:ModeEntreePMSI}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD314EtablissementOrigine.PropositionMTPMSI}" property="target.{ZFM:ModeprovenancePMSI}" key="&quot;&quot;" action="set" />
<if condition='source.{AD:AD01Mode}="05"'>
<true>
<assign value='"5"' property="target.{ZFM:ModeprovenancePMSI}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- segment ZFP -->
<if condition="$L(source.{AD3:AD311CategorieSocioprofessio})">
<true>
<assign value="source.{AD3:AD311CategorieSocioprofessio}" property="target.{ZFP:Activitesociopro}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- segment ZFV -->
<if condition="$L(source.{AD3:AD314EtablissementOrigine.CodeEtablissement})">
<true>
<!-- requete vers CLINICOM : SELECT TXT_DON_Finess FROM ClinicomSQL.FDB_NOY_EtablissementExterieur WHERE TXT_COD_EtablissementExterieur='?' -->
<assign value="##class(ISSAS.Common.Tools.ClassODBC).ClinicomEtablissementExterieur(source.{AD3:AD314EtablissementOrigine.CodeEtablissement})" property="target.{ZFV:Etbprovenance.DischargeLocation}" key="&quot;&quot;" action="set" />
</true>
</if>

<if condition="$L(source.{AD3:AD334DateHeureDecisionMedica})">
<true>
<assign value="source.{AD3:AD334DateHeureDecisionMedica}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{AD3:AD334DateHeureDecisionMedica}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
</true>
</if>
</transform>
]]></Data>
</XData>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.AStoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65415,40498</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/AStoADT.xml#7 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:AS" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","AS"_source.GetValueAt("AS:AS01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","AS"_source.GetValueAt("AS:AS01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","AS"_source.GetValueAt("AS:AS01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS05IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{AS:AS15NomUsuel.Nom}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS16Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value='"D"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS17NomDeNaissance.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS16Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{AS:AS17NomDeNaissance.Nom})">
<false>
<assign value="source.{AS:AS15NomUsuel.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{AS:AS19DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{AS:AS18Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS06NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS10IPPMere}" property="target.{PID:MothersIdentifier.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:MothersIdentifier.assigningauthority}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_PatientClass&quot;,source.{AS:AS01Mode})" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS06NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS13CodeUSOuConsultation}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS12DateHeureEpisode}" property="target.{PV1:AdmitDateTime}" key="&quot;&quot;" action="set" />

<!-- segment ZBE -->
<assign value="source.{AS:AS21IdentifiantUniqueDeMouve}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<assign value="&quot;CANCEL&quot;" property="target.{ZBE:MovementAction}" key="&quot;&quot;" action="set" />
<assign value="&quot;N&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
<!-- Code évènement annulé : A01 pour hospits, A04 pour externes, A05 pour préads -->
<if condition='(source.{AS:AS01Mode} = "02")||(source.{AS:AS01Mode} = "06") '>
<true>
<assign value="&quot;A05&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</true>
<false>
<if condition='(source.{AS:AS01Mode} = "01")||(source.{AS:AS01Mode} = "04") '>
<true>
<assign value="&quot;A01&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;A04&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</false>
</if>
</false>
</if>
<assign value="source.{AS:AS14CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{AS:AS14CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.DStoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65415,40498</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/DStoADT.xml#11 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:DS" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","DS"_source.GetValueAt("DS:DS01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","DS"_source.GetValueAt("DS:DS01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","DS"_source.GetValueAt("DS:DS01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS07DateHeureSortie}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS28Utilisateur.Username}" property="target.{EVN:OperatorID.IDNumber}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS05IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{DS:DS19NomUsuel.Nom}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS20Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value='"D"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS22NomDeNaissance.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS20Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{DS:DS22NomDeNaissance.Nom})">
<false>
<assign value="source.{DS:DS19NomUsuel.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{DS:DS24DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{DS:DS23Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS06NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<if condition="##class(ISSAS.Common.Tools.ClassODBC).IsDeceased(source.{DS:DS05IPP})=1">
<true>
<assign value="&quot;Y&quot;" property="target.{PID:PatientDeathIndicator}" key="&quot;&quot;" action="set" />
<assign value="##class(ISSAS.Common.Tools.ClassODBC).DeceaseDate(source.{DS:DS05IPP})" property="target.{PID:PatientDeathDateandTime.Time}" key="&quot;&quot;" action="set" />
<assign value="&quot;D&quot;" property="target.{PID:PatientDeathDateandTime.DegreeofPrecision}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;N&quot;" property="target.{PID:PatientDeathIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<if condition='source.{DS:DS26IndicateurEpisodeRecurre} = "1"'>
<true>
<assign value="&quot;R&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;I&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{DS:DS06NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS14CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS21Chambre}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value='source.{DS:DS02Hopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.Facility}' action='set' />
<assign value="source.{DS:DS10ModeSortie}" property="target.{PV1:DischargeDisposition}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS25MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS25MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS25MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS25MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS25MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:AttendingDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassDate).CvtFRToCCOM(##class(ISSAS.Common.Tools.ClassODBC).AdmDate(source.{DS:DS06NumeroEpisode}),2)' property="target.{PV1:AdmitDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS07DateHeureSortie}" property="target.{PV1:DischargeDateTime}" key="&quot;&quot;" action="set" />
<assign value='"D"' property="target.{PV1:AccountStatus}" key="&quot;&quot;" action="set" />

<!-- segment ZBE -->
<assign value="source.{DS:DS27IdentifiantUniqueDeMouve}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS07DateHeureSortie}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MovementAction",source.GetValueAt("DS:DS01Mode")),"ZBE:MovementAction","set","")]]]]><![CDATA[>
</code>
<if condition='source.{DS:DS01Mode} = "01"'>
<false>
<assign value="&quot;A03&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="&quot;N&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS13CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS13CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />

<!-- segment ZFM -->
<!-- requete vers CLINICOM : SELECT Mode_PMSI FROM ClinicomSQL.Sortie_Mode WHERE ID='?' -->
<assign value="##class(ISSAS.Common.Tools.ClassODBC).ClinicomSortieMode(source.{DS:DS10ModeSortie})" property="target.{ZFM:ModeSortiePMSI}" key="&quot;&quot;" action="set" />
<assign value="source.{DS:DS09EtablissementDestination.PropositionMTPMSI}" property="target.{ZFM:ModeDestinationPMSI}" key="&quot;&quot;" action="set" />

<!-- segment ZFV -->
<assign value="source.{DS:DS10ModeSortie}" property="target.{ZFV:Modesortiepersonnalise}" key="&quot;&quot;" action="set" />

<if condition="$L(source.{DS:DS09EtablissementDestination.CodeEtablissement})">
<true>
<!-- requete vers CLINICOM : SELECT TXT_DON_Finess FROM ClinicomSQL.FDB_NOY_EtablissementExterieur WHERE TXT_COD_EtablissementExterieur='?' -->
<!-- <assign value="##class(ISSAS.Common.Tools.ClassODBC).ClinicomEtablissementExterieur(source.{DS:DS09EtablissementDestination.CodeEtablissement})" property="target.{ZFV:Etbprovenance}" key="&quot;&quot;" action="set" />-->
<assign value="##class(ISSAS.Common.Tools.ClassODBC).ClinicomEtablissementExterieur(source.{DS:DS09EtablissementDestination.CodeEtablissement})" property="target.{PV1:DischargedtoLocation.DischargeLocation}" key="&quot;&quot;" action="set" />
</true>
</if>


</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.EVtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65415,40498</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/EVtoADT.xml#9 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:TR" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<if condition='source.{TR:TR01Mode} = "01" '>
<true>
<assign value="&quot;A01&quot;" property="target.{MSH:MessageType.TriggerEvent}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT_A01&quot;" property="target.{MSH:MessageType.MessageStructure}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{TR:TR01Mode} = "02" '>
<true>
<assign value="&quot;Z99&quot;" property="target.{MSH:MessageType.TriggerEvent}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT_A01&quot;" property="target.{MSH:MessageType.MessageStructure}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{TR:TR01Mode} = "03" '>
<true>
<assign value="&quot;A11&quot;" property="target.{MSH:MessageType.TriggerEvent}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT_A09&quot;" property="target.{MSH:MessageType.MessageStructure}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<if condition='source.{TR:TR01Mode} = "01" '>
<true>
<assign value="&quot;A01&quot;" property="target.{EVN:EventTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{TR:TR01Mode} = "02" '>
<true>
<assign value="&quot;Z99&quot;" property="target.{EVN:EventTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{TR:TR01Mode} = "03" '>
<true>
<assign value="&quot;A11&quot;" property="target.{EVN:EventTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>

<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR07DateHeureMutation}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR05IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{TR:TR27NomUsuel.Nom}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR28Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value='"D"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR29NomDeNaissance.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR28Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{TR:TR29NomDeNaissance.Nom})">
<false>
<assign value="source.{TR:TR27NomUsuel.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{TR:TR31DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{TR:TR30Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR06NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;R&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="&quot;R&quot;" property="target.{PV1:AdmissionType}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR06NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value='source.{TR:TR02CodeHopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.Facility}' action='set' />
<assign value="source.{TR:TR09CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR10Chambre}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR14Lit}" property="target.{PV1:AssignedPatientLocation.bed}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:AttendingDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value='"V"' property="target.{PV1:VisitIndicator}" key="&quot;&quot;" action="set" />

<!-- Attention : IHE PAM préconise Y / N , mais certains éditeurs attendent 0, 1 ou 2 --> 
<assign value="source.{TR:TR12SupplementChambre}" property="target.{PV1:CourtesyCode}" key="&quot;&quot;" action="set" />


<!-- segment ZBE -->
<assign value="source.{TR:TR34IdentifiantUniqueDeMouve}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR07DateHeureMutation}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MovementAction",source.GetValueAt("TR:TR01Mode")),"ZBE:MovementAction","set","")]]]]><![CDATA[>
</code>
<!-- pour modif (02) et annulation (03) renseigner le code évènement modifié ou annulé (A01) -->
<if condition='(source.{TR:TR01Mode} = "02")||(source.{TR:TR01Mode} = "03") '>
<true>
<assign value="&quot;A01&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{TR:TR26IndicateurDernierMouveme} = "1"'>
<true>
<assign value="&quot;N&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;Y&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{TR:TR13CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR13CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />

<!-- Annulation de mutation : UF et US de CCOM sont celles annulées -->
<!-- HL/7 attend celles courantes, qui sont les précédentes pour CCOM -->
<if condition='source.{TR:TR01Mode} = "03"'>
<true>
<assign value="source.{TR:TR21CodeUFPrecedente}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR21CodeUFPrecedente}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR23CodeUSPrecedente}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR33ChambrePrecedente}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- segment ZFM 
<assign value="##class(ISSAS.Common.Tools.ClassODBC).ClinicomAdmissionModeEntree(##class(ISSAS.Common.Tools.ClassODBC).ModeEntree(source.{TR:TR06NumeroEpisode}))" property="target.{ZFM:ModeEntreePMSI}" key="&quot;&quot;" action="set" />
<assign value='"8"' property="target.{ZFM:ModeprovenancePMSI}" key="&quot;&quot;" action="set" />
-->

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.NDtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65044,64397</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/NDtoADT.xml#7 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:ND" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","ND"_source.GetValueAt("ND:ND01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","ND"_source.GetValueAt("ND:ND01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","ND"_source.GetValueAt("ND:ND01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND07DateHeureSortie}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND05IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND20NomUsuel.Nom}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND21Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND24DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{ND:ND26Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND06NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND13IPPMere}" property="target.{PID:MothersIdentifier.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:MothersIdentifier.assigningauthority}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;I&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="&quot;N&quot;" property="target.{PV1:AdmissionType}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND06NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND17CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND22Chambre}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND15ModeSortie}" property="target.{PV1:DischargeDisposition}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND07DateHeureSortie}" property="target.{PV1:DischargeDateTime}" key="&quot;&quot;" action="set" />

<!-- segment ZBE -->
<assign value="source.{ND:ND23IdentifiantUniqueDeMouve}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND07DateHeureSortie}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MovementAction",source.GetValueAt("ND:ND01Mode")),"ZBE:MovementAction","set","")]]]]><![CDATA[>
</code>
<if condition='source.{ND:ND01Mode} = "01"'>
<false>
<assign value="&quot;A03&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="&quot;N&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND16CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND16CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />

<!-- segment ZFM -->
<!-- requete vers CLINICOM : SELECT Mode_PMSI FROM ClinicomSQL.Sortie_Mode WHERE ID='?' -->
<assign value="##class(ISSAS.Common.Tools.ClassODBC).ClinicomSortieMode(source.{ND:ND15ModeSortie})" property="target.{ZFM:ModeSortiePMSI}" key="&quot;&quot;" action="set" />
<assign value="source.{ND:ND09EtablissementDestination.PropositionMTPMSI}" property="target.{ZFM:ModeDestinationPMSI}" key="&quot;&quot;" action="set" />
<!-- segment ZFV -->
<if condition="$L(source.{ND:ND09EtablissementDestination.CodeEtablissement})">
<true>
<!-- requete vers CLINICOM : SELECT TXT_DON_Finess FROM ClinicomSQL.FDB_NOY_EtablissementExterieur WHERE TXT_COD_EtablissementExterieur='?' -->
<assign value="##class(ISSAS.Common.Tools.ClassODBC).ClinicomEtablissementExterieur(source.{ND:ND09EtablissementDestination.CodeEtablissement})" property="target.{ZFV:Etbprovenance}" key="&quot;&quot;" action="set" />
<assign value="##class(ISSAS.Common.Tools.ClassODBC).ClinicomEtablissementExterieur(source.{ND:ND09EtablissementDestination.CodeEtablissement})" property="target.{PV1:DischargedtoLocation.DischargeLocation}" key="&quot;&quot;" action="set" />
</true>
</if>
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.NRtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65079,54890</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/NRtoADT.xml#8 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:NR" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16)
 Set nbtel=0 ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","NR"_source.GetValueAt("NR:NR01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","NR"_source.GetValueAt("NR:NR01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","NR"_source.GetValueAt("NR:NR01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="source.{NR4:NR411DateHeureAdmission}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR306Utilisateur.Username}" property="target.{EVN:OperatorID.IDNumber}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{NR:NR03IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="source.{NR:NR04NomUsuel.Nom}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{NR:NR05Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{NR:NR07Qualite}" property="target.{PID:PatientName(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{NR4:NR417DateHeureNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{NR:NR11Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{NR:NR12NoRueAdresse}" property="target.{PID:PatientAddress(1).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{NR:NR13CodePostalAdresse}" property="target.{PID:PatientAddress(1).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{NR2:NR201LocaliteAdresse}" property="target.{PID:PatientAddress(1).city}" key="&quot;&quot;" action="set" />
<assign value="source.{NR2:NR206ComplementAdresse}" property="target.{PID:PatientAddress(1).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{NR2:NR202PaysAdresse}" property="target.{PID:PatientAddress(1).country}" key="&quot;&quot;" action="set" />
<assign value="&quot;H&quot;" property="target.{PID:PatientAddress(1).AddressType}" key="&quot;&quot;" action="set" />

<!-- telephone domicile seulement si valorisé -->
<if condition="$L(source.{NR2:NR203Telephone})">
<true>
<assign value="source.{NR2:NR203Telephone}" property="target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{NR2:NR204Nationalite}" property="target.{PID:Nationality}" key="&quot;&quot;" action="set" />
<assign value="source.{NR2:NR204Nationalite}" property="target.{PID:Citizenship(1)}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR303NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{NR4:NR415IPPMere}" property="target.{PID:MothersIdentifier(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:MothersIdentifier(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value='"PI"' property="target.{PID:MothersIdentifier(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="source.{NR4:NR416NumeroEpisodeMere}" property="target.{PID:MothersIdentifier(2).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:MothersIdentifier(2).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value='"AN"' property="target.{PID:MothersIdentifier(2).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value='source.{NR4:NR404RangGemellaire}' property="target.{PID:BirthOrder}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;I&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="&quot;N&quot;" property="target.{PV1:AdmissionType}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR303NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{NR4:NR408CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR304Chambre}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value='source.{NR3:NR301CodeHopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.Facility}' action='set' />
<assign value="source.{NR3:NR305MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR305MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR305MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR305MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{NR3:NR305MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:AttendingDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="source.{NR4:NR411DateHeureAdmission}" property="target.{PV1:AdmitDateTime}" key="&quot;&quot;" action="set" />
<assign value='"8"' property="target.{PV1:AdmitSource}" key="&quot;&quot;" action="set" />

<!-- segment ZBE -->
<assign value="source.{NR3:NR307IdentifiantUniqueDeMouv}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="source.{NR4:NR411DateHeureAdmission}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<if condition='source.{NR:NR01Mode} = "02"'>
<true>
<assign value="&quot;UPDATE&quot;" property="target.{ZBE:MovementAction}" key="&quot;&quot;" action="set" />
<assign value="&quot;A01&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;INSERT&quot;" property="target.{ZBE:MovementAction}" key="&quot;&quot;" action="set" />
</false>
</if>
<if condition='source.{NR3:NR308IndicateurDernierMouvem} = "1"'>
<true>
<assign value="&quot;N&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;Y&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{NR4:NR409CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{NR4:NR409CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />

<!-- segment ZFD -->
<assign value="source.{NR4:NR406AgeGestationnelEnSemain}" property="target.{ZFD:Nombredesemainesdegestation}" key="&quot;&quot;" action="set" />
<!-- segment OBX -->
<assign value="&quot;1&quot;" property="target.{OBX:SetIDOBX}" key="&quot;&quot;" action="set" />
<assign value="&quot;NM&quot;" property="target.{OBX:ValueType}" key="&quot;&quot;" action="set" />
<assign value="&quot;11752-3^PATIENT WEIGHT&quot;" property="target.{OBX:ObservationIdentifier}" key="&quot;&quot;" action="set" />
<assign value="source.{NR4:NR405PoidsEnGrammes}" property="target.{OBX:ObservationValue}" key="&quot;&quot;" action="set" />
<assign value="&quot;g&quot;" property="target.{OBX:Units}" key="&quot;&quot;" action="set" />
<assign value="&quot;F&quot;" property="target.{OBX:ObservationResultStatus}" key="&quot;&quot;" action="set" />
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.OD2toADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65415,40498</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/OD2toADT.xml#8 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:OD" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","DS"_source.GetValueAt("OD:OD01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","DS"_source.GetValueAt("OD:OD01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","DS"_source.GetValueAt("OD:OD01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD07DateHeureCloture}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD05IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{OD:OD10NomUsuel}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="&quot;D&quot;" property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD11Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD12NomDeNaissance}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="&quot;L&quot;" property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD11Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{OD:OD12NomDeNaissance})">
<false>
<assign value="source.{OD:OD10NomUsuel}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{OD:OD13DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{OD:OD14Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD06NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;O&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD06NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD15CodeUniteConsultation}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD17CodeMedecinResponsable}" property="target.{PV1:AttendingDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:AttendingDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassDate).CvtFRToCCOM(##class(ISSAS.Common.Tools.ClassODBC).ExtAdmDate(source.{OD:OD06NumeroEpisode}),2)' property="target.{PV1:AdmitDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD07DateHeureCloture}" property="target.{PV1:DischargeDateTime}" key="&quot;&quot;" action="set" />

<!-- segment ZBE -->
<assign value="source.{OD:OD09IdentifiantUniqueDeMouve}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD07DateHeureCloture}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MovementAction",source.GetValueAt("OD:OD01Mode")),"ZBE:MovementAction","set","")]]]]><![CDATA[>
</code>
<if condition='source.{OD:OD01Mode} = "01"'>
<false>
<assign value="&quot;A03&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="&quot;N&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD16CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{OD:OD16CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.OPtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65415,40498</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/OPtoADT.xml#9 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:OP" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16)
 Set nbtel=0 ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","OP"_source.GetValueAt("OP:OP01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","OP"_source.GetValueAt("OP:OP01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","OP"_source.GetValueAt("OP:OP01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP306DateHeureEnregistrement}" property="target.{EVN:DateTimePlannedEvent}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP306DateHeureEnregistrement}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP311Utilisateur.Username}" property="target.{EVN:OperatorID.IDNumber}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="source.{OP:OP03IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{OP:OP04NomUsuel}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="&quot;D&quot;" property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{OP:OP05Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{OP:OP06Qualite}" property="target.{PID:PatientName(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{OP:OP07NomDeNaissance}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="&quot;L&quot;" property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{OP:OP05Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{OP:OP06Qualite}" property="target.{PID:PatientName(2).prefix}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{OP:OP07NomDeNaissance})">
<false>
<assign value="source.{OP:OP04NomUsuel}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{OP:OP09DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{OP:OP10Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{OP:OP11NoRueAdresse}" property="target.{PID:PatientAddress(1).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{OP:OP12CodePostalAdresse}" property="target.{PID:PatientAddress(1).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{OP2:OP201LocaliteAdresse}" property="target.{PID:PatientAddress(1).city}" key="&quot;&quot;" action="set" />
<assign value="source.{OP2:OP206ComplementAdresse}" property="target.{PID:PatientAddress(1).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{OP2:OP207PaysAdresse}" property="target.{PID:PatientAddress(1).country}" key="&quot;&quot;" action="set" />
<assign value="&quot;H&quot;" property="target.{PID:PatientAddress(1).AddressType}" key="&quot;&quot;" action="set" />

<!-- telephone domicile seulement si valorisé -->
<if condition="$L(source.{OP2:OP202TelephoneDomicile})">
<true>
<assign value="source.{OP2:OP202TelephoneDomicile}" property="target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<!-- telephone professionnel seulement si valorisé -->
<if condition="$L(source.{OP2:OP208TelephoneProfessionnel})">
<true>
<assign value="source.{OP2:OP208TelephoneProfessionnel}" property="target.{PID:PhoneNumberBusiness(1).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;WPN&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{OP2:OP203Nationalite}" property="target.{PID:Citizenship(1)}" key="&quot;&quot;" action="set" />
<assign value="source.{OP2:OP211NumeroSSDernierEpisode}" property="target.{PID:SSNNumberPatient}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP303NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="..Lookup($G(^ISSAS.Config(&quot;LUT&quot;, &quot;CCOM_HL7_MaritalStatus&quot;)),source.{OP3:OP308SituationFamiliale})" property="target.{PID:MaritalStatus.identifier}" key="&quot;&quot;" action="set" />
<!-- Identité validée ou provisoire -->
<if condition='source.{OP2:OP210InformationsIdentite.IndicateurIdentiteProvisoire}="1"'>
<true>
<assign value='"PROV"' property="target.{PID:IdentityReliabilityCode(1)}" key="&quot;&quot;" action="set" />
<assign value="&quot;Y&quot;" property="target.{PID:IdentityUnknownIndicator}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{OP2:OP210InformationsIdentite.IndicateurIdentiteValidee}="1"'>
<true>
<assign value='"VALI"' property="target.{PID:IdentityReliabilityCode(1)}" key="&quot;&quot;" action="set" />
<assign value="&quot;N&quot;" property="target.{PID:IdentityUnknownIndicator}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;O&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP303NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP303NumeroEpisode}" property="target.{PV1:PreadmitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:PreadmitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP304CodeUniteConsultation}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP309CodeMedecinResponsable}" property="target.{PV1:AttendingDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:AttendingDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP306DateHeureEnregistrement}" property="target.{PV1:AdmitDateTime}" key="&quot;&quot;" action="set" />
<assign value='source.{OP3:OP301CodeHopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.Facility}' action='set' />

<!-- segment ZBE -->
<assign value="source.{OP2:OP209IdentifiantUniqueDeMouv}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP306DateHeureEnregistrement}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<if condition='source.{OP:OP01Mode} = "01"'>
<true>
<assign value="&quot;INSERT&quot;" property="target.{ZBE:MovementAction}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;UPDATE&quot;" property="target.{ZBE:MovementAction}" key="&quot;&quot;" action="set" />
<assign value="&quot;A05&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="&quot;N&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP305CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{OP3:OP305CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.ORtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65434,54839</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/ORtoADT.xml#12 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:OR" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16)
 Set nbtel=0 ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","OR"_source.GetValueAt("OR:OR01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","OR"_source.GetValueAt("OR:OR01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","OR"_source.GetValueAt("OR:OR01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR307DateHeureEnregistrement}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR320Utilisateur.Username}" property="target.{EVN:OperatorID.IDNumber}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR03IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{OR:OR04NomUsuel.Nom}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="&quot;D&quot;" property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR05Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR318AutresPrenoms}" property="target.{PID:PatientName(1).secondandfurthergivennamesor}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR06Qualite}" property="target.{PID:PatientName(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR07NomDeNaissance.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="&quot;L&quot;" property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR05Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR318AutresPrenoms}" property="target.{PID:PatientName(2).secondandfurthergivennamesor}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR06Qualite}" property="target.{PID:PatientName(2).prefix}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{OR:OR07NomDeNaissance.Nom})">
<false>
<assign value="source.{OR:OR04NomUsuel.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{OR:OR09DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{OR:OR10Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR11NoRueAdresse}" property="target.{PID:PatientAddress(1).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{OR:OR12CodePostalAdresse}" property="target.{PID:PatientAddress(1).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{OR2:OR201LocaliteAdresse}" property="target.{PID:PatientAddress(1).city}" key="&quot;&quot;" action="set" />
<assign value="source.{OR2:OR206ComplementAdresse}" property="target.{PID:PatientAddress(1).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{OR2:OR207PaysAdresse}" property="target.{PID:PatientAddress(1).country}" key="&quot;&quot;" action="set" />
<assign value="&quot;H&quot;" property="target.{PID:PatientAddress(1).AddressType}" key="&quot;&quot;" action="set" />

<!-- telephone domicile seulement si valorisé -->
<if condition="$L(source.{OR2:OR202TelephoneDomicile})">
<true>
<assign value="source.{OR2:OR202TelephoneDomicile}" property="target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
<assign value="source.{OR2:OR202TelephoneDomicile}" property="target.{PID:PhoneNumberHome(nbtel).UnformattedTelephonenumber}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{OR2:OR208TelephoneProfessionnel})">
<true>
<assign value="source.{OR2:OR208TelephoneProfessionnel}" property="target.{PID:PhoneNumberBusiness(1).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;WPN&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
<assign value="source.{OR2:OR208TelephoneProfessionnel}" property="target.{PID:PhoneNumberBusiness(1).UnformattedTelephonenumber}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{OR2:OR209TelephonePortable})">
<true>
<assign value="source.{OR2:OR209TelephonePortable}" property="target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;CP&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
<assign value="source.{OR2:OR209TelephonePortable}" property="target.{PID:PhoneNumberHome(nbtel).UnformattedTelephonenumber}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{OR2:OR203Nationalite}" property="target.{PID:Nationality}" key="&quot;&quot;" action="set" />
<assign value="source.{OR2:OR203Nationalite}" property="target.{PID:Citizenship(1)}" key="&quot;&quot;" action="set" />
<assign value="source.{OR2:OR212NumeroSSDernierEpisode}" property="target.{PID:SSNNumberPatient}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR303NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="..Lookup($G(^ISSAS.Config(&quot;LUT&quot;, &quot;CCOM_HL7_MaritalStatus&quot;)),source.{OR3:OR309SituationFamiliale})" property="target.{PID:MaritalStatus.identifier}" key="&quot;&quot;" action="set" />

<!-- Identité validée ou provisoire -->
<if condition='source.{OR2:OR211InformationsIdentite.IndicateurIdentiteProvisoire}="1"'>
<true>
<assign value='"PROV"' property="target.{PID:IdentityReliabilityCode(1)}" key="&quot;&quot;" action="set" />
<assign value="&quot;Y&quot;" property="target.{PID:IdentityUnknownIndicator}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{OR2:OR211InformationsIdentite.IndicateurIdentiteValidee}="1"'>
<true>
<assign value='"VALI"' property="target.{PID:IdentityReliabilityCode(1)}" key="&quot;&quot;" action="set" />
<assign value="&quot;N&quot;" property="target.{PID:IdentityUnknownIndicator}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- segment ROL (médecin traitant) -->
<if condition="$L(source.{OR5:OR503MedecinTraitant.CodeClinicom})">
<true>
<assign value='"UP"' property="target.{ROL(1):ActionCode}" key="&quot;&quot;" action="set" />
<assign value='"ODRP"' property="target.{ROL(1):RoleROL}" key="&quot;&quot;" action="set" />
<assign value='source.{OR5:OR503MedecinTraitant.CodeClinicom}' property="target.{ROL(1):RolePerson(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value='source.{OR5:OR503MedecinTraitant.Nom}' property="target.{ROL(1):RolePerson(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='source.{OR5:OR503MedecinTraitant.Prenom}' property="target.{ROL(1):RolePerson(1).GivenName}" key="&quot;&quot;" action="set" />
<assign value='source.{OR5:OR503MedecinTraitant.Qualite}' property="target.{ROL(1):RolePerson(1).Prefix}" key="&quot;&quot;" action="set" />
<assign value='source.{OR5:OR503MedecinTraitant.Titre}' property="target.{ROL(1):RolePerson(1).Degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{ROL(1):RolePerson(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />

<!-- Adresse médecin traitant demandé par Firminy JIRA CCOMTCC-1076, nécessite mise à jour classe ODBC & PAYS_INSEE_3166-1-alpha-3.LUT -->
<assign value='"O"' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).AddressType}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedAdresse(source.{OR5:OR503MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).StreetAddress}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedComplAd(source.{OR5:OR503MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).OtherDesignation}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedCP(source.{OR5:OR503MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).ZiporPostalCode}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedVille(source.{OR5:OR503MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).City}" key="&quot;&quot;" action="set" />
<assign value='..Lookup("PAYS_INSEE_3166-1-alpha-3",##class(ISSAS.Common.Tools.ClassODBC).MedPays(source.{OR5:OR503MedecinTraitant.CodeClinicom}))' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).Country}" key="&quot;&quot;" action="set" />

<!-- N° RPPS -->
<if condition="$L(source.{OR5:OR503MedecinTraitant.NoRPPS})">
<true>
<assign value='source.{OR5:OR503MedecinTraitant.NoRPPS}' property="target.{ROL(1):RolePerson(2).IDNumber}" key="&quot;&quot;" action="set" />
<assign value='source.{OR5:OR503MedecinTraitant.Nom}' property="target.{ROL(1):RolePerson(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='source.{OR5:OR503MedecinTraitant.Prenom}' property="target.{ROL(1):RolePerson(2).GivenName}" key="&quot;&quot;" action="set" />
<assign value='source.{OR5:OR503MedecinTraitant.Qualite}' property="target.{ROL(1):RolePerson(2).Prefix}" key="&quot;&quot;" action="set" />
<assign value='source.{OR5:OR503MedecinTraitant.Titre}' property="target.{ROL(1):RolePerson(2).Degree}" key="&quot;&quot;" action="set" />
<assign value='"RPPS"' property="target.{ROL(1):RolePerson(2).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>
</true>
</if>

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<if condition='source.{OR3:OR319IndicateurEpisodeRecurr} = "1"'>
<true>
<assign value="&quot;R&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;O&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{OR3:OR303NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR305CodeUniteConsultation}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR301CodeHopital.CodeEtablissement}" property="target.{PV1:AssignedPatientLocation.facility}" key="&quot;&quot;" action="set" />

<assign value="source.{OR3:OR315MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR315MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR315MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR315MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR315MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:AttendingDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{OR3:OR316MedecinEnvoyeur.CodeClinicom})">
<true>
<assign value="source.{OR3:OR316MedecinEnvoyeur.CodeClinicom}" property="target.{PV1:AdmittingDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR316MedecinEnvoyeur.Nom}" property="target.{PV1:AdmittingDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR316MedecinEnvoyeur.Prenom}" property="target.{PV1:AdmittingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR316MedecinEnvoyeur.Qualite}" property="target.{PV1:AdmittingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR316MedecinEnvoyeur.Titre}" property="target.{PV1:AdmittingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:AdmittingDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{OR3:OR307DateHeureEnregistrement}" property="target.{PV1:AdmitDateTime}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{OR5:OR503MedecinTraitant.CodeClinicom})">
<true>
<assign value="source.{OR5:OR503MedecinTraitant.CodeClinicom}" property="target.{PV1:ReferringDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{OR5:OR503MedecinTraitant.Nom}" property="target.{PV1:ReferringDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{OR5:OR503MedecinTraitant.Prenom}" property="target.{PV1:ReferringDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{OR5:OR503MedecinTraitant.Qualite}" property="target.{PV1:ReferringDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{OR5:OR503MedecinTraitant.Titre}" property="target.{PV1:ReferringDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:ReferringDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- segment PV2 -->
<assign value="source.{OR3:OR321CodeParcoursDeSoins}" property="target.{PV2:VisitUserCode}" key="&quot;&quot;" action="set" />
<if condition='$L(source.{OR3:OR323ModeTransport.Code})'>
<true>
<assign value="source.{OR3:OR323ModeTransport.Code}" property="target.{PV2:ModeofArrivalCode}" key="&quot;&quot;" action="set" />
</true>
</if>
<!-- Confidentialité médicale peut prendre les valeurs 0 (normal), 1 (confidentiel) ou 2 (hyperconfidentiel) -->
<if condition='..In(source.{OR2:OR214ConfidentialiteMedicale},"1,2")'>
<true>
<assign value='"Y"' property="target.{PV2:VisitProtectionIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value='"N"' property="target.{PV2:VisitProtectionIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>

<!-- segment ZBE -->
<assign value="source.{OR2:OR210IdentifiantUniqueDeMouv}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<if condition='$L(source.{OR3:OR325DateHeureDecisionMedica})'>
<true>
<assign value="source.{OR3:OR325DateHeureDecisionMedica}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR325DateHeureDecisionMedica}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="source.{OR3:OR307DateHeureEnregistrement}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
</false>
</if>
<if condition='source.{OR:OR01Mode} = "02"'>
<true>
<assign value="&quot;UPDATE&quot;" property="target.{ZBE:MovementAction}" key="&quot;&quot;" action="set" />
<assign value="&quot;A04&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;INSERT&quot;" property="target.{ZBE:MovementAction}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="&quot;N&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR306CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{OR3:OR306CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />

<!-- segment ZFP -->
<if condition="$L(source.{OR3:OR311CategorieSocioprofessio})">
<true>
<assign value="source.{OR3:OR311CategorieSocioprofessio}" property="target.{ZFP:Activitesociopro}" key="&quot;&quot;" action="set" />
</true>
</if>
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.PAtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65415,40498</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/PAtoADT.xml#11 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:PA" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16)
 Set nbtel=0 ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","PA"_source.GetValueAt("PA:PA01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","PA"_source.GetValueAt("PA:PA01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","PA"_source.GetValueAt("PA:PA01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA316DateHeureAdmissionPrevu}" property="target.{EVN:DateTimePlannedEvent}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA316DateHeureAdmissionPrevu}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{PA7:PA712Utilisateur.Username}" property="target.{EVN:OperatorID.IDNumber}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA03IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{PA:PA04NomUsuel.Nom}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"D"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA05Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA06Qualite}" property="target.{PID:PatientName(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA07NomDeNaissance.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA05Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA06Qualite}" property="target.{PID:PatientName(2).prefix}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{PA:PA07NomDeNaissance.Nom})">
<false>
<assign value="source.{PA:PA04NomUsuel.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{PA:PA09DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{PA:PA10Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA11NoRueAdresse}" property="target.{PID:PatientAddress(1).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{PA:PA12CodePostalAdresse}" property="target.{PID:PatientAddress(1).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{PA2:PA201LocaliteAdresse}" property="target.{PID:PatientAddress(1).city}" key="&quot;&quot;" action="set" />
<assign value="source.{PA2:PA206ComplementAdresse}" property="target.{PID:PatientAddress(1).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{PA2:PA207PaysAdresse}" property="target.{PID:PatientAddress(1).country}" key="&quot;&quot;" action="set" />
<assign value="&quot;H&quot;" property="target.{PID:PatientAddress(1).AddressType}" key="&quot;&quot;" action="set" />

<!-- telephone domicile seulement si valorisé -->
<if condition="$L(source.{PA2:PA202TelephoneDomicile})">
<true>
<assign value="source.{PA2:PA202TelephoneDomicile}" property="target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<!-- telephone professionnel seulement si valorisé -->
<if condition="$L(source.{PA2:PA208TelephoneProfessionnel})">
<true>
<assign value="source.{PA2:PA208TelephoneProfessionnel}" property="target.{PID:PhoneNumberBusiness(1).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;WPN&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<!-- telephone portable seulement si valorisé -->
<if condition="$L(source.{PA2:PA209TelephonePortable})">
<true>
<assign value="source.{PA2:PA209TelephonePortable}" property="target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;CP&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{PA2:PA203Nationalite}" property="target.{PID:Nationality}" key="&quot;&quot;" action="set" />
<assign value="source.{PA2:PA203Nationalite}" property="target.{PID:Citizenship(1)}" key="&quot;&quot;" action="set" />
<assign value="source.{PA2:PA212NumeroSSDernierEpisode}" property="target.{PID:SSNNumberPatient}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA303NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="..Lookup($G(^ISSAS.Config(&quot;LUT&quot;, &quot;CCOM_HL7_MaritalStatus&quot;)),source.{PA3:PA307SituationFamiliale})" property="target.{PID:MaritalStatus.identifier}" key="&quot;&quot;" action="set" />
<!-- Identité validée ou provisoire -->
<if condition='source.{PA2:PA211InformationsIdentite.IndicateurIdentiteProvisoire}="1"'>
<true>
<assign value='"PROV"' property="target.{PID:IdentityReliabilityCode(1)}" key="&quot;&quot;" action="set" />
<assign value="&quot;Y&quot;" property="target.{PID:IdentityUnknownIndicator}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{PA2:PA211InformationsIdentite.IndicateurIdentiteValidee}="1"'>
<true>
<assign value='"VALI"' property="target.{PID:IdentityReliabilityCode(1)}" key="&quot;&quot;" action="set" />
<assign value="&quot;N&quot;" property="target.{PID:IdentityUnknownIndicator}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- segment ROL (médecin traitant) -->
<if condition="$L(source.{PA5:PA503MedecinTraitant.CodeClinicom})">
<true>
<assign value='"UP"' property="target.{ROL(1):ActionCode}" key="&quot;&quot;" action="set" />
<assign value='"ODRP"' property="target.{ROL(1):RoleROL}" key="&quot;&quot;" action="set" />
<assign value='source.{PA5:PA503MedecinTraitant.CodeClinicom}' property="target.{ROL(1):RolePerson(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value='source.{PA5:PA503MedecinTraitant.Nom}' property="target.{ROL(1):RolePerson(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='source.{PA5:PA503MedecinTraitant.Prenom}' property="target.{ROL(1):RolePerson(1).GivenName}" key="&quot;&quot;" action="set" />
<assign value='source.{PA5:PA503MedecinTraitant.Qualite}' property="target.{ROL(1):RolePerson(1).Prefix}" key="&quot;&quot;" action="set" />
<assign value='source.{PA5:PA503MedecinTraitant.Titre}' property="target.{ROL(1):RolePerson(1).Degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{ROL(1):RolePerson(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />

<!-- Adresse médecin traitant demandé par Firminy JIRA CCOMTCC-1076, nécessite mise à jour classe ODBC & PAYS_INSEE_3166-1-alpha-3.LUT -->
<assign value='"O"' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).AddressType}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedAdresse(source.{PA5:PA503MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).StreetAddress}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedComplAd(source.{PA5:PA503MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).OtherDesignation}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedCP(source.{PA5:PA503MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).ZiporPostalCode}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedVille(source.{PA5:PA503MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).City}" key="&quot;&quot;" action="set" />
<assign value='..Lookup("PAYS_INSEE_3166-1-alpha-3",##class(ISSAS.Common.Tools.ClassODBC).MedPays(source.{PA5:PA503MedecinTraitant.CodeClinicom}))' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).Country}" key="&quot;&quot;" action="set" />

<!-- N° RPPS -->
<if condition="$L(source.{PA5:PA503MedecinTraitant.NoRPPS})">
<true>
<assign value='"RPPS"' property="target.{ROL(1):RolePerson(2).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value='source.{PA5:PA503MedecinTraitant.NoRPPS}' property="target.{ROL(1):RolePerson(2).IDNumber}" key="&quot;&quot;" action="set" />
<assign value='source.{PA5:PA503MedecinTraitant.Nom}' property="target.{ROL(1):RolePerson(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='source.{PA5:PA503MedecinTraitant.Prenom}' property="target.{ROL(1):RolePerson(2).GivenName}" key="&quot;&quot;" action="set" />
<assign value='source.{PA5:PA503MedecinTraitant.Qualite}' property="target.{ROL(1):RolePerson(2).Prefix}" key="&quot;&quot;" action="set" />
<assign value='source.{PA5:PA503MedecinTraitant.Titre}' property="target.{ROL(1):RolePerson(2).Degree}" key="&quot;&quot;" action="set" />
</true>
</if>
</true>
</if>

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;I&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA303NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA303NumeroEpisode}" property="target.{PV1:PreadmitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:PreadmitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA305CodeUSPrevue}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value='source.{PA3:PA301CodeHopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.Facility}' action='set' />
<assign value="source.{PA3:PA311ModeEntree}" property="target.{PV1:AdmitSource}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA321MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA321MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA321MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA321MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA321MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:AttendingDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PA3:PA322MedecinEnvoyeur.CodeClinicom})">
<true>
<assign value="source.{PA3:PA322MedecinEnvoyeur.CodeClinicom}" property="target.{PV1:AdmittingDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA322MedecinEnvoyeur.Nom}" property="target.{PV1:AdmittingDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA322MedecinEnvoyeur.Prenom}" property="target.{PV1:AdmittingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA322MedecinEnvoyeur.Qualite}" property="target.{PV1:AdmittingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA322MedecinEnvoyeur.Titre}" property="target.{PV1:AdmittingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:AdmittingDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{PA3:PA316DateHeureAdmissionPrevu}" property="target.{PV1:AdmitDateTime}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PA5:PA503MedecinTraitant.CodeClinicom})">
<true>
<assign value="source.{PA5:PA503MedecinTraitant.CodeClinicom}" property="target.{PV1:ReferringDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{PA5:PA503MedecinTraitant.Nom}" property="target.{PV1:ReferringDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{PA5:PA503MedecinTraitant.Prenom}" property="target.{PV1:ReferringDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{PA5:PA503MedecinTraitant.Qualite}" property="target.{PV1:ReferringDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{PA5:PA503MedecinTraitant.Titre}" property="target.{PV1:ReferringDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:ReferringDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- segment PV2 -->
<if condition='$L(source.{PA3:PA310ModeTransport.Code})'>
<true>
<assign value="source.{PA3:PA310ModeTransport.Code}" property="target.{PV2:ModeofArrivalCode}" key="&quot;&quot;" action="set" />
</true>
</if>
<!-- Confidentialité médicale peut prendre les valeurs 0 (normal), 1 (confidentiel) ou 2 (hyperconfidentiel) -->
<if condition='..In(source.{PA2:PA213ConfidentialiteMedicale},"1,2")'>
<true>
<assign value='"Y"' property="target.{PV2:VisitProtectionIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value='"N"' property="target.{PV2:VisitProtectionIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>

<!-- segment ZBE -->
<assign value="source.{PA2:PA210IdentifiantUniqueDeMouv}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA316DateHeureAdmissionPrevu}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MovementAction",source.GetValueAt("PA:PA01Mode")),"ZBE:MovementAction","set","")]]]]><![CDATA[>
</code>
<!-- modif préad -->
<if condition='source.{PA:PA01Mode} = "02"'>
<true>
<assign value="&quot;A05&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</true>
</if>
<!-- conversion adm vers préad  = annulation adm -->
<if condition='source.{PA:PA01Mode} = "03"'>
<true>
<assign value="&quot;A01&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{PA7:PA711IndicateurDernierMouvem} = "1"'>
<true>
<assign value="&quot;N&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;Y&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{PA3:PA306CodeUFPrevue}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{PA3:PA306CodeUFPrevue}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />

<!-- segment ZFM -->
<!-- requete vers CLINICOM : SELECT TXT_COD_ModeEntreeUM FROM ClinicomSQL.Admission_Mode_Entree WHERE ID='?' -->
<assign value="##class(ISSAS.Common.Tools.ClassODBC).ClinicomAdmissionModeEntree(source.{PA3:PA311ModeEntree})" property="target.{ZFM:ModeEntreePMSI}" key="&quot;&quot;" action="set" />

<!-- segment ZFP -->
<if condition="$L(source.{PA3:PA309CategorieSocioprofessio})">
<true>
<assign value="source.{PA3:PA309CategorieSocioprofessio}" property="target.{ZFP:Activitesociopro}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- segment ZFV -->
<if condition="$L(source.{PA3:PA312EtablissementOrigine})">
<true>
<!-- requete vers CLINICOM : SELECT TXT_DON_Finess FROM ClinicomSQL.FDB_NOY_EtablissementExterieur WHERE TXT_COD_EtablissementExterieur='?' -->
<assign value="##class(ISSAS.Common.Tools.ClassODBC).ClinicomEtablissementExterieur(source.{PA3:PA312EtablissementOrigine})" property="target.{ZFV:Etbprovenance}" key="&quot;&quot;" action="set" />
</true>
</if>

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.PBtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65449,52536</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/PBtoADT.xml#16 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:PB" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16)
 Set nbtel=0
 Set nbadd=0 ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","PB"_source.GetValueAt("PB:PB01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","PB"_source.GetValueAt("PB:PB01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","PB"_source.GetValueAt("PB:PB01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB218Utilisateur.Username}" property="target.{EVN:OperatorID.IDNumber}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="source.{PB:PB03IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PB2:PB220IdentifiantNational.Valeur})">
<true>
<assign value="source.{PB2:PB220IdentifiantNational.Valeur}" property="target.{PID:PatientIdentifierList(2).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;1.2.250.1.213.1.4.2&quot;" property="target.{PID:PatientIdentifierList(2).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;INS-C&quot;" property="target.{PID:PatientIdentifierList(2).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;ASIP&quot;" property="target.{PID:PatientIdentifierList(2).AssigningFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(source.{PB2:PB220IdentifiantNational.DateObtention},1,8)" property="target.{PID:PatientIdentifierList(2).EffectiveDate}" key="&quot;&quot;" action="set" />
</true>
</if>
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{PB:PB04NomUsuel}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"D"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PB:PB05Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB213AutresPrenoms}" property="target.{PID:PatientName(1).SecondandFurtherGivenNamesor}" key="&quot;&quot;" action="set" />
<assign value="source.{PB:PB06Qualite}" property="target.{PID:PatientName(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{PB:PB07NomDeNaissance}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PB:PB05Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{PB:PB06Qualite}" property="target.{PID:PatientName(2).prefix}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{PB:PB07NomDeNaissance})">
<false>
<assign value="source.{PB:PB04NomUsuel}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>

<assign value="source.{PB:PB09DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{PB:PB10Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{PB:PB11NoRueAdresse}" property="target.{PID:PatientAddress($I(nbadd)).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{PB:PB12CodePostalAdresse}" property="target.{PID:PatientAddress(nbadd).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB201LocaliteAdresse}" property="target.{PID:PatientAddress(nbadd).city}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB206ComplementAdresse}" property="target.{PID:PatientAddress(nbadd).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB207PaysAdresse}" property="target.{PID:PatientAddress(nbadd).country}" key="&quot;&quot;" action="set" />
<assign value="&quot;H&quot;" property="target.{PID:PatientAddress(nbadd).AddressType}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PB2:PB202TelephoneDomicile})">
<true>
<assign value="source.{PB2:PB202TelephoneDomicile}" property="target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB202TelephoneDomicile}" property="target.{PID:PhoneNumberHome(nbtel).UnformattedTelephoneNumber}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{PB2:PB208TelephoneProfessionnel})">
<true>
<assign value="source.{PB2:PB208TelephoneProfessionnel}" property="target.{PID:PhoneNumberBusiness(1).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;WPN&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB208TelephoneProfessionnel}" property="target.{PID:PhoneNumberBusiness(1).UnformattedTelephoneNumber}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{PB2:PB217TelephonePortable})">
<true>
<assign value="source.{PB2:PB217TelephonePortable}" property="target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;CP&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB217TelephonePortable}" property="target.{PID:PhoneNumberHome(nbtel).UnformattedTelephoneNumber}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{PB2:PB223Email})">
<true>
<assign value="source.{PB2:PB223Email}" property="target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;NET&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;Internet&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB223Email}" property="target.{PID:PhoneNumberHome(nbtel).EmailAddress}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{PB2:PB203Nationalite}" property="target.{PID:Nationality}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB203Nationalite}" property="target.{PID:Citizenship(1)}" key="&quot;&quot;" action="set" />
<assign value="..Lookup($G(^ISSAS.Config(&quot;LUT&quot;,&quot;CCOM_HL7_MaritalStatus&quot;)),source.{PB2:PB210SituationFamiliale})" property="target.{PID:MaritalStatus.identifier}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB209DateDeDeces}" property="target.{PID:PatientDeathDateandTime}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PB2:PB209DateDeDeces})">
<true>
<assign value="&quot;Y&quot;" property="target.{PID:PatientDeathIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;N&quot;" property="target.{PID:PatientDeathIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>
<!-- Identité validée ou provisoire -->
<if condition='source.{PB2:PB215InformationsIdentite.IndicateurIdentiteProvisoire}="1"'>
<true>
<assign value='"PROV"' property="target.{PID:IdentityReliabilityCode(1)}" key="&quot;&quot;" action="set" />
<assign value="&quot;Y&quot;" property="target.{PID:IdentityUnknownIndicator}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{PB2:PB215InformationsIdentite.IndicateurIdentiteValidee}="1"'>
<true>
<assign value='"VALI"' property="target.{PID:IdentityReliabilityCode(1)}" key="&quot;&quot;" action="set" />
<assign value="&quot;N&quot;" property="target.{PID:IdentityUnknownIndicator}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='$L(source.{PB2:PB212DernierNumeroEpisode})'>
<true>
<assign value="source.{PB2:PB212DernierNumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{PB2:PB221RangGemellaire}" property="target.{PID:BirthOrder}" key="&quot;&quot;" action="set" />
<!-- lieu de naissance -->
<if condition='$L(source.{PB:PB08LocaliteDeNaissance}) || $L(source.{PB2:PB204PaysDeNaissance})'>
<true>
<assign value="source.{PB2:PB205DepartementDeNaissance}" property="target.{PID:PatientAddress($I(nbadd)).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{PB:PB08LocaliteDeNaissance}" property="target.{PID:PatientAddress(nbadd).city}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB204PaysDeNaissance}" property="target.{PID:PatientAddress(nbadd).country}" key="&quot;&quot;" action="set" />
<assign value="&quot;BDL&quot;" property="target.{PID:PatientAddress(nbadd).AddressType}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- adresse temporaire -->
<if condition='$L(source.{PB2:PB226AdresseProvisoire.Ville})'>
<true>
<assign value="source.{PB2:PB226AdresseProvisoire.NumRue}" property="target.{PID:PatientAddress($I(nbadd)).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB226AdresseProvisoire.CodePostal}" property="target.{PID:PatientAddress(nbadd).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB226AdresseProvisoire.Ville}" property="target.{PID:PatientAddress(nbadd).city}" key="&quot;&quot;" action="set" />
<assign value="source.{PB2:PB226AdresseProvisoire.Pays}" property="target.{PID:PatientAddress(nbadd).country}" key="&quot;&quot;" action="set" />
<assign value="&quot;C&quot;" property="target.{PID:PatientAddress(nbadd).AddressType}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- segment(s) NK1 -->
<foreach key="kPaP" property="source.{PB4()}">
<code>
<![CDATA[ Set occTel=0 ]]]]><![CDATA[>
</code>
<assign value="kPaP" property="target.{NK1(kPaP):SetIDNK1}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB402NomUsuel}" property="target.{NK1(kPaP):Name(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="&quot;D&quot;" property="target.{NK1(kPaP):Name(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB403Prenom}" property="target.{NK1(kPaP):Name(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB416Civilite}" property="target.{NK1(kPaP):Name(1).Prefix}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_RelationShip&quot;,source.{PB4(kPaP):PB404LienDeParente.Code},&quot;UNK&quot;)" property="target.{NK1(kPaP):Relationship}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB405NoRue}" property="target.{NK1(kPaP):Address(1).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB406ComplementAdresse}" property="target.{NK1(kPaP):Address(1).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB407Pays}" property="target.{NK1(kPaP):Address(1).country}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB408CodePostal}" property="target.{NK1(kPaP):Address(1).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB409Localite}" property="target.{NK1(kPaP):Address(1).city}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PB4(kPaP):PB410TelephoneDomicile})">
<true>
<assign value="source.{PB4(kPaP):PB410TelephoneDomicile}" property="target.{NK1(kPaP):PhoneNumber($I(occTel)).Telephonenumber}" key="&quot;&quot;" action="set" />
<assign value='"PRN"' property="target.{NK1(kPaP):PhoneNumber(occTel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value='"PH"' property="target.{NK1(kPaP):PhoneNumber(occTel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB410TelephoneDomicile}" property="target.{NK1(kPaP):PhoneNumber(occTel).UnformattedTelephonenumber}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{PB4(kPaP):PB411TelephoneProfessionnel})">
<true>
<assign value="source.{PB4(kPaP):PB411TelephoneProfessionnel}" property="target.{NK1(kPaP):BusinessPhoneNumber(1).Telephonenumber}" key="&quot;&quot;" action="set" />
<assign value='"WPN"' property="target.{NK1(kPaP):BusinessPhoneNumber(1).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value='"PH"' property="target.{NK1(kPaP):BusinessPhoneNumber(1).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB411TelephoneProfessionnel}" property="target.{NK1(kPaP):BusinessPhoneNumber(1).UnformattedTelephonenumber}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{PB4(kPaP):PB413TelephoneMobile})">
<true>
<assign value="source.{PB4(kPaP):PB413TelephoneMobile}" property="target.{NK1(kPaP):PhoneNumber($I(occTel)).Telephonenumber}" key="&quot;&quot;" action="set" />
<assign value='"PRN"' property="target.{NK1(kPaP):PhoneNumber(occTel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value='"CP"' property="target.{NK1(kPaP):PhoneNumber(occTel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB413TelephoneMobile}" property="target.{NK1(kPaP):PhoneNumber(occTel).UnformattedTelephonenumber}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value='"C"' property="target.{NK1(kPaP):ContactRole}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB414IdentifiantUnique}" property="target.{NK1(kPaP):NextofKinAssociatedPartysIde(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value='"CLINICOM"' property="target.{NK1(kPaP):NextofKinAssociatedPartysIde(1).AssigningAuthority}" key="&quot;&quot;" action="set" />
<assign value='"PN"' property="target.{NK1(kPaP):NextofKinAssociatedPartysIde(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="source.{PB4(kPaP):PB415DateDeSuppression}" property="target.{NK1(kPaP):EndDate}" key="&quot;&quot;" action="set" />
</foreach>

<!-- segment(s) ZFS (placements psy) -->
<foreach key="kPSY" property="source.{PB5()}">
<assign value="kPSY" property="target.{ZFS(kPSY):SetIDZFS}" key="&quot;&quot;" action="set" />
<assign value='..Lookup("CCOM_HL7_MovementAction",source.{PB5(kPSY):PB502Action})' property="target.{ZFS(kPSY):Action}" key="&quot;&quot;" action="set" />
<assign value="source.{PB5(kPSY):PB503IdentifiantUnique}" property="target.{ZFS(kPSY):Identifiant.EntityIdentifier}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZFS(kPSY):Identifiant.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="source.{PB5(kPSY):PB504DateHeureDeDebut}" property="target.{ZFS(kPSY):DateHeureDebutModeLegal.Time}" key="&quot;&quot;" action="set" />
<assign value="source.{PB5(kPSY):PB505DateHeureDeFin}" property="target.{ZFS(kPSY):DateHeureFinModeLegal.Time}" key="&quot;&quot;" action="set" />
<assign value="source.{PB5(kPSY):PB506ModeLegalDeSoin.Code}" property="target.{ZFS(kPSY):ModeLegal.Identifier}" key="&quot;&quot;" action="set" />
<assign value="source.{PB5(kPSY):PB507Commentaire}" property="target.{ZFS(kPSY):Commentaires}" key="&quot;&quot;" action="set" />
<assign value="source.{PB5(kPSY):PB508CodeRIMPDuModeLegal.Code}" property="target.{ZFS(kPSY):CodeRIMPPModeLegal.Identifier}" key="&quot;&quot;" action="set" />
</foreach>

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;N&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />

<!-- segment ZFP -->
<if condition="$L(source.{PB2:PB225Profession.CategorieSocioProf})">
<true>
<assign value='source.{PB2:PB225Profession.CategorieSocioProf}' property='target.{ZFP:Categoriesociopro}' action='set' />
</true>
</if>

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.PLtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65415,40498</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/PLtoADT.xml#8 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:PL" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>
<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","PL"_source.GetValueAt("PL:PL01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","PL"_source.GetValueAt("PL:PL01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","PL"_source.GetValueAt("PL:PL01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="source.{PL:PL05IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{PL:PL09NomUsuel}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"D"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PL:PL10Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{PL:PL11NomDeNaissance}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PL:PL10Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{PL:PL11NomDeNaissance})">
<false>
<assign value="source.{PL:PL11NomDeNaissance}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{PL:PL13DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{PL:PL12Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{PL:PL06NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value='"P"' property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="source.{PL:PL06NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{PL:PL15CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />

<!-- segment ZBE -->
<assign value="source.{PL:PL16IdentifiantUniqueDeMouve}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MovementAction",source.GetValueAt("PL:PL01Mode")),"ZBE:MovementAction","set","")]]]]><![CDATA[>
</code>
<if condition='source.{PL:PL01Mode} = "01"'>
<false>
<assign value="&quot;A03&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{PL:PL14CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{PL:PL14CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.PMtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65415,40498</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/PMtoADT.xml#7 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:PM" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16)
 Set nbtel=0
 /*If (source.GetValueAt("PM:PM02Mode") = "03") { Set tSC = 0  Quit }*/ ]]]]><![CDATA[>
</code>
<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","PM"_source.GetValueAt("PM:PM01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","PM"_source.GetValueAt("PM:PM01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","PM"_source.GetValueAt("PM:PM01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM17Utilisateur.Username}" property="target.{EVN:OperatorID.IDNumber}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM08CibleIPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{PM:PM11CibleNomUsuel}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"D"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM12CiblePrenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM16CibleNomDeNaissance}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM12CiblePrenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{PM:PM16CibleNomDeNaissance})">
<false>
<assign value="source.{PM:PM11CibleNomUsuel}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{PM:PM13CibleDateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{PM:PM14CibleSexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<!-- Indicateur Décès Y/N -->
<if condition="##class(ISSAS.Common.Tools.ClassODBC).IsDeceased(source.{PM:PM04SourceIPP})=1">
<true>
<assign value="&quot;Y&quot;" property="target.{PID:PatientDeathIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;N&quot;" property="target.{PID:PatientDeathIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>

<!-- segment MRG -->
<assign value="source.{PM:PM04SourceIPP}" property="target.{MRG:PriorPatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{MRG:PriorPatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{MRG:PriorPatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM04SourceIPP}" property="target.{MRG:PriorPatientID(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{MRG:PriorPatientID(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{MRG:PriorPatientID(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{PM:PM09SourceNomUsuel}" property="target.{MRG:PriorPatientName(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="&quot;D&quot;" property="target.{MRG:PriorPatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM10SourcePrenom}" property="target.{MRG:PriorPatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM15SourceNomDeNaissance}" property="target.{MRG:PriorPatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="&quot;L&quot;" property="target.{MRG:PriorPatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{PM:PM10SourcePrenom}" property="target.{MRG:PriorPatientName(2).givenname}" key="&quot;&quot;" action="set" />
<if condition="$L(source.{PM:PM15SourceNomDeNaissance})">
<false>
<assign value="source.{PM:PM09SourceNomUsuel}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>

<if condition="$L(source.{PM:PM05CibleEpisode})">
<true>
<assign value="source.{PM:PM05CibleEpisode}" property="target.{MRG:PriorPatientAccountNumber(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{MRG:PriorPatientAccountNumber(1).assigningauthority}" key="&quot;&quot;" action="set" />
</true>
</if>
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.RItoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65415,40498</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/RItoADT.xml#8 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:RI" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","RI"_source.GetValueAt("RI:RI01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","RI"_source.GetValueAt("RI:RI01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","RI"_source.GetValueAt("RI:RI01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{RI:RI08DateHeureRetour}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="source.{RI:RI05IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{RI:RI21NomUsuel.Nom}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"D"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{RI:RI22Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{RI:RI23NomDeNaissance.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{RI:RI22Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{RI:RI23NomDeNaissance.Nom})">
<false>
<assign value="source.{RI:RI21NomUsuel.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{RI:RI25DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{RI:RI24Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{RI:RI06NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;I&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="source.{RI:RI06NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{RI:RI09CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{RI:RI13Chambre}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value="source.{RI:RI14Lit}" property="target.{PV1:AssignedPatientLocation.bed}" key="&quot;&quot;" action="set" />
<assign value="source.{RI:RI11CodeMedecinResponsable}" property="target.{PV1:AttendingDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:AttendingDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />

<!-- Attention : IHE PAM préconise Y / N , mais certains éditeurs attendent 0, 1 ou 2 --> 
<assign value="source.{RI:RI12SupplementChambreSeule}" property="target.{PV1:CourtesyCode}" key="&quot;&quot;" action="set" />


<!-- segment ZBE -->
<assign value="source.{RI:RI26IdentifiantUniqueDeMouve}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="source.{RI:RI08DateHeureRetour}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MovementAction",source.GetValueAt("RI:RI01Mode")),"ZBE:MovementAction","set","")]]]]><![CDATA[>
</code>
<!-- pour modif (02) et annulation (03) renseigner le code évènement modifié ou annulé (A22) -->
<if condition='(source.{RI:RI01Mode} = "02")||(source.{RI:RI01Mode} = "03") '>
<true>
<assign value="&quot;A22&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{RI:RI20IndicateurDernierMouveme} = "1"'>
<true>
<assign value="&quot;N&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;Y&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{RI:RI10CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{RI:RI10CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.SDtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65434,54839</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/SDtoADT.xml#8 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:SD" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","SD"_source.GetValueAt("SD:SD01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","SD"_source.GetValueAt("SD:SD01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","SD"_source.GetValueAt("SD:SD01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{SD:SD07DateHeureDebutPermission}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="source.{SD:SD05IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{SD:SD19NomUsuel.Nom}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"D"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{SD:SD20Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{SD:SD21NomDeNaissance.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{SD:SD20Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{SD:SD21NomDeNaissance.Nom})">
<false>
<assign value="source.{SD:SD19NomUsuel.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{SD:SD23DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{SD:SD22Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{SD:SD06NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;I&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="source.{SD:SD06NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{SD:SD12CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{SD:SD15Chambre}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value="source.{SD:SD16Lit}" property="target.{PV1:AssignedPatientLocation.bed}" key="&quot;&quot;" action="set" />
<assign value="source.{SD:SD17ModePermission}" property="target.{PV1:DischargeDisposition}" key="&quot;&quot;" action="set" />
<!-- PV1-3.5 : O si on réserve le lit, U si on le libère -->
<if condition='..In(source.{SD:SD27TypeDepartLongSejour},"RES,RESR")'>
<true>
<assign value='"O"' property="target.{PV1:AssignedPatientLocation.LocationStatus}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{SD:SD27TypeDepartLongSejour} = "PERM"'>
<true>
<assign value='"U"' property="target.{PV1:AssignedPatientLocation.LocationStatus}" key="&quot;&quot;" action="set" />
</true>
</if>


<!-- segment PV2 -->
<assign value="source.{SD:SD08DateHeurePrevueRetour}" property="target.{PV2:ExpectedLOAReturnDateTime}" key="&quot;&quot;" action="set" />

<!-- segment ZBE -->
<assign value="source.{SD:SD24IdentifiantUniqueDeMouve}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="source.{SD:SD07DateHeureDebutPermission}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{SD:SD08DateHeurePrevueRetour}" property="target.{ZBE:EndMovementDateTime}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MovementAction",source.GetValueAt("SD:SD01Mode")),"ZBE:MovementAction","set","")]]]]><![CDATA[>
</code>
<!-- pour modif (02) et annulation (03) renseigner le code évènement modifié ou annulé (A21) -->
<if condition='(source.{SD:SD01Mode} = "02")||(source.{SD:SD01Mode} = "03") '>
<true>
<assign value="&quot;A21&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{SD:SD18IndicateurDernierMouveme} = "1"'>
<true>
<assign value="&quot;N&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;Y&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{SD:SD11CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{SD:SD11CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.SVtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65415,40498</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/SVtoADT.xml#10 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:TR" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>
<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<if condition='source.{TR:TR01Mode} = "01" '>
<true>
<assign value="&quot;A03&quot;" property="target.{MSH:MessageType.TriggerEvent}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT_A03&quot;" property="target.{MSH:MessageType.MessageStructure}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{TR:TR01Mode} = "02" '>
<true>
<assign value="&quot;Z99&quot;" property="target.{MSH:MessageType.TriggerEvent}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT_A01&quot;" property="target.{MSH:MessageType.MessageStructure}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{TR:TR01Mode} = "03" '>
<true>
<assign value="&quot;A13&quot;" property="target.{MSH:MessageType.TriggerEvent}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT_A01&quot;" property="target.{MSH:MessageType.MessageStructure}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<if condition='source.{TR:TR01Mode} = "01" '>
<true>
<assign value="&quot;A03&quot;" property="target.{EVN:EventTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{TR:TR01Mode} = "02" '>
<true>
<assign value="&quot;Z99&quot;" property="target.{EVN:EventTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{TR:TR01Mode} = "03" '>
<true>
<assign value="&quot;A13&quot;" property="target.{EVN:EventTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR07DateHeureMutation}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR05IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{TR:TR27NomUsuel.Nom}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR28Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value='"D"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR29NomDeNaissance.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR28Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{TR:TR29NomDeNaissance.Nom})">
<false>
<assign value="source.{TR:TR27NomUsuel.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{TR:TR31DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{TR:TR30Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR06NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;R&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="&quot;R&quot;" property="target.{PV1:AdmissionType}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR06NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value='source.{TR:TR02CodeHopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.Facility}' action='set' />
<assign value="source.{TR:TR09CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR10Chambre}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR14Lit}" property="target.{PV1:AssignedPatientLocation.bed}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:AttendingDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR07DateHeureMutation}" property="target.{PV1:DischargeDateTime}" key="&quot;&quot;" action="set" />
<assign value='"V"' property="target.{PV1:VisitIndicator}" key="&quot;&quot;" action="set" />
<assign value='"N"' property="target.{PV1:AccountStatus}" key="&quot;&quot;" action="set" />

<!-- Attention : IHE PAM préconise Y / N , mais certains éditeurs attendent 0, 1 ou 2 --> 
<assign value="source.{TR:TR12SupplementChambre}" property="target.{PV1:CourtesyCode}" key="&quot;&quot;" action="set" />


<!-- segment ZBE -->
<assign value="source.{TR:TR34IdentifiantUniqueDeMouve}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR07DateHeureMutation}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MovementAction",source.GetValueAt("TR:TR01Mode")),"ZBE:MovementAction","set","")]]]]><![CDATA[>
</code>
<!-- pour modif (02) et annulation (03) renseigner le code évènement modifié ou annulé (A03) -->
<if condition='(source.{TR:TR01Mode} = "02")||(source.{TR:TR01Mode} = "03") '>
<true>
<assign value="&quot;A03&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{TR:TR26IndicateurDernierMouveme} = "1"'>
<true>
<assign value="&quot;N&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;Y&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{TR:TR13CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR13CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />

<!-- Annulation de mutation : UF et US de CCOM sont celles annulées -->
<!-- HL/7 attend celles courantes, qui sont les précédentes pour CCOM -->
<if condition='source.{TR:TR01Mode} = "03"'>
<true>
<assign value="source.{TR:TR21CodeUFPrecedente}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR21CodeUFPrecedente}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR23CodeUSPrecedente}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR33ChambrePrecedente}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- segment ZFM -->

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.TRtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65475,61357</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/TRtoADT.xml#10 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:TR" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","TR"_source.GetValueAt("TR:TR01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","TR"_source.GetValueAt("TR:TR01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","TR"_source.GetValueAt("TR:TR01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR07DateHeureMutation}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR05IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{TR:TR27NomUsuel.Nom}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR28Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value='"D"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR29NomDeNaissance.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR28Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{TR:TR29NomDeNaissance.Nom})">
<false>
<assign value="source.{TR:TR27NomUsuel.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{TR:TR31DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{TR:TR30Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR06NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;I&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR06NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR09CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR10Chambre}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR14Lit}" property="target.{PV1:AssignedPatientLocation.bed}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR02CodeHopital.CodeEtablissement}" property="target.{PV1:AssignedPatientLocation.facility}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR15MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR23CodeUSPrecedente}" property="target.{PV1:PriorPatientLocation.PointofCare}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR33ChambrePrecedente}" property="target.{PV1:PriorPatientLocation.Room}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:AttendingDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />

<!-- Attention : IHE PAM préconise Y / N , mais certains éditeurs attendent 0, 1 ou 2 --> 
<assign value="source.{TR:TR12SupplementChambre}" property="target.{PV1:CourtesyCode}" key="&quot;&quot;" action="set" />

<!-- CCOMTCC-1510 Confidentialité médicale peut prendre les valeurs vide (normal), 1 (confidentiel) ou 2 (hyperconfidentiel)
	Forcer à N si vide -->
<if condition='..In(source.{TR:TR37ConfidentialiteMedicale},"1,2")'>
<true>
<assign value='"Y"' property="target.{PV2:VisitProtectionIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value='"N"' property="target.{PV2:VisitProtectionIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>

<!-- segment ZBE -->
<assign value="source.{TR:TR34IdentifiantUniqueDeMouve}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR07DateHeureMutation}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MovementAction",source.GetValueAt("TR:TR01Mode")),"ZBE:MovementAction","set","")]]]]><![CDATA[>
</code>
<!-- pour modif (02) et annulation (03) renseigner le code évènement modifié ou annulé (A02) -->
<if condition='(source.{TR:TR01Mode} = "02")||(source.{TR:TR01Mode} = "03") '>
<true>
<assign value="&quot;A02&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{TR:TR26IndicateurDernierMouveme} = "1"'>
<true>
<assign value="&quot;N&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;Y&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{TR:TR13CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR13CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />

<!-- Annulation de mutation : UF, US, Chambre et Lit de CCOM sont ceux annulés -->
<!-- HL/7 attend la localisation courante, il faut utiliser les champs "précédentes" de CCOM -->
<if condition='source.{TR:TR01Mode} = "03"'>
<true>
<assign value="source.{TR:TR21CodeUFPrecedente}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR21CodeUFPrecedente}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR23CodeUSPrecedente}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{TR:TR33ChambrePrecedente}" property="target.{PV1:AssignedPatientLocation.room}" key="&quot;&quot;" action="set" />
<assign value='""' property="target.{PV1:AssignedPatientLocation.bed}" key="&quot;&quot;" action="set" />
</true>
</if>

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoHL7v25.URtoADT">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65415,40498</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoHL7v25/URtoADT.xml#11 $</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:UR" targetClass="EnsLib.HL7.Message" targetDocType="HL7v25IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16)
 Set nbtel=0 ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value="$ZCVT(source.{MSH:MSH03SendingApplication},&quot;U&quot;)" property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value="$ZCVT(source.{MSH:MSH04SendingFacility},&quot;U&quot;)" property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<assign value="&quot;ADT&quot;" property="target.{MSH:MessageType.MessageCode}" key="&quot;&quot;" action="set" />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","UR"_source.GetValueAt("UR:UR01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[>
</code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","UR"_source.GetValueAt("UR:UR01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[>
</code>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value='"2.5"' property="target.{MSH:VersionID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment EVN -->
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","UR"_source.GetValueAt("UR:UR01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[>
</code>
<assign value="$E(strNow, 1, 12)" property="target.{EVN:RecordedDateTime}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR307DateHeureEnregistrement}" property="target.{EVN:EventOccurred}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR320Utilisateur.Username}" property="target.{EVN:OperatorID.IDNumber}" key="&quot;&quot;" action="set" />

<!-- segment PID -->
<assign value="&quot;1&quot;" property="target.{PID:SetIDPID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR03IPP}" property="target.{PID:PatientIdentifierList(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PI&quot;" property="target.{PID:PatientIdentifierList(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : on envoie toujours nom de naissance en L et nom usuel en D pour être conforme IHE PAM -->
<assign value="source.{UR:UR04NomUsuel.Nom}" property="target.{PID:PatientName(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"D"' property="target.{PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR05Prenom}" property="target.{PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR06Qualite}" property="target.{PID:PatientName(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR07NomDeNaissance.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PID:PatientName(2).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR05Prenom}" property="target.{PID:PatientName(2).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR06Qualite}" property="target.{PID:PatientName(2).prefix}" key="&quot;&quot;" action="set" />
<!-- CCOMTCC-1369 : par précaution, dans le cas improbable où le nom de naissance serait vide, on envoie le nom usuel en L aussi -->
<if condition="$L(source.{UR:UR07NomDeNaissance.Nom})">
<false>
<assign value="source.{UR:UR04NomUsuel.Nom}" property="target.{PID:PatientName(2).FamilyName}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{UR:UR09DateDeNaissance}" property="target.{PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{UR:UR10Sexe})" property="target.{PID:AdministrativeSex}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR11NoRueAdresse}" property="target.{PID:PatientAddress(1).streetaddress}" key="&quot;&quot;" action="set" />
<assign value="source.{UR:UR12CodePostalAdresse}" property="target.{PID:PatientAddress(1).ziporpostalcode}" key="&quot;&quot;" action="set" />
<assign value="source.{UR2:UR201LocaliteAdresse}" property="target.{PID:PatientAddress(1).city}" key="&quot;&quot;" action="set" />
<assign value="source.{UR2:UR206ComplementAdresse}" property="target.{PID:PatientAddress(1).otherdesignation}" key="&quot;&quot;" action="set" />
<assign value="source.{UR2:UR207PaysAdresse}" property="target.{PID:PatientAddress(1).country}" key="&quot;&quot;" action="set" />
<assign value="&quot;H&quot;" property="target.{PID:PatientAddress(1).AddressType}" key="&quot;&quot;" action="set" />

<!-- telephone domicile seulement si valorisé -->
<if condition="$L(source.{UR2:UR202TelephoneDomicile})">
<true>
<assign value="source.{UR2:UR202TelephoneDomicile}" property="target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{UR2:UR208TelephoneProfessionnel})">
<true>
<assign value="source.{UR2:UR208TelephoneProfessionnel}" property="target.{PID:PhoneNumberBusiness(1).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;WPN&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;PH&quot;" property="target.{PID:PhoneNumberBusiness(1).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition="$L(source.{UR2:UR209TelephonePortable})">
<true>
<assign value="source.{UR2:UR209TelephonePortable}" property="target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}" key="&quot;&quot;" action="set" />
<assign value="&quot;PRN&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;CP&quot;" property="target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{UR2:UR203Nationalite}" property="target.{PID:Nationality}" key="&quot;&quot;" action="set" />
<assign value="source.{UR2:UR203Nationalite}" property="target.{PID:Citizenship(1)}" key="&quot;&quot;" action="set" />
<assign value="source.{UR2:UR212NumeroSSDernierEpisode}" property="target.{PID:SSNNumberPatient}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR303NumeroEpisode}" property="target.{PID:PatientAccountNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PID:PatientAccountNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="..Lookup($G(^ISSAS.Config(&quot;LUT&quot;, &quot;CCOM_HL7_MaritalStatus&quot;)),source.{UR3:UR309SituationFamiliale})" property="target.{PID:MaritalStatus.identifier}" key="&quot;&quot;" action="set" />
<!-- Identité validée ou provisoire -->
<if condition='source.{UR2:UR211InformationsIdentite.IndicateurIdentiteProvisoire}="1"'>
<true>
<assign value='"PROV"' property="target.{PID:IdentityReliabilityCode(1)}" key="&quot;&quot;" action="set" />
<assign value="&quot;Y&quot;" property="target.{PID:IdentityUnknownIndicator}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{UR2:UR211InformationsIdentite.IndicateurIdentiteValidee}="1"'>
<true>
<assign value='"VALI"' property="target.{PID:IdentityReliabilityCode(1)}" key="&quot;&quot;" action="set" />
<assign value="&quot;N&quot;" property="target.{PID:IdentityUnknownIndicator}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- segment ROL (médecin traitant) -->
<if condition="$L(source.{UR5:UR503MedecinTraitant.CodeClinicom})">
<true>
<assign value='"UP"' property="target.{ROL(1):ActionCode}" key="&quot;&quot;" action="set" />
<assign value='"ODRP"' property="target.{ROL(1):RoleROL}" key="&quot;&quot;" action="set" />
<assign value='source.{UR5:UR503MedecinTraitant.CodeClinicom}' property="target.{ROL(1):RolePerson(1).IDNumber}" key="&quot;&quot;" action="set" />
<assign value='source.{UR5:UR503MedecinTraitant.Nom}' property="target.{ROL(1):RolePerson(1).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='source.{UR5:UR503MedecinTraitant.Prenom}' property="target.{ROL(1):RolePerson(1).GivenName}" key="&quot;&quot;" action="set" />
<assign value='source.{UR5:UR503MedecinTraitant.Qualite}' property="target.{ROL(1):RolePerson(1).Prefix}" key="&quot;&quot;" action="set" />
<assign value='source.{UR5:UR503MedecinTraitant.Titre}' property="target.{ROL(1):RolePerson(1).Degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{ROL(1):RolePerson(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />

<!-- Adresse médecin traitant demandé par Firminy JIRA CCOMTCC-1076, nécessite mise à jour classe ODBC & PAYS_INSEE_3166-1-alpha-3.LUT -->
<assign value='"O"' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).AddressType}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedAdresse(source.{UR5:UR503MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).StreetAddress}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedComplAd(source.{UR5:UR503MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).OtherDesignation}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedCP(source.{UR5:UR503MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).ZiporPostalCode}" key="&quot;&quot;" action="set" />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedVille(source.{UR5:UR503MedecinTraitant.CodeClinicom})' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).City}" key="&quot;&quot;" action="set" />
<assign value='..Lookup("PAYS_INSEE_3166-1-alpha-3",##class(ISSAS.Common.Tools.ClassODBC).MedPays(source.{UR5:UR503MedecinTraitant.CodeClinicom}))' property="target.{ROL(1):OfficeHomeAddressBirthplace(1).Country}" key="&quot;&quot;" action="set" />

<!-- N° RPPS -->
<if condition="$L(source.{UR5:UR503MedecinTraitant.NoRPPS})">
<true>
<assign value='source.{UR5:UR503MedecinTraitant.NoRPPS}' property="target.{ROL(1):RolePerson(2).IDNumber}" key="&quot;&quot;" action="set" />
<assign value='source.{UR5:UR503MedecinTraitant.Nom}' property="target.{ROL(1):RolePerson(2).FamilyName}" key="&quot;&quot;" action="set" />
<assign value='source.{UR5:UR503MedecinTraitant.Prenom}' property="target.{ROL(1):RolePerson(2).GivenName}" key="&quot;&quot;" action="set" />
<assign value='source.{UR5:UR503MedecinTraitant.Qualite}' property="target.{ROL(1):RolePerson(2).Prefix}" key="&quot;&quot;" action="set" />
<assign value='source.{UR5:UR503MedecinTraitant.Titre}' property="target.{ROL(1):RolePerson(2).Degree}" key="&quot;&quot;" action="set" />
<assign value='"RPPS"' property="target.{ROL(1):RolePerson(2).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>
</true>
</if>

<!-- segment PV1 -->
<assign value="&quot;1&quot;" property="target.{PV1:SetIDPV1}" key="&quot;&quot;" action="set" />
<assign value="&quot;E&quot;" property="target.{PV1:PatientClass}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR303NumeroEpisode}" property="target.{PV1:VisitNumber.IDNumber}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PV1:VisitNumber.assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR305CodeUS}" property="target.{PV1:AssignedPatientLocation.pointofcare}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR315MedecinResponsable.CodeClinicom}" property="target.{PV1:AttendingDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR315MedecinResponsable.Nom}" property="target.{PV1:AttendingDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR315MedecinResponsable.Prenom}" property="target.{PV1:AttendingDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR315MedecinResponsable.Qualite}" property="target.{PV1:AttendingDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR315MedecinResponsable.Titre}" property="target.{PV1:AttendingDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:AttendingDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
<assign value='source.{UR3:UR301CodeHopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.Facility}' action='set' />
<assign value="source.{UR3:UR307DateHeureEnregistrement}" property="target.{PV1:AdmitDateTime}" key="&quot;&quot;" action="set" />

<if condition="$L(source.{UR5:UR503MedecinTraitant.CodeClinicom})">
<true>
<assign value="source.{UR5:UR503MedecinTraitant.CodeClinicom}" property="target.{PV1:ReferringDoctor(1).IDnumber}" key="&quot;&quot;" action="set" />
<assign value="source.{UR5:UR503MedecinTraitant.Nom}" property="target.{PV1:ReferringDoctor(1).familyname}" key="&quot;&quot;" action="set" />
<assign value="source.{UR5:UR503MedecinTraitant.Prenom}" property="target.{PV1:ReferringDoctor(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{UR5:UR503MedecinTraitant.Qualite}" property="target.{PV1:ReferringDoctor(1).prefix}" key="&quot;&quot;" action="set" />
<assign value="source.{UR5:UR503MedecinTraitant.Titre}" property="target.{PV1:ReferringDoctor(1).degree}" key="&quot;&quot;" action="set" />
<assign value='"EI"' property="target.{PV1:ReferringDoctor(1).IdentifierTypeCode}" key="&quot;&quot;" action="set" />
</true>
</if>
<assign value="source.{UR3:UR319ModeEntree}" property="target.{PV1:AdmitSource}" key="&quot;&quot;" action="set" />

<!-- segment PV2 -->
<assign value="source.{UR3:UR321CodeParcoursDeSoins}" property="target.{PV2:VisitUserCode}" key="&quot;&quot;" action="set" />
<if condition='$L(source.{UR3:UR323ModeTransport.Code})'>
<true>
<assign value="source.{UR3:UR323ModeTransport.Code}" property="target.{PV2:ModeofArrivalCode}" key="&quot;&quot;" action="set" />
</true>
</if>
<!-- Confidentialité médicale peut prendre les valeurs 0 (normal), 1 (confidentiel) ou 2 (hyperconfidentiel) -->
<if condition='..In(source.{UR2:UR214ConfidentialiteMedicale},"1,2")'>
<true>
<assign value='"Y"' property="target.{PV2:VisitProtectionIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value='"N"' property="target.{PV2:VisitProtectionIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>

<!-- segment ZBE -->
<assign value="source.{UR2:UR210IdentifiantUniqueDeMouv}" property="target.{ZBE:MovementID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{ZBE:MovementID.NamespaceID}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR307DateHeureEnregistrement}" property="target.{ZBE:StartMovementDateTime}" key="&quot;&quot;" action="set" />
<if condition='source.{UR:UR01Mode} = "01"'>
<true>
<assign value="&quot;INSERT&quot;" property="target.{ZBE:MovementAction}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{UR:UR01Mode} = "02"'>
<true>
<assign value="&quot;UPDATE&quot;" property="target.{ZBE:MovementAction}" key="&quot;&quot;" action="set" />
<assign value="&quot;A04&quot;" property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{UR:UR01Mode}="03"'>
<true>
<assign value='"CANCEL"' property="target.{ZBE:MovementAction}" key="&quot;&quot;" action="set" />
<assign value='"A06"' property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</true>
</if>
<if condition='source.{UR:UR01Mode}="04"'>
<true>
<assign value='"CANCEL"' property="target.{ZBE:MovementAction}" key="&quot;&quot;" action="set" />
<assign value='"A07"' property="target.{ZBE:Originaltriggereventcode}" key="&quot;&quot;" action="set" />
</true>
</if>

<if condition='source.{UR3:UR316IndicateurDernierMouvem} = "1"'>
<true>
<assign value="&quot;N&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</true>
<false>
<assign value="&quot;Y&quot;" property="target.{ZBE:HistoricalMovementIndicator}" key="&quot;&quot;" action="set" />
</false>
</if>
<assign value="source.{UR3:UR306CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationName}" key="&quot;&quot;" action="set" />
<assign value="source.{UR3:UR306CodeUF}" property="target.{ZBE:ResponsibleWard.OrganizationIdentifier}" key="&quot;&quot;" action="set" />
<assign value='"HMS"' property="target.{ZBE:NatureMouvement}" key="&quot;&quot;" action="set" />

<!-- segment ZFM -->
<!-- requete vers CLINICOM : SELECT TXT_COD_ModeEntreeUM FROM ClinicomSQL.Admission_Mode_Entree WHERE ID='?' -->
<assign value="##class(ISSAS.Common.Tools.ClassODBC).ClinicomAdmissionModeEntree(source.{UR3:UR319ModeEntree})" property="target.{ZFM:ModeEntreePMSI}" key="&quot;&quot;" action="set" />

<!-- segment ZFP -->
<if condition="$L(source.{UR3:UR311CategorieSocioprofessio})">
<true>
<assign value="source.{UR3:UR311CategorieSocioprofessio}" property="target.{ZFP:Activitesociopro}" key="&quot;&quot;" action="set" />
</true>
</if>
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoTC.APtoSRM">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64565,65844</TimeChanged>
<TimeCreated>62844,63240.416783</TimeCreated>
<DependsOn>EnsLib.HL7.Message</DependsOn>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/CCOMtoTC/APtoSRM.xml#4 $</Default>
</Parameter>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='EnsLib.HL7.Message' sourceDocType='Clinicom:AP1' targetDocType='2.4:SRM_S01' create='new' language='objectscript' >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.4"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value='"CLINICOM"' property="target.{MSH:SendingApplication}" key="&quot;&quot;" action="set" />
<assign value='"ISC"' property="target.{MSH:SendingFacility}" key="&quot;&quot;" action="set" />
<assign value="$E(strNow, 1, 12)" property="target.{MSH:DateTimeOfMessage}" key="&quot;&quot;" action="set" />
<if condition="source.{AP2:AP201Mode}=&quot;01&quot;">
<true>
<assign value='"SRM^S01"' property='target.{MSH:MessageType}' action='set' />
</true>
<false>
<assign value='"SRM^S04"' property='target.{MSH:MessageType}' action='set' />
</false>
</if>
<assign value="strGUID" property="target.{MSH:MessageControlID}" key="&quot;&quot;" action="set" />
<assign value="&quot;FRA&quot;" property="target.{MSH:CountryCode}" key="&quot;&quot;" action="set" />
<assign value="&quot;8859/1&quot;" property="target.{MSH:CharacterSet}" key="&quot;&quot;" action="set" />
<assign value="&quot;FR&quot;" property="target.{MSH:PrincipalLanguageOfMessage}" key="&quot;&quot;" action="set" />

<!-- segment ARQ -->
<assign value='"CLINICOM"' property='target.{ARQ:PlacerAppointmentID}' action='set' />
<assign value='source.{AP2:AP213IdentifiantUniqueRDV}' property='target.{ARQ:ScheduleID}' action='set' />
<assign value='source.{AP2:AP204DateRDV}_source.{AP2:AP205HeureRDV}' property='target.{ARQ:RequestedStartDateTimeRange(1).rangestartdatetime}' action='set' />

<!-- segment NTE -->
<if condition="$L(source.{AP2:AP208Commentaire})">
<true>
<assign value='"1"' property="target.{NTE(1):SetIDNTE}" key="&quot;&quot;" action="set" />
<assign value="source.{AP2:AP208Commentaire}" property="target.{NTE(1):Comment(1)}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- segment PID -->
<assign value="source.{AP1:AP101IPP}" property="target.{PIDgrp(1).PID:PatientIdentifierList(1).ID}" key="&quot;&quot;" action="set" />
<assign value="strAssigningAuthority" property="target.{PIDgrp(1).PID:PatientIdentifierList(1).assigningauthority}" key="&quot;&quot;" action="set" />
<assign value="source.{AP1:AP102NomUsuel}" property="target.{PIDgrp(1).PID:PatientName(1).familyname}" key="&quot;&quot;" action="set" />
<assign value='"L"' property="target.{PIDgrp(1).PID:PatientName(1).nametypecode}" key="&quot;&quot;" action="set" />
<assign value="source.{AP1:AP104Prenom}" property="target.{PIDgrp(1).PID:PatientName(1).givenname}" key="&quot;&quot;" action="set" />
<assign value="source.{AP1:AP105DateDeNaissance}" property="target.{PIDgrp(1).PID:DateTimeOfBirth}" key="&quot;&quot;" action="set" />
<assign value="..Lookup(&quot;CCOM_HL7_Sexe&quot;,source.{AP1:AP106Sexe})" property="target.{PIDgrp(1).PID:AdministrativeSex}" key="&quot;&quot;" action="set" />

<!-- segment RGS -->
<assign value='"1"' property="target.{RGSgrp(1).RGS:SetIDRGS}" key="&quot;&quot;" action="set" />
<assign value='"U"' property="target.{RGSgrp(1).RGS:SegmentActionCode}" key="&quot;&quot;" action="set" />

<!-- segment AIS -->
<assign value='source.{AP2:AP207CodePrestation}' property='target.{RGSgrp(1).AISgrp(1).AIS:UniversalServiceIdentifier}' action='set' />

<!-- segment AIL -->
<assign value='source.{AP2:AP209CodeUC}' property='target.{RGSgrp(1).AILgrp(1).AIL:LocationGroup}' action='set' />
<assign value='source.{AP2:AP211Coderessource}' property='target.{RGSgrp(1).AILgrp(1).AIL:LocationTypeAIL}' action='set' />
<assign value='source.{AP2:AP210CodeUF}' property='target.{RGSgrp(1).AILgrp(1).AIL:LocationGroup}' action='set' />
 
</transform>
]]></Data>
</XData>
</Class>




<Class name="ISSAS.Common.DTL.CCOMtoTITAN25.ADtoADT">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65541,53483.904367</TimeChanged>
<TimeCreated>65538,56931.386041</TimeCreated>
<DependsOn>EnsLib.HL7.Message</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>0</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='EnsLib.HL7.Message' sourceDocType='Clinicom:AD' targetDocType='HL7v25IHE:ADT_AXX' create='new' language='objectscript' >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16)
 Set nbtel=0 ]]]]><![CDATA[></code>
<assign value='$ZCVT(source.{MSH:MSH03SendingApplication},"U")' property='target.{MSH:SendingApplication}' action='set' />
<assign value='$ZCVT(source.{MSH:MSH04SendingFacility},"U")' property='target.{MSH:SendingFacility}' action='set' />
<assign value='$E(strNow, 1, 12)' property='target.{MSH:DateTimeOfMessage}' action='set' />
<assign value='"ADT"' property='target.{MSH:MessageType.MessageCode}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","AD"_source.GetValueAt("AD:AD01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[></code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","AD"_source.GetValueAt("AD:AD01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[></code>
<assign value='strGUID' property='target.{MSH:MessageControlID}' action='set' />
<assign value='"2.5"' property='target.{MSH:VersionID}' action='set' />
<assign value='"FRA"' property='target.{MSH:CountryCode}' action='set' />
<assign value='"8859/1"' property='target.{MSH:CharacterSet}' action='set' />
<assign value='"FR"' property='target.{MSH:PrincipalLanguageOfMessage}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","AD"_source.GetValueAt("AD:AD01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[></code>
<assign value='$E(strNow, 1, 12)' property='target.{EVN:RecordedDateTime}' action='set' />
<assign value='source.{AD3:AD320DateHeureAdmission}' property='target.{EVN:EventOccurred}' action='set' />
<assign value='source.{AD3:AD331Utilisateur.Username}' property='target.{EVN:OperatorID.IDNumber}' action='set' />
<assign value='"1"' property='target.{PID:SetIDPID}' action='set' />
<assign value='strAssigningAuthority' property='target.{PID:PatientIdentifierList(1).assigningauthority}' action='set' />
<assign value='source.{AD:AD03IPP}' property='target.{PID:PatientIdentifierList(1).IDNumber}' action='set' />
<assign value='"PI"' property='target.{PID:PatientIdentifierList(1).IdentifierTypeCode}' action='set' />
<assign value='source.{AD:AD04NomUsuel.Nom}' property='target.{PID:PatientName(1).FamilyName}' action='set' />
<assign value='source.{AD:AD05Prenom}' property='target.{PID:PatientName(1).givenname}' action='set' />
<assign value='source.{AD2:AD211AutresPrenoms}' property='target.{PID:PatientName(1).SecondandFurtherGivenNamesor}' action='set' />
<assign value='"D"' property='target.{PID:PatientName(1).nametypecode}' action='set' />
<assign value='source.{AD:AD06Qualite}' property='target.{PID:PatientName(1).prefix}' action='set' />
<assign value='source.{AD:AD07NomDeNaissance.Nom}' property='target.{PID:PatientName(2).FamilyName}' action='set' />
<assign value='source.{AD:AD05Prenom}' property='target.{PID:PatientName(2).givenname}' action='set' />
<assign value='"L"' property='target.{PID:PatientName(2).nametypecode}' action='set' />
<assign value='source.{AD:AD06Qualite}' property='target.{PID:PatientName(2).prefix}' action='set' />
<if condition='$L(source.{AD:AD07NomDeNaissance.Nom})' >
<false>
<assign value='source.{AD:AD04NomUsuel.Nom}' property='target.{PID:PatientName(2).FamilyName}' action='set' />
</false>
</if>
<assign value='source.{AD:AD09DateDeNaissance}' property='target.{PID:DateTimeOfBirth}' action='set' />
<assign value='..Lookup("CCOM_HL7_Sexe",source.{AD:AD10Sexe})' property='target.{PID:AdministrativeSex}' action='set' />
<assign value='source.{AD:AD11NoRueAdresse}' property='target.{PID:PatientAddress(1).streetaddress}' action='set' />
<assign value='source.{AD:AD12CodePostalAdresse}' property='target.{PID:PatientAddress(1).ziporpostalcode}' action='set' />
<assign value='source.{AD2:AD201LocaliteAdresse}' property='target.{PID:PatientAddress(1).city}' action='set' />
<assign value='source.{AD2:AD206ComplementAdresse}' property='target.{PID:PatientAddress(1).otherdesignation}' action='set' />
<assign value='source.{AD2:AD207PaysAdresse}' property='target.{PID:PatientAddress(1).country}' action='set' />
<assign value='"H"' property='target.{PID:PatientAddress(1).AddressType}' action='set' />
<if condition='$L(source.{AD2:AD202TelephoneDomicile})' >
<true>
<assign value='source.{AD2:AD202TelephoneDomicile}' property='target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}' action='set' />
<assign value='"PRN"' property='target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}' action='set' />
<assign value='"PH"' property='target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}' action='set' />
<assign value='source.{AD2:AD202TelephoneDomicile}' property='target.{PID:PhoneNumberHome(nbtel).UnformattedTelephonenumber}' action='set' />
</true>
</if>
<if condition='$L(source.{AD2:AD208TelephoneProfessionnel})' >
<true>
<assign value='source.{AD2:AD208TelephoneProfessionnel}' property='target.{PID:PhoneNumberBusiness(1).TelephoneNumber}' action='set' />
<assign value='"WPN"' property='target.{PID:PhoneNumberBusiness(1).TelecommunicationUseCode}' action='set' />
<assign value='"PH"' property='target.{PID:PhoneNumberBusiness(1).TelecommunicationEquipmentTy}' action='set' />
<assign value='source.{AD2:AD208TelephoneProfessionnel}' property='target.{PID:PhoneNumberBusiness(1).UnformattedTelephonenumber}' action='set' />
</true>
</if>
<if condition='$L(source.{AD2:AD212TelephonePortable})' >
<true>
<assign value='source.{AD2:AD212TelephonePortable}' property='target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}' action='set' />
<assign value='"PRN"' property='target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}' action='set' />
<assign value='"CP"' property='target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}' action='set' />
<assign value='source.{AD2:AD212TelephonePortable}' property='target.{PID:PhoneNumberHome(nbtel).UnformattedTelephonenumber}' action='set' />
</true>
</if>
<assign value='..Lookup("PAYS_INSEE_3166-1-alpha-3",source.{AD2:AD203Nationalite})' property='target.{PID:Nationality}' action='set' />
<assign value='source.{AD2:AD203Nationalite}' property='target.{PID:Citizenship(1)}' action='set' />
<assign value='source.{AD2:AD215NumeroSSDernierEpisode}' property='target.{PID:SSNNumberPatient}' action='set' />
<assign value='source.{AD3:AD303NumeroEpisode}' property='target.{PID:PatientAccountNumber.IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PID:PatientAccountNumber.assigningauthority}' action='set' />
<assign value='..Lookup("CCOM_HL7_MaritalStatus",source.{AD3:AD309SituationFamiliale})' property='target.{PID:MaritalStatus.identifier}' action='set' />
<assign value='"A"' property='target.{PV1:VisitIndicator}' action='set' />
<if condition='source.{AD2:AD214InformationsIdentite.IndicateurIdentiteProvisoire}="1"' >
<true>
<assign value='"PROV"' property='target.{PID:IdentityReliabilityCode(1)}' action='set' />
<assign value='"Y"' property='target.{PID:IdentityUnknownIndicator}' action='set' />
</true>
</if>
<if condition='source.{AD2:AD214InformationsIdentite.IndicateurIdentiteValidee}="1"' >
<true>
<assign value='"VALI"' property='target.{PID:IdentityReliabilityCode(1)}' action='set' />
<assign value='"N"' property='target.{PID:IdentityUnknownIndicator}' action='set' />
</true>
</if>
<if condition='$L(source.{AD5:AD505MedecinTraitant.CodeClinicom})' >
<true>
<assign value='"UP"' property='target.{ROL(1):ActionCode}' action='set' />
<assign value='"ODRP"' property='target.{ROL(1):RoleROL}' action='set' />
<assign value='source.{AD5:AD505MedecinTraitant.CodeClinicom}' property='target.{ROL(1):RolePerson(1).IDNumber}' action='set' />
<assign value='source.{AD5:AD505MedecinTraitant.Nom}' property='target.{ROL(1):RolePerson(1).FamilyName}' action='set' />
<assign value='source.{AD5:AD505MedecinTraitant.Prenom}' property='target.{ROL(1):RolePerson(1).GivenName}' action='set' />
<assign value='source.{AD5:AD505MedecinTraitant.Qualite}' property='target.{ROL(1):RolePerson(1).Prefix}' action='set' />
<assign value='source.{AD5:AD505MedecinTraitant.Titre}' property='target.{ROL(1):RolePerson(1).Degree}' action='set' />
<assign value='"EI"' property='target.{ROL(1):RolePerson(1).IdentifierTypeCode}' action='set' />
<assign value='"O"' property='target.{ROL(1):OfficeHomeAddressBirthplace(1).AddressType}' action='set' />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedAdresse(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property='target.{ROL(1):OfficeHomeAddressBirthplace(1).StreetAddress}' action='set' />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedComplAd(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property='target.{ROL(1):OfficeHomeAddressBirthplace(1).OtherDesignation}' action='set' />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedCP(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property='target.{ROL(1):OfficeHomeAddressBirthplace(1).ZiporPostalCode}' action='set' />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedVille(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property='target.{ROL(1):OfficeHomeAddressBirthplace(1).City}' action='set' />
<assign value='..Lookup("PAYS_INSEE_3166-1-alpha-3",##class(ISSAS.Common.Tools.ClassODBC).MedPays(source.{AD5:AD505MedecinTraitant.CodeClinicom}))' property='target.{ROL(1):OfficeHomeAddressBirthplace(1).Country}' action='set' />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedVille(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property='target.{ROL(1):OfficeHomeAddressBirthplace(1).City}' action='set' />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedTel1(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property='target.{ROL(1):Phone(1).Telephonenumber}' action='set' />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedTel1(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property='target.{ROL(1):Phone(1).UnformattedTelephonenumber}' action='set' />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).MedEmail(source.{AD5:AD505MedecinTraitant.CodeClinicom})' property='target.{ROL(1):Phone(1).EmailAddress}' action='set' />
<if condition='$L(source.{AD5:AD505MedecinTraitant.NoRPPS})' >
<true>
<assign value='source.{AD5:AD505MedecinTraitant.NoRPPS}' property='target.{ROL(1):RolePerson(2).IDNumber}' action='set' />
<assign value='source.{AD5:AD505MedecinTraitant.Nom}' property='target.{ROL(1):RolePerson(2).FamilyName}' action='set' />
<assign value='source.{AD5:AD505MedecinTraitant.Prenom}' property='target.{ROL(1):RolePerson(2).GivenName}' action='set' />
<assign value='source.{AD5:AD505MedecinTraitant.Qualite}' property='target.{ROL(1):RolePerson(2).Prefix}' action='set' />
<assign value='source.{AD5:AD505MedecinTraitant.Titre}' property='target.{ROL(1):RolePerson(2).Degree}' action='set' />
<assign value='"RPPS"' property='target.{ROL(1):RolePerson(2).IdentifierTypeCode}' action='set' />
</true>
</if>
</true>
</if>
<assign value='"1"' property='target.{PV1:SetIDPV1}' action='set' />
<if condition='source.{AD3:AD322IndicateurEpisodeRecurr} = "1"' >
<true>
<assign value='"R"' property='target.{PV1:PatientClass}' action='set' />
</true>
<false>
<assign value='"I"' property='target.{PV1:PatientClass}' action='set' />
</false>
</if>
<assign value='source.{AD3:AD303NumeroEpisode}' property='target.{PV1:VisitNumber.IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PV1:VisitNumber.assigningauthority}' action='set' />
<assign value='source.{AD3:AD305CodeUS}' property='target.{PV1:AssignedPatientLocation.pointofcare}' action='set' />
<assign value='source.{AD3:AD307Lit}' property='target.{PV1:AssignedPatientLocation.bed}' action='set' />
<assign value='source.{AD3:AD308Chambre}' property='target.{PV1:AssignedPatientLocation.room}' action='set' />
<assign value='source.{AD3:AD301Hopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.Facility}' action='set' />
<assign value='source.{AD3:AD313ModeEntree}' property='target.{PV1:AdmitSource}' action='set' />
<assign value='source.{AD3:AD319MedecinResponsable.CodeClinicom}' property='target.{PV1:AttendingDoctor(1).IDnumber}' action='set' />
<assign value='source.{AD3:AD319MedecinResponsable.Nom}' property='target.{PV1:AttendingDoctor(1).familyname}' action='set' />
<assign value='source.{AD3:AD319MedecinResponsable.Prenom}' property='target.{PV1:AttendingDoctor(1).givenname}' action='set' />
<assign value='source.{AD3:AD319MedecinResponsable.Qualite}' property='target.{PV1:AttendingDoctor(1).prefix}' action='set' />
<assign value='source.{AD3:AD319MedecinResponsable.Titre}' property='target.{PV1:AttendingDoctor(1).degree}' action='set' />
<assign value='"EI"' property='target.{PV1:AttendingDoctor(1).IdentifierTypeCode}' action='set' />
<if condition='$L(source.{AD2:AD209MedecinEnvoyeur.CodeClinicom})' >
<true>
<assign value='source.{AD2:AD209MedecinEnvoyeur.CodeClinicom}' property='target.{PV1:AdmittingDoctor(1).IDnumber}' action='set' />
<assign value='source.{AD2:AD209MedecinEnvoyeur.Nom}' property='target.{PV1:AdmittingDoctor(1).familyname}' action='set' />
<assign value='source.{AD2:AD209MedecinEnvoyeur.Prenom}' property='target.{PV1:AdmittingDoctor(1).givenname}' action='set' />
<assign value='source.{AD2:AD209MedecinEnvoyeur.Qualite}' property='target.{PV1:AdmittingDoctor(1).prefix}' action='set' />
<assign value='source.{AD2:AD209MedecinEnvoyeur.Titre}' property='target.{PV1:AdmittingDoctor(1).degree}' action='set' />
<assign value='"EI"' property='target.{PV1:AdmittingDoctor(1).IdentifierTypeCode}' action='set' />
</true>
</if>
<assign value='source.{AD3:AD320DateHeureAdmission}' property='target.{PV1:AdmitDateTime}' action='set' />
<if condition='$L(source.{AD5:AD505MedecinTraitant.CodeClinicom})' >
<true>
<assign value='source.{AD5:AD505MedecinTraitant.CodeClinicom}' property='target.{PV1:ReferringDoctor(1).IDnumber}' action='set' />
<assign value='source.{AD5:AD505MedecinTraitant.Nom}' property='target.{PV1:ReferringDoctor(1).familyname}' action='set' />
<assign value='source.{AD5:AD505MedecinTraitant.Prenom}' property='target.{PV1:ReferringDoctor(1).givenname}' action='set' />
<assign value='source.{AD5:AD505MedecinTraitant.Qualite}' property='target.{PV1:ReferringDoctor(1).prefix}' action='set' />
<assign value='source.{AD5:AD505MedecinTraitant.Titre}' property='target.{PV1:ReferringDoctor(1).degree}' action='set' />
<assign value='"EI"' property='target.{PV1:ReferringDoctor(1).IdentifierTypeCode}' action='set' />
</true>
</if>
<assign value='source.{AD3:AD335DateHospitalisationPrec}' property='target.{PV1:DischargedtoLocation.EffectiveDate}' action='set' />
<assign value='source.{AD3:AD316SupplementChambreSeule}' property='target.{PV1:CourtesyCode}' action='set' />
<if condition='$L(source.{AD3:AD332TypePlacementPsy})' >
<true>
<assign value='source.{AD3:AD332TypePlacementPsy}' property='target.{PV2:AdmitReason.Identifier}' action='set' />
</true>
</if>
<if condition='$L(source.{AD3:AD312ModeTransport.Code})' >
<true>
<assign value='source.{AD3:AD312ModeTransport.Code}' property='target.{PV2:ModeofArrivalCode}' action='set' />
</true>
</if>
<if condition='..In(source.{AD2:AD217ConfidentialiteMedicale},"1,2")' >
<true>
<assign value='"Y"' property='target.{PV2:VisitProtectionIndicator}' action='set' />
</true>
<false>
<assign value='"N"' property='target.{PV2:VisitProtectionIndicator}' action='set' />
</false>
</if>
<assign value='source.{AD2:AD213IdentifiantUniqueDeMouv}' property='target.{ZBE:MovementID}' action='set' />
<assign value='strAssigningAuthority' property='target.{ZBE:MovementID.NamespaceID}' action='set' />
<assign value='source.{AD3:AD320DateHeureAdmission}' property='target.{ZBE:StartMovementDateTime}' action='set' />
<if condition='source.{AD:AD01Mode} = "02"' >
<true>
<assign value='"UPDATE"' property='target.{ZBE:MovementAction}' action='set' />
<assign value='"A01"' property='target.{ZBE:Originaltriggereventcode}' action='set' />
</true>
<false>
<assign value='"INSERT"' property='target.{ZBE:MovementAction}' action='set' />
</false>
</if>
<if condition='source.{AD7:AD711IndicateurDernierMouvem} = "1"' >
<true>
<assign value='"N"' property='target.{ZBE:HistoricalMovementIndicator}' action='set' />
</true>
<false>
<assign value='"Y"' property='target.{ZBE:HistoricalMovementIndicator}' action='set' />
</false>
</if>
<assign value='source.{AD3:AD306CodeUF}' property='target.{ZBE:ResponsibleWard.OrganizationName}' action='set' />
<assign value='source.{AD3:AD306CodeUF}' property='target.{ZBE:ResponsibleWard.OrganizationIdentifier}' action='set' />
<assign value='"HMS"' property='target.{ZBE:NatureMouvement}' action='set' />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).ClinicomAdmissionModeEntree(source.{AD3:AD313ModeEntree})' property='target.{ZFM:ModeEntreePMSI}' action='set' />
<assign value='source.{AD3:AD314EtablissementOrigine.PropositionMTPMSI}' property='target.{ZFM:ModeprovenancePMSI}' action='set' />
<if condition='source.{AD:AD01Mode}="05"' >
<true>
<assign value='"5"' property='target.{ZFM:ModeprovenancePMSI}' action='set' />
</true>
</if>
<if condition='$L(source.{AD3:AD311CategorieSocioprofessio})' >
<true>
<assign value='source.{AD3:AD311CategorieSocioprofessio}' property='target.{ZFP:Activitesociopro}' action='set' />
</true>
</if>
<if condition='$L(source.{AD3:AD314EtablissementOrigine.CodeEtablissement})' >
<true>
<assign value='##class(ISSAS.Common.Tools.ClassODBC).ClinicomEtablissementExterieur(source.{AD3:AD314EtablissementOrigine.CodeEtablissement})' property='target.{ZFV:Etbprovenance.DischargeLocation}' action='set' />
</true>
</if>
<if condition='$L(source.{AD3:AD334DateHeureDecisionMedica})' >
<true>
<assign value='source.{AD3:AD334DateHeureDecisionMedica}' property='target.{EVN:EventOccurred}' action='set' />
<assign value='source.{AD3:AD334DateHeureDecisionMedica}' property='target.{ZBE:StartMovementDateTime}' action='set' />
</true>
</if>
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoTITAN25.DStoADT">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65541,34082.301223</TimeChanged>
<TimeCreated>65541,34078.069432</TimeCreated>
<DependsOn>EnsLib.HL7.Message</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>0</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='EnsLib.HL7.Message' sourceDocType='Clinicom:DS' targetDocType='HL7v25IHE:ADT_AXX' create='new' language='objectscript' >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[></code>
<assign value='$ZCVT(source.{MSH:MSH03SendingApplication},"U")' property='target.{MSH:SendingApplication}' action='set' />
<assign value='$ZCVT(source.{MSH:MSH04SendingFacility},"U")' property='target.{MSH:SendingFacility}' action='set' />
<assign value='$E(strNow, 1, 12)' property='target.{MSH:DateTimeOfMessage}' action='set' />
<assign value='"ADT"' property='target.{MSH:MessageType.MessageCode}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","DS"_source.GetValueAt("DS:DS01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[></code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","DS"_source.GetValueAt("DS:DS01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[></code>
<assign value='strGUID' property='target.{MSH:MessageControlID}' action='set' />
<assign value='"2.5"' property='target.{MSH:VersionID}' action='set' />
<assign value='"FRA"' property='target.{MSH:CountryCode}' action='set' />
<assign value='"8859/1"' property='target.{MSH:CharacterSet}' action='set' />
<assign value='"FR"' property='target.{MSH:PrincipalLanguageOfMessage}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","DS"_source.GetValueAt("DS:DS01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[></code>
<assign value='$E(strNow, 1, 12)' property='target.{EVN:RecordedDateTime}' action='set' />
<assign value='source.{DS:DS07DateHeureSortie}' property='target.{EVN:EventOccurred}' action='set' />
<assign value='source.{DS:DS28Utilisateur.Username}' property='target.{EVN:OperatorID.IDNumber}' action='set' />
<assign value='"1"' property='target.{PID:SetIDPID}' action='set' />
<assign value='source.{DS:DS05IPP}' property='target.{PID:PatientIdentifierList(1).IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PID:PatientIdentifierList(1).assigningauthority}' action='set' />
<assign value='"PI"' property='target.{PID:PatientIdentifierList(1).IdentifierTypeCode}' action='set' />
<assign value='source.{DS:DS19NomUsuel.Nom}' property='target.{PID:PatientName(1).FamilyName}' action='set' />
<assign value='source.{DS:DS20Prenom}' property='target.{PID:PatientName(1).givenname}' action='set' />
<assign value='"D"' property='target.{PID:PatientName(1).nametypecode}' action='set' />
<assign value='source.{DS:DS22NomDeNaissance.Nom}' property='target.{PID:PatientName(2).FamilyName}' action='set' />
<assign value='source.{DS:DS20Prenom}' property='target.{PID:PatientName(2).givenname}' action='set' />
<assign value='"L"' property='target.{PID:PatientName(2).nametypecode}' action='set' />
<if condition='$L(source.{DS:DS22NomDeNaissance.Nom})' >
<false>
<assign value='source.{DS:DS19NomUsuel.Nom}' property='target.{PID:PatientName(2).FamilyName}' action='set' />
</false>
</if>
<assign value='source.{DS:DS24DateDeNaissance}' property='target.{PID:DateTimeOfBirth}' action='set' />
<assign value='..Lookup("CCOM_HL7_Sexe",source.{DS:DS23Sexe})' property='target.{PID:AdministrativeSex}' action='set' />
<assign value='source.{DS:DS06NumeroEpisode}' property='target.{PID:PatientAccountNumber.IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PID:PatientAccountNumber.assigningauthority}' action='set' />
<if condition='##class(ISSAS.Common.Tools.ClassODBC).IsDeceased(source.{DS:DS05IPP})=1' >
<true>
<assign value='"Y"' property='target.{PID:PatientDeathIndicator}' action='set' />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).DeceaseDate(source.{DS:DS05IPP})' property='target.{PID:PatientDeathDateandTime.Time}' action='set' />
<assign value='"D"' property='target.{PID:PatientDeathDateandTime.DegreeofPrecision}' action='set' />
</true>
<false>
<assign value='"N"' property='target.{PID:PatientDeathIndicator}' action='set' />
</false>
</if>
<assign value='"1"' property='target.{PV1:SetIDPV1}' action='set' />
<if condition='source.{DS:DS26IndicateurEpisodeRecurre} = "1"' >
<true>
<assign value='"R"' property='target.{PV1:PatientClass}' action='set' />
</true>
<false>
<assign value='"I"' property='target.{PV1:PatientClass}' action='set' />
</false>
</if>
<assign value='source.{DS:DS06NumeroEpisode}' property='target.{PV1:VisitNumber.IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PV1:VisitNumber.assigningauthority}' action='set' />
<assign value='source.{DS:DS14CodeUS}' property='target.{PV1:AssignedPatientLocation.pointofcare}' action='set' />
<assign value='source.{DS:DS21Chambre}' property='target.{PV1:AssignedPatientLocation.room}' action='set' />
<assign value='source.{DS:DS02Hopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.Facility}' action='set' />
<assign value='source.{DS:DS10ModeSortie}' property='target.{PV1:DischargeDisposition}' action='set' />
<assign value='source.{DS:DS25MedecinResponsable.CodeClinicom}' property='target.{PV1:AttendingDoctor(1).IDnumber}' action='set' />
<assign value='source.{DS:DS25MedecinResponsable.Nom}' property='target.{PV1:AttendingDoctor(1).familyname}' action='set' />
<assign value='source.{DS:DS25MedecinResponsable.Prenom}' property='target.{PV1:AttendingDoctor(1).givenname}' action='set' />
<assign value='source.{DS:DS25MedecinResponsable.Qualite}' property='target.{PV1:AttendingDoctor(1).prefix}' action='set' />
<assign value='source.{DS:DS25MedecinResponsable.Titre}' property='target.{PV1:AttendingDoctor(1).degree}' action='set' />
<assign value='"EI"' property='target.{PV1:AttendingDoctor(1).IdentifierTypeCode}' action='set' />
<assign value='##class(ISSAS.Common.Tools.ClassDate).CvtFRToCCOM(##class(ISSAS.Common.Tools.ClassODBC).AdmDate(source.{DS:DS06NumeroEpisode}),2)' property='target.{PV1:AdmitDateTime}' action='set' />
<assign value='source.{DS:DS07DateHeureSortie}' property='target.{PV1:DischargeDateTime}' action='set' />
<assign value='"D"' property='target.{PV1:AccountStatus}' action='set' />
<assign value='source.{DS:DS27IdentifiantUniqueDeMouve}' property='target.{ZBE:MovementID}' action='set' />
<assign value='strAssigningAuthority' property='target.{ZBE:MovementID.NamespaceID}' action='set' />
<assign value='source.{DS:DS07DateHeureSortie}' property='target.{ZBE:StartMovementDateTime}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MovementAction",source.GetValueAt("DS:DS01Mode")),"ZBE:MovementAction","set","")]]]]><![CDATA[></code>
<if condition='source.{DS:DS01Mode} = "01"' >
<false>
<assign value='"A03"' property='target.{ZBE:Originaltriggereventcode}' action='set' />
</false>
</if>
<assign value='"N"' property='target.{ZBE:HistoricalMovementIndicator}' action='set' />
<assign value='source.{DS:DS13CodeUF}' property='target.{ZBE:ResponsibleWard.OrganizationName}' action='set' />
<assign value='source.{DS:DS13CodeUF}' property='target.{ZBE:ResponsibleWard.OrganizationIdentifier}' action='set' />
<assign value='"HMS"' property='target.{ZBE:NatureMouvement}' action='set' />
<assign value='##class(ISSAS.Common.Tools.ClassODBC).ClinicomSortieMode(source.{DS:DS10ModeSortie})' property='target.{ZFM:ModeSortiePMSI}' action='set' />
<assign value='source.{DS:DS09EtablissementDestination.PropositionMTPMSI}' property='target.{ZFM:ModeDestinationPMSI}' action='set' />
<assign value='source.{DS:DS10ModeSortie}' property='target.{ZFV:Modesortiepersonnalise}' action='set' />
<if condition='$L(source.{DS:DS09EtablissementDestination.CodeEtablissement})' >
<true>
<assign value='##class(ISSAS.Common.Tools.ClassODBC).ClinicomEtablissementExterieur(source.{DS:DS09EtablissementDestination.CodeEtablissement})' property='target.{PV1:DischargedtoLocation.DischargeLocation}' action='set' />
</true>
</if>
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoTITAN25.PBtoADT">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65541,61718.367281</TimeChanged>
<TimeCreated>65541,36901.072102</TimeCreated>
<DependsOn>EnsLib.HL7.Message</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>0</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='EnsLib.HL7.Message' sourceDocType='Clinicom:PB' targetDocType='HL7v25IHE:ADT_AXX' create='new' language='objectscript' >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16)
 Set nbtel=0
 Set nbadd=0 ]]]]><![CDATA[></code>
<assign value='$ZCVT(source.{MSH:MSH03SendingApplication},"U")' property='target.{MSH:SendingApplication}' action='set' />
<assign value='$ZCVT(source.{MSH:MSH04SendingFacility},"U")' property='target.{MSH:SendingFacility}' action='set' />
<assign value='$E(strNow, 1, 12)' property='target.{MSH:DateTimeOfMessage}' action='set' />
<assign value='"ADT"' property='target.{MSH:MessageType.MessageCode}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","PB"_source.GetValueAt("PB:PB01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[></code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","PB"_source.GetValueAt("PB:PB01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[></code>
<assign value='strGUID' property='target.{MSH:MessageControlID}' action='set' />
<assign value='"2.5"' property='target.{MSH:VersionID}' action='set' />
<assign value='"FRA"' property='target.{MSH:CountryCode}' action='set' />
<assign value='"8859/1"' property='target.{MSH:CharacterSet}' action='set' />
<assign value='"FR"' property='target.{MSH:PrincipalLanguageOfMessage}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","PB"_source.GetValueAt("PB:PB01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[></code>
<assign value='$E(strNow, 1, 12)' property='target.{EVN:RecordedDateTime}' action='set' />
<assign value='$E(strNow, 1, 12)' property='target.{EVN:EventOccurred}' action='set' />
<assign value='source.{PB2:PB218Utilisateur.Username}' property='target.{EVN:OperatorID.IDNumber}' action='set' />
<assign value='"1"' property='target.{PID:SetIDPID}' action='set' />
<assign value='source.{PB:PB03IPP}' property='target.{PID:PatientIdentifierList(1).IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PID:PatientIdentifierList(1).assigningauthority}' action='set' />
<assign value='"PI"' property='target.{PID:PatientIdentifierList(1).IdentifierTypeCode}' action='set' />
<if condition='$L(source.{PB2:PB220IdentifiantNational.Valeur})'  expanded='false' >
<true>
<assign value='source.{PB2:PB220IdentifiantNational.Valeur}' property='target.{PID:PatientIdentifierList(2).IDNumber}' action='set' />
<assign value='"1.2.250.1.213.1.4.2"' property='target.{PID:PatientIdentifierList(2).assigningauthority}' action='set' />
<assign value='"INS-C"' property='target.{PID:PatientIdentifierList(2).IdentifierTypeCode}' action='set' />
<assign value='"ASIP"' property='target.{PID:PatientIdentifierList(2).AssigningFacility}' action='set' />
<assign value='$E(source.{PB2:PB220IdentifiantNational.DateObtention},1,8)' property='target.{PID:PatientIdentifierList(2).EffectiveDate}' action='set' />
</true>
</if>
<assign value='source.{PB:PB04NomUsuel}' property='target.{PID:PatientName(1).FamilyName}' action='set' />
<assign value='"D"' property='target.{PID:PatientName(1).nametypecode}' action='set' />
<assign value='source.{PB:PB05Prenom}' property='target.{PID:PatientName(1).givenname}' action='set' />
<assign value='source.{PB2:PB213AutresPrenoms}' property='target.{PID:PatientName(1).SecondandFurtherGivenNamesor}' action='set' />
<assign value='source.{PB:PB06Qualite}' property='target.{PID:PatientName(1).prefix}' action='set' />
<assign value='source.{PB:PB07NomDeNaissance}' property='target.{PID:PatientName(2).FamilyName}' action='set' />
<assign value='"L"' property='target.{PID:PatientName(2).nametypecode}' action='set' />
<assign value='source.{PB:PB05Prenom}' property='target.{PID:PatientName(2).givenname}' action='set' />
<assign value='source.{PB:PB06Qualite}' property='target.{PID:PatientName(2).prefix}' action='set' />
<if condition='$L(source.{PB:PB07NomDeNaissance})'  expanded='false' >
<false>
<assign value='source.{PB:PB04NomUsuel}' property='target.{PID:PatientName(2).FamilyName}' action='set' />
</false>
</if>
<assign value='source.{PB:PB09DateDeNaissance}' property='target.{PID:DateTimeOfBirth}' action='set' />
<assign value='..Lookup("CCOM_HL7_Sexe",source.{PB:PB10Sexe})' property='target.{PID:AdministrativeSex}' action='set' />
<assign value='source.{PB:PB11NoRueAdresse}' property='target.{PID:PatientAddress($I(nbadd)).streetaddress}' action='set' />
<assign value='source.{PB:PB12CodePostalAdresse}' property='target.{PID:PatientAddress(nbadd).ziporpostalcode}' action='set' />
<assign value='source.{PB2:PB201LocaliteAdresse}' property='target.{PID:PatientAddress(nbadd).city}' action='set' />
<assign value='source.{PB2:PB206ComplementAdresse}' property='target.{PID:PatientAddress(nbadd).otherdesignation}' action='set' />
<assign value='source.{PB2:PB207PaysAdresse}' property='target.{PID:PatientAddress(nbadd).country}' action='set' />
<assign value='"H"' property='target.{PID:PatientAddress(nbadd).AddressType}' action='set' />
<if condition='$L(source.{PB2:PB202TelephoneDomicile})'  expanded='false' >
<true>
<assign value='source.{PB2:PB202TelephoneDomicile}' property='target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}' action='set' />
<assign value='"PRN"' property='target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}' action='set' />
<assign value='"PH"' property='target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}' action='set' />
<assign value='source.{PB2:PB202TelephoneDomicile}' property='target.{PID:PhoneNumberHome(nbtel).UnformattedTelephoneNumber}' action='set' />
</true>
</if>
<if condition='$L(source.{PB2:PB208TelephoneProfessionnel})'  expanded='false' >
<true>
<assign value='source.{PB2:PB208TelephoneProfessionnel}' property='target.{PID:PhoneNumberBusiness(1).TelephoneNumber}' action='set' />
<assign value='"WPN"' property='target.{PID:PhoneNumberBusiness(1).TelecommunicationUseCode}' action='set' />
<assign value='"PH"' property='target.{PID:PhoneNumberBusiness(1).TelecommunicationEquipmentTy}' action='set' />
<assign value='source.{PB2:PB208TelephoneProfessionnel}' property='target.{PID:PhoneNumberBusiness(1).UnformattedTelephoneNumber}' action='set' />
</true>
</if>
<if condition='$L(source.{PB2:PB217TelephonePortable})'  expanded='false' >
<true>
<assign value='source.{PB2:PB217TelephonePortable}' property='target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}' action='set' />
<assign value='"PRN"' property='target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}' action='set' />
<assign value='"CP"' property='target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}' action='set' />
<assign value='source.{PB2:PB217TelephonePortable}' property='target.{PID:PhoneNumberHome(nbtel).UnformattedTelephoneNumber}' action='set' />
</true>
</if>
<if condition='$L(source.{PB2:PB223Email})'  expanded='false' >
<true>
<assign value='source.{PB2:PB223Email}' property='target.{PID:PhoneNumberHome($I(nbtel)).TelephoneNumber}' action='set' />
<assign value='"NET"' property='target.{PID:PhoneNumberHome(nbtel).TelecommunicationUseCode}' action='set' />
<assign value='"Internet"' property='target.{PID:PhoneNumberHome(nbtel).TelecommunicationEquipmentTy}' action='set' />
<assign value='source.{PB2:PB223Email}' property='target.{PID:PhoneNumberHome(nbtel).EmailAddress}' action='set' />
</true>
</if>
<assign value='..Lookup("PAYS_INSEE_3166-1-alpha-3",source.{PB2:PB203Nationalite})' property='target.{PID:Nationality}' action='set' />
<assign value='source.{PB2:PB203Nationalite}' property='target.{PID:Citizenship(1)}' action='set' />
<assign value='..Lookup("CCOM_HL7_MaritalStatus",source.{PB2:PB210SituationFamiliale})' property='target.{PID:MaritalStatus.identifier}' action='set' />
<assign value='source.{PB2:PB209DateDeDeces}' property='target.{PID:PatientDeathDateandTime}' action='set' />
<if condition='$L(source.{PB2:PB209DateDeDeces})'  expanded='false' >
<true>
<assign value='"Y"' property='target.{PID:PatientDeathIndicator}' action='set' />
</true>
<false>
<assign value='"N"' property='target.{PID:PatientDeathIndicator}' action='set' />
</false>
</if>
<if condition='source.{PB2:PB215InformationsIdentite.IndicateurIdentiteProvisoire}="1"'  expanded='false' >
<true>
<assign value='"PROV"' property='target.{PID:IdentityReliabilityCode(1)}' action='set' />
<assign value='"Y"' property='target.{PID:IdentityUnknownIndicator}' action='set' />
</true>
</if>
<if condition='source.{PB2:PB215InformationsIdentite.IndicateurIdentiteValidee}="1"'  expanded='false' >
<true>
<assign value='"VALI"' property='target.{PID:IdentityReliabilityCode(1)}' action='set' />
<assign value='"N"' property='target.{PID:IdentityUnknownIndicator}' action='set' />
</true>
</if>
<if condition='$L(source.{PB2:PB212DernierNumeroEpisode})'  expanded='false' >
<true>
<assign value='source.{PB2:PB212DernierNumeroEpisode}' property='target.{PID:PatientAccountNumber.IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PID:PatientAccountNumber.assigningauthority}' action='set' />
</true>
</if>
<assign value='source.{PB2:PB221RangGemellaire}' property='target.{PID:BirthOrder}' action='set' />
<if condition='$L(source.{PB:PB08LocaliteDeNaissance}) || $L(source.{PB2:PB204PaysDeNaissance})'  expanded='false' >
<true>
<assign value='source.{PB2:PB205DepartementDeNaissance}' property='target.{PID:PatientAddress($I(nbadd)).ziporpostalcode}' action='set' />
<assign value='source.{PB:PB08LocaliteDeNaissance}' property='target.{PID:PatientAddress(nbadd).city}' action='set' />
<assign value='source.{PB2:PB204PaysDeNaissance}' property='target.{PID:PatientAddress(nbadd).country}' action='set' />
<assign value='"BDL"' property='target.{PID:PatientAddress(nbadd).AddressType}' action='set' />
</true>
</if>
<if condition='$L(source.{PB2:PB226AdresseProvisoire.Ville})'  expanded='false' >
<true>
<assign value='source.{PB2:PB226AdresseProvisoire.NumRue}' property='target.{PID:PatientAddress($I(nbadd)).streetaddress}' action='set' />
<assign value='source.{PB2:PB226AdresseProvisoire.CodePostal}' property='target.{PID:PatientAddress(nbadd).ziporpostalcode}' action='set' />
<assign value='source.{PB2:PB226AdresseProvisoire.Ville}' property='target.{PID:PatientAddress(nbadd).city}' action='set' />
<assign value='source.{PB2:PB226AdresseProvisoire.Pays}' property='target.{PID:PatientAddress(nbadd).country}' action='set' />
<assign value='"C"' property='target.{PID:PatientAddress(nbadd).AddressType}' action='set' />
</true>
</if>
<foreach property='source.{PB4()}' key='kPaP'  expanded='false' >
<code>
<![CDATA[ Set occTel=0 ]]]]><![CDATA[></code>
<assign value='kPaP' property='target.{NK1(kPaP):SetIDNK1}' action='set' />
<assign value='source.{PB4(kPaP):PB402NomUsuel}' property='target.{NK1(kPaP):Name(1).familyname}' action='set' />
<assign value='"D"' property='target.{NK1(kPaP):Name(1).nametypecode}' action='set' />
<assign value='source.{PB4(kPaP):PB403Prenom}' property='target.{NK1(kPaP):Name(1).givenname}' action='set' />
<assign value='source.{PB4(kPaP):PB416Civilite}' property='target.{NK1(kPaP):Name(1).Prefix}' action='set' />
<assign value='..Lookup("CCOM_HL7_RelationShip",source.{PB4(kPaP):PB404LienDeParente.Code},"UNK")' property='target.{NK1(kPaP):Relationship}' action='set' />
<assign value='source.{PB4(kPaP):PB405NoRue}' property='target.{NK1(kPaP):Address(1).streetaddress}' action='set' />
<assign value='source.{PB4(kPaP):PB406ComplementAdresse}' property='target.{NK1(kPaP):Address(1).otherdesignation}' action='set' />
<assign value='source.{PB4(kPaP):PB407Pays}' property='target.{NK1(kPaP):Address(1).country}' action='set' />
<assign value='source.{PB4(kPaP):PB408CodePostal}' property='target.{NK1(kPaP):Address(1).ziporpostalcode}' action='set' />
<assign value='source.{PB4(kPaP):PB409Localite}' property='target.{NK1(kPaP):Address(1).city}' action='set' />
<if condition='$L(source.{PB4(kPaP):PB410TelephoneDomicile})'  expanded='false' >
<true>
<assign value='source.{PB4(kPaP):PB410TelephoneDomicile}' property='target.{NK1(kPaP):PhoneNumber($I(occTel)).Telephonenumber}' action='set' />
<assign value='"PRN"' property='target.{NK1(kPaP):PhoneNumber(occTel).TelecommunicationUseCode}' action='set' />
<assign value='"PH"' property='target.{NK1(kPaP):PhoneNumber(occTel).TelecommunicationEquipmentTy}' action='set' />
<assign value='source.{PB4(kPaP):PB410TelephoneDomicile}' property='target.{NK1(kPaP):PhoneNumber(occTel).UnformattedTelephonenumber}' action='set' />
</true>
</if>
<if condition='$L(source.{PB4(kPaP):PB411TelephoneProfessionnel})'  expanded='false' >
<true>
<assign value='source.{PB4(kPaP):PB411TelephoneProfessionnel}' property='target.{NK1(kPaP):BusinessPhoneNumber(1).Telephonenumber}' action='set' />
<assign value='"WPN"' property='target.{NK1(kPaP):BusinessPhoneNumber(1).TelecommunicationUseCode}' action='set' />
<assign value='"PH"' property='target.{NK1(kPaP):BusinessPhoneNumber(1).TelecommunicationEquipmentTy}' action='set' />
<assign value='source.{PB4(kPaP):PB411TelephoneProfessionnel}' property='target.{NK1(kPaP):BusinessPhoneNumber(1).UnformattedTelephonenumber}' action='set' />
</true>
</if>
<if condition='$L(source.{PB4(kPaP):PB413TelephoneMobile})'  expanded='false' >
<true>
<assign value='source.{PB4(kPaP):PB413TelephoneMobile}' property='target.{NK1(kPaP):PhoneNumber($I(occTel)).Telephonenumber}' action='set' />
<assign value='"PRN"' property='target.{NK1(kPaP):PhoneNumber(occTel).TelecommunicationUseCode}' action='set' />
<assign value='"CP"' property='target.{NK1(kPaP):PhoneNumber(occTel).TelecommunicationEquipmentTy}' action='set' />
<assign value='source.{PB4(kPaP):PB413TelephoneMobile}' property='target.{NK1(kPaP):PhoneNumber(occTel).UnformattedTelephonenumber}' action='set' />
</true>
</if>
<assign value='"C"' property='target.{NK1(kPaP):ContactRole}' action='set' />
<assign value='source.{PB4(kPaP):PB414IdentifiantUnique}' property='target.{NK1(kPaP):NextofKinAssociatedPartysIde(1).IDNumber}' action='set' />
<assign value='"CLINICOM"' property='target.{NK1(kPaP):NextofKinAssociatedPartysIde(1).AssigningAuthority}' action='set' />
<assign value='"PN"' property='target.{NK1(kPaP):NextofKinAssociatedPartysIde(1).IdentifierTypeCode}' action='set' />
<assign value='source.{PB4(kPaP):PB415DateDeSuppression}' property='target.{NK1(kPaP):EndDate}' action='set' />
</foreach>
<foreach property='source.{PB5()}' key='kPSY'  expanded='false' >
<assign value='kPSY' property='target.{ZFS(kPSY):SetIDZFS}' action='set' />
<assign value='..Lookup("CCOM_HL7_MovementAction",source.{PB5(kPSY):PB502Action})' property='target.{ZFS(kPSY):Action}' action='set' />
<assign value='source.{PB5(kPSY):PB503IdentifiantUnique}' property='target.{ZFS(kPSY):Identifiant.EntityIdentifier}' action='set' />
<assign value='strAssigningAuthority' property='target.{ZFS(kPSY):Identifiant.NamespaceID}' action='set' />
<assign value='source.{PB5(kPSY):PB504DateHeureDeDebut}' property='target.{ZFS(kPSY):DateHeureDebutModeLegal.Time}' action='set' />
<assign value='source.{PB5(kPSY):PB505DateHeureDeFin}' property='target.{ZFS(kPSY):DateHeureFinModeLegal.Time}' action='set' />
<assign value='source.{PB5(kPSY):PB506ModeLegalDeSoin.Code}' property='target.{ZFS(kPSY):ModeLegal.Identifier}' action='set' />
<assign value='source.{PB5(kPSY):PB507Commentaire}' property='target.{ZFS(kPSY):Commentaires}' action='set' />
<assign value='source.{PB5(kPSY):PB508CodeRIMPDuModeLegal.Code}' property='target.{ZFS(kPSY):CodeRIMPPModeLegal.Identifier}' action='set' />
</foreach>
<assign value='"1"' property='target.{PV1:SetIDPV1}' action='set' />
<assign value='"N"' property='target.{PV1:PatientClass}' action='set' />
<if condition='$L(source.{PB2:PB225Profession.CategorieSocioProf})' >
<true>
<assign value='source.{PB2:PB225Profession.CategorieSocioProf}' property='target.{ZFP:Categoriesociopro}' action='set' />
</true>
</if>
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoTITAN25.RItoADT">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65541,57165.39263</TimeChanged>
<TimeCreated>65541,57160.191197</TimeCreated>
<DependsOn>EnsLib.HL7.Message</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>0</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='EnsLib.HL7.Message' sourceDocType='Clinicom:RI' targetDocType='HL7v25IHE:ADT_AXX' create='new' language='objectscript' >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[></code>
<assign value='$ZCVT(source.{MSH:MSH03SendingApplication},"U")' property='target.{MSH:SendingApplication}' action='set' />
<assign value='$ZCVT(source.{MSH:MSH04SendingFacility},"U")' property='target.{MSH:SendingFacility}' action='set' />
<assign value='$E(strNow, 1, 12)' property='target.{MSH:DateTimeOfMessage}' action='set' />
<assign value='"ADT"' property='target.{MSH:MessageType.MessageCode}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","RI"_source.GetValueAt("RI:RI01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[></code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","RI"_source.GetValueAt("RI:RI01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[></code>
<assign value='strGUID' property='target.{MSH:MessageControlID}' action='set' />
<assign value='"2.5"' property='target.{MSH:VersionID}' action='set' />
<assign value='"FRA"' property='target.{MSH:CountryCode}' action='set' />
<assign value='"8859/1"' property='target.{MSH:CharacterSet}' action='set' />
<assign value='"FR"' property='target.{MSH:PrincipalLanguageOfMessage}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","RI"_source.GetValueAt("RI:RI01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[></code>
<assign value='$E(strNow, 1, 12)' property='target.{EVN:RecordedDateTime}' action='set' />
<assign value='source.{RI:RI08DateHeureRetour}' property='target.{EVN:EventOccurred}' action='set' />
<assign value='"1"' property='target.{PID:SetIDPID}' action='set' />
<assign value='source.{RI:RI05IPP}' property='target.{PID:PatientIdentifierList(1).IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PID:PatientIdentifierList(1).assigningauthority}' action='set' />
<assign value='"PI"' property='target.{PID:PatientIdentifierList(1).IdentifierTypeCode}' action='set' />
<assign value='source.{RI:RI21NomUsuel.Nom}' property='target.{PID:PatientName(1).FamilyName}' action='set' />
<assign value='"D"' property='target.{PID:PatientName(1).nametypecode}' action='set' />
<assign value='source.{RI:RI22Prenom}' property='target.{PID:PatientName(1).givenname}' action='set' />
<assign value='source.{RI:RI23NomDeNaissance.Nom}' property='target.{PID:PatientName(2).FamilyName}' action='set' />
<assign value='"L"' property='target.{PID:PatientName(2).nametypecode}' action='set' />
<assign value='source.{RI:RI22Prenom}' property='target.{PID:PatientName(2).givenname}' action='set' />
<if condition='$L(source.{RI:RI23NomDeNaissance.Nom})' >
<false>
<assign value='source.{RI:RI21NomUsuel.Nom}' property='target.{PID:PatientName(2).FamilyName}' action='set' />
</false>
</if>
<assign value='source.{RI:RI25DateDeNaissance}' property='target.{PID:DateTimeOfBirth}' action='set' />
<assign value='..Lookup("CCOM_HL7_Sexe",source.{RI:RI24Sexe})' property='target.{PID:AdministrativeSex}' action='set' />
<assign value='source.{RI:RI06NumeroEpisode}' property='target.{PID:PatientAccountNumber.IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PID:PatientAccountNumber.assigningauthority}' action='set' />
<assign value='"1"' property='target.{PV1:SetIDPV1}' action='set' />
<assign value='"I"' property='target.{PV1:PatientClass}' action='set' />
<assign value='source.{RI:RI06NumeroEpisode}' property='target.{PV1:VisitNumber.IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PV1:VisitNumber.assigningauthority}' action='set' />
<assign value='source.{RI:RI09CodeUS}' property='target.{PV1:AssignedPatientLocation.pointofcare}' action='set' />
<assign value='source.{RI:RI13Chambre}' property='target.{PV1:AssignedPatientLocation.room}' action='set' />
<assign value='source.{RI:RI14Lit}' property='target.{PV1:AssignedPatientLocation.bed}' action='set' />
<assign value='source.{RI:RI11CodeMedecinResponsable}' property='target.{PV1:AttendingDoctor(1).IDnumber}' action='set' />
<assign value='"EI"' property='target.{PV1:AttendingDoctor(1).IdentifierTypeCode}' action='set' />
<assign value='source.{RI:RI12SupplementChambreSeule}' property='target.{PV1:CourtesyCode}' action='set' />
<assign value='source.{RI:RI26IdentifiantUniqueDeMouve}' property='target.{ZBE:MovementID}' action='set' />
<assign value='strAssigningAuthority' property='target.{ZBE:MovementID.NamespaceID}' action='set' />
<assign value='source.{RI:RI08DateHeureRetour}' property='target.{ZBE:StartMovementDateTime}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MovementAction",source.GetValueAt("RI:RI01Mode")),"ZBE:MovementAction","set","")]]]]><![CDATA[></code>
<if condition='(source.{RI:RI01Mode} = "02")||(source.{RI:RI01Mode} = "03") ' >
<true>
<assign value='"A22"' property='target.{ZBE:Originaltriggereventcode}' action='set' />
</true>
</if>
<if condition='source.{RI:RI20IndicateurDernierMouveme} = "1"' >
<true>
<assign value='"N"' property='target.{ZBE:HistoricalMovementIndicator}' action='set' />
</true>
<false>
<assign value='"Y"' property='target.{ZBE:HistoricalMovementIndicator}' action='set' />
</false>
</if>
<assign value='source.{RI:RI10CodeUF}' property='target.{ZBE:ResponsibleWard.OrganizationName}' action='set' />
<assign value='source.{RI:RI10CodeUF}' property='target.{ZBE:ResponsibleWard.OrganizationIdentifier}' action='set' />
<assign value='"HMS"' property='target.{ZBE:NatureMouvement}' action='set' />
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoTITAN25.SDtoADT">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65541,56891.723334</TimeChanged>
<TimeCreated>65541,56873.204561</TimeCreated>
<DependsOn>EnsLib.HL7.Message</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>0</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='EnsLib.HL7.Message' sourceDocType='Clinicom:SD' targetDocType='HL7v25IHE:ADT_AXX' create='new' language='objectscript' >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[></code>
<assign value='$ZCVT(source.{MSH:MSH03SendingApplication},"U")' property='target.{MSH:SendingApplication}' action='set' />
<assign value='$ZCVT(source.{MSH:MSH04SendingFacility},"U")' property='target.{MSH:SendingFacility}' action='set' />
<assign value='$E(strNow, 1, 12)' property='target.{MSH:DateTimeOfMessage}' action='set' />
<assign value='"ADT"' property='target.{MSH:MessageType.MessageCode}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","SD"_source.GetValueAt("SD:SD01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[></code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","SD"_source.GetValueAt("SD:SD01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[></code>
<assign value='strGUID' property='target.{MSH:MessageControlID}' action='set' />
<assign value='"2.5"' property='target.{MSH:VersionID}' action='set' />
<assign value='"FRA"' property='target.{MSH:CountryCode}' action='set' />
<assign value='"8859/1"' property='target.{MSH:CharacterSet}' action='set' />
<assign value='"FR"' property='target.{MSH:PrincipalLanguageOfMessage}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","SD"_source.GetValueAt("SD:SD01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[></code>
<assign value='$E(strNow, 1, 12)' property='target.{EVN:RecordedDateTime}' action='set' />
<assign value='source.{SD:SD07DateHeureDebutPermission}' property='target.{EVN:EventOccurred}' action='set' />
<assign value='"1"' property='target.{PID:SetIDPID}' action='set' />
<assign value='source.{SD:SD05IPP}' property='target.{PID:PatientIdentifierList(1).IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PID:PatientIdentifierList(1).assigningauthority}' action='set' />
<assign value='"PI"' property='target.{PID:PatientIdentifierList(1).IdentifierTypeCode}' action='set' />
<assign value='source.{SD:SD19NomUsuel.Nom}' property='target.{PID:PatientName(1).FamilyName}' action='set' />
<assign value='"D"' property='target.{PID:PatientName(1).nametypecode}' action='set' />
<assign value='source.{SD:SD20Prenom}' property='target.{PID:PatientName(1).givenname}' action='set' />
<assign value='source.{SD:SD21NomDeNaissance.Nom}' property='target.{PID:PatientName(2).FamilyName}' action='set' />
<assign value='"L"' property='target.{PID:PatientName(2).nametypecode}' action='set' />
<assign value='source.{SD:SD20Prenom}' property='target.{PID:PatientName(2).givenname}' action='set' />
<if condition='$L(source.{SD:SD21NomDeNaissance.Nom})' >
<false>
<assign value='source.{SD:SD19NomUsuel.Nom}' property='target.{PID:PatientName(2).FamilyName}' action='set' />
</false>
</if>
<assign value='source.{SD:SD23DateDeNaissance}' property='target.{PID:DateTimeOfBirth}' action='set' />
<assign value='..Lookup("CCOM_HL7_Sexe",source.{SD:SD22Sexe})' property='target.{PID:AdministrativeSex}' action='set' />
<assign value='source.{SD:SD06NumeroEpisode}' property='target.{PID:PatientAccountNumber.IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PID:PatientAccountNumber.assigningauthority}' action='set' />
<assign value='"1"' property='target.{PV1:SetIDPV1}' action='set' />
<assign value='"I"' property='target.{PV1:PatientClass}' action='set' />
<assign value='source.{SD:SD06NumeroEpisode}' property='target.{PV1:VisitNumber.IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PV1:VisitNumber.assigningauthority}' action='set' />
<assign value='source.{SD:SD12CodeUS}' property='target.{PV1:AssignedPatientLocation.pointofcare}' action='set' />
<assign value='source.{SD:SD15Chambre}' property='target.{PV1:AssignedPatientLocation.room}' action='set' />
<assign value='source.{SD:SD16Lit}' property='target.{PV1:AssignedPatientLocation.bed}' action='set' />
<assign value='source.{SD:SD17ModePermission}' property='target.{PV1:DischargeDisposition}' action='set' />
<if condition='..In(source.{SD:SD27TypeDepartLongSejour},"RES,RESR")' >
<true>
<assign value='"O"' property='target.{PV1:AssignedPatientLocation.LocationStatus}' action='set' />
</true>
</if>
<if condition='source.{SD:SD27TypeDepartLongSejour} = "PERM"' >
<true>
<assign value='"U"' property='target.{PV1:AssignedPatientLocation.LocationStatus}' action='set' />
</true>
</if>
<assign value='source.{SD:SD08DateHeurePrevueRetour}' property='target.{PV2:ExpectedLOAReturnDateTime}' action='set' />
<assign value='source.{SD:SD24IdentifiantUniqueDeMouve}' property='target.{ZBE:MovementID}' action='set' />
<assign value='strAssigningAuthority' property='target.{ZBE:MovementID.NamespaceID}' action='set' />
<assign value='source.{SD:SD07DateHeureDebutPermission}' property='target.{ZBE:StartMovementDateTime}' action='set' />
<assign value='source.{SD:SD08DateHeurePrevueRetour}' property='target.{ZBE:EndMovementDateTime}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MovementAction",source.GetValueAt("SD:SD01Mode")),"ZBE:MovementAction","set","")]]]]><![CDATA[></code>
<if condition='(source.{SD:SD01Mode} = "02")||(source.{SD:SD01Mode} = "03") ' >
<true>
<assign value='"A21"' property='target.{ZBE:Originaltriggereventcode}' action='set' />
</true>
</if>
<if condition='source.{SD:SD18IndicateurDernierMouveme} = "1"' >
<true>
<assign value='"N"' property='target.{ZBE:HistoricalMovementIndicator}' action='set' />
</true>
<false>
<assign value='"Y"' property='target.{ZBE:HistoricalMovementIndicator}' action='set' />
</false>
</if>
<assign value='source.{SD:SD11CodeUF}' property='target.{ZBE:ResponsibleWard.OrganizationName}' action='set' />
<assign value='source.{SD:SD11CodeUF}' property='target.{ZBE:ResponsibleWard.OrganizationIdentifier}' action='set' />
<assign value='"HMS"' property='target.{ZBE:NatureMouvement}' action='set' />
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.CCOMtoTITAN25.TRtoADT">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65541,34266.212305</TimeChanged>
<TimeCreated>65541,34248.800909</TimeCreated>
<DependsOn>EnsLib.HL7.Message</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>0</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='EnsLib.HL7.Message' sourceDocType='Clinicom:TR' targetDocType='HL7v25IHE:ADT_AXX' create='new' language='objectscript' >
<code>
<![CDATA[ Set strAssigningAuthority = $G(^ISSAS.Config("DTL", "AssigningAuthority", "2.5"))
 If (' $L(strAssigningAuthority)) { Set strAssigningAuthority = "CLINICOM" }
 Set target.Separators = "|^~\&"
 Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)_"."_$PIECE($ZTS,".",2)
 Set strGUID = ##class(%SYSTEM.Util).CreateGUID()
 Set strGUID = $REPLACE(strGUID, "{", "")
 Set strGUID = $REPLACE(strGUID, "}", "")
 Set strGUID = $REPLACE(strGUID, "-", "")
 Set strGUID = $REPLACE(strGUID, "|", "")
 Set strGUID = $EXTRACT(strGUID, 1, 16) ]]]]><![CDATA[></code>
<assign value='$ZCVT(source.{MSH:MSH03SendingApplication},"U")' property='target.{MSH:SendingApplication}' action='set' />
<assign value='$ZCVT(source.{MSH:MSH04SendingFacility},"U")' property='target.{MSH:SendingFacility}' action='set' />
<assign value='$E(strNow, 1, 12)' property='target.{MSH:DateTimeOfMessage}' action='set' />
<assign value='"ADT"' property='target.{MSH:MessageType.MessageCode}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","TR"_source.GetValueAt("TR:TR01Mode")),"MSH:MessageType.TriggerEvent","set","")]]]]><![CDATA[></code>
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageStruct_v25","TR"_source.GetValueAt("TR:TR01Mode")),"MSH:MessageType.MessageStructure","set","")]]]]><![CDATA[></code>
<assign value='strGUID' property='target.{MSH:MessageControlID}' action='set' />
<assign value='"2.5"' property='target.{MSH:VersionID}' action='set' />
<assign value='"FRA"' property='target.{MSH:CountryCode}' action='set' />
<assign value='"8859/1"' property='target.{MSH:CharacterSet}' action='set' />
<assign value='"FR"' property='target.{MSH:PrincipalLanguageOfMessage}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MessageType_v25","TR"_source.GetValueAt("TR:TR01Mode")),"EVN:EventTypeCode","set","")]]]]><![CDATA[></code>
<assign value='$E(strNow, 1, 12)' property='target.{EVN:RecordedDateTime}' action='set' />
<assign value='source.{TR:TR07DateHeureMutation}' property='target.{EVN:EventOccurred}' action='set' />
<assign value='"1"' property='target.{PID:SetIDPID}' action='set' />
<assign value='source.{TR:TR05IPP}' property='target.{PID:PatientIdentifierList(1).IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PID:PatientIdentifierList(1).assigningauthority}' action='set' />
<assign value='"PI"' property='target.{PID:PatientIdentifierList(1).IdentifierTypeCode}' action='set' />
<assign value='source.{TR:TR27NomUsuel.Nom}' property='target.{PID:PatientName(1).FamilyName}' action='set' />
<assign value='source.{TR:TR28Prenom}' property='target.{PID:PatientName(1).givenname}' action='set' />
<assign value='"D"' property='target.{PID:PatientName(1).nametypecode}' action='set' />
<assign value='source.{TR:TR29NomDeNaissance.Nom}' property='target.{PID:PatientName(2).FamilyName}' action='set' />
<assign value='source.{TR:TR28Prenom}' property='target.{PID:PatientName(2).givenname}' action='set' />
<assign value='"L"' property='target.{PID:PatientName(2).nametypecode}' action='set' />
<if condition='$L(source.{TR:TR29NomDeNaissance.Nom})' >
<false>
<assign value='source.{TR:TR27NomUsuel.Nom}' property='target.{PID:PatientName(2).FamilyName}' action='set' />
</false>
</if>
<assign value='source.{TR:TR31DateDeNaissance}' property='target.{PID:DateTimeOfBirth}' action='set' />
<assign value='..Lookup("CCOM_HL7_Sexe",source.{TR:TR30Sexe})' property='target.{PID:AdministrativeSex}' action='set' />
<assign value='source.{TR:TR06NumeroEpisode}' property='target.{PID:PatientAccountNumber.IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PID:PatientAccountNumber.assigningauthority}' action='set' />
<assign value='"1"' property='target.{PV1:SetIDPV1}' action='set' />
<assign value='"I"' property='target.{PV1:PatientClass}' action='set' />
<assign value='source.{TR:TR06NumeroEpisode}' property='target.{PV1:VisitNumber.IDNumber}' action='set' />
<assign value='strAssigningAuthority' property='target.{PV1:VisitNumber.assigningauthority}' action='set' />
<assign value='source.{TR:TR09CodeUS}' property='target.{PV1:AssignedPatientLocation.pointofcare}' action='set' />
<assign value='source.{TR:TR10Chambre}' property='target.{PV1:AssignedPatientLocation.room}' action='set' />
<assign value='source.{TR:TR14Lit}' property='target.{PV1:AssignedPatientLocation.bed}' action='set' />
<assign value='source.{TR:TR02CodeHopital.CodeEtablissement}' property='target.{PV1:AssignedPatientLocation.facility}' action='set' />
<assign value='source.{TR:TR15MedecinResponsable.CodeClinicom}' property='target.{PV1:AttendingDoctor(1).IDnumber}' action='set' />
<assign value='source.{TR:TR15MedecinResponsable.Nom}' property='target.{PV1:AttendingDoctor(1).familyname}' action='set' />
<assign value='source.{TR:TR15MedecinResponsable.Prenom}' property='target.{PV1:AttendingDoctor(1).givenname}' action='set' />
<assign value='source.{TR:TR15MedecinResponsable.Qualite}' property='target.{PV1:AttendingDoctor(1).prefix}' action='set' />
<assign value='source.{TR:TR15MedecinResponsable.Titre}' property='target.{PV1:AttendingDoctor(1).degree}' action='set' />
<assign value='source.{TR:TR23CodeUSPrecedente}' property='target.{PV1:PriorPatientLocation.PointofCare}' action='set' />
<assign value='source.{TR:TR33ChambrePrecedente}' property='target.{PV1:PriorPatientLocation.Room}' action='set' />
<assign value='"EI"' property='target.{PV1:AttendingDoctor(1).IdentifierTypeCode}' action='set' />
<assign value='source.{TR:TR12SupplementChambre}' property='target.{PV1:CourtesyCode}' action='set' />
<if condition='..In(source.{TR:TR37ConfidentialiteMedicale},"1,2")' >
<true>
<assign value='"Y"' property='target.{PV2:VisitProtectionIndicator}' action='set' />
</true>
<false>
<assign value='"N"' property='target.{PV2:VisitProtectionIndicator}' action='set' />
</false>
</if>
<assign value='source.{TR:TR34IdentifiantUniqueDeMouve}' property='target.{ZBE:MovementID}' action='set' />
<assign value='strAssigningAuthority' property='target.{ZBE:MovementID.NamespaceID}' action='set' />
<assign value='source.{TR:TR07DateHeureMutation}' property='target.{ZBE:StartMovementDateTime}' action='set' />
<code>
<![CDATA[ Set tSC1=target.SetValueAt(..Lookup("CCOM_HL7_MovementAction",source.GetValueAt("TR:TR01Mode")),"ZBE:MovementAction","set","")]]]]><![CDATA[></code>
<if condition='(source.{TR:TR01Mode} = "02")||(source.{TR:TR01Mode} = "03") ' >
<true>
<assign value='"A02"' property='target.{ZBE:Originaltriggereventcode}' action='set' />
</true>
</if>
<if condition='source.{TR:TR26IndicateurDernierMouveme} = "1"' >
<true>
<assign value='"N"' property='target.{ZBE:HistoricalMovementIndicator}' action='set' />
</true>
<false>
<assign value='"Y"' property='target.{ZBE:HistoricalMovementIndicator}' action='set' />
</false>
</if>
<assign value='source.{TR:TR13CodeUF}' property='target.{ZBE:ResponsibleWard.OrganizationName}' action='set' />
<assign value='source.{TR:TR13CodeUF}' property='target.{ZBE:ResponsibleWard.OrganizationIdentifier}' action='set' />
<assign value='"HMS"' property='target.{ZBE:NatureMouvement}' action='set' />
<if condition='source.{TR:TR01Mode} = "03"' >
<true>
<assign value='source.{TR:TR21CodeUFPrecedente}' property='target.{ZBE:ResponsibleWard.OrganizationName}' action='set' />
<assign value='source.{TR:TR21CodeUFPrecedente}' property='target.{ZBE:ResponsibleWard.OrganizationIdentifier}' action='set' />
<assign value='source.{TR:TR23CodeUSPrecedente}' property='target.{PV1:AssignedPatientLocation.pointofcare}' action='set' />
<assign value='source.{TR:TR33ChambrePrecedente}' property='target.{PV1:AssignedPatientLocation.room}' action='set' />
<assign value='""' property='target.{PV1:AssignedPatientLocation.bed}' action='set' />
</true>
</if>
</transform>
]]></Data>
</XData>
</Class>










<Class name="ISSAS.Common.DTL.Doctolib.SIU14toDLSIU14">
<ClassType/>
<IncludeCode>Constantes</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65045,53907</TimeChanged>
<TimeCreated>65000,57646.160246</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/MAIN/cls/ISSAS/Common/DTL/Doctolib/SIU14toDLSIU14.xml#1 $</Default>
</Parameter>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="2.5.1:SIU_S12" targetClass="EnsLib.HL7.Message" targetDocType="2.5.1:SIU_S12" create="new" language="objectscript" >
<if condition='+##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "TraceTransformations", $$$FALSE)'>
<true>
<trace value='"Dans " _ $ClassName() _ ", MsgId=" _ source.%Id()'/>
</true>
</if>
<assign value='$TRANSLATE(##class(%SYSTEM.Util).CreateGUID(), "{}-|", "")' property="strGUID" action="set" />
<assign value='source' property="target" action="set" />
<assign value="strGUID" property="target.{MSH:MessageControlID}" action="set" />

<if condition='+##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "TraceTransformations", $$$FALSE)'>
<true>
<code>
<![CDATA[
	set strBuffer = "En sortie de " _ ..%ClassName() _ $char(13, 10)
	For I=1:1:target.SegCount
	{ set strBuffer = strBuffer _ target.GetValueAt(I) _ $char(13, 10) }
	$$$TRACE(strBuffer)
]]]]><![CDATA[>
</code>
</true>
</if>

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.Doctolib.SIUtoSRM">
<IncludeCode>Constantes</IncludeCode>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65276,57745</TimeChanged>
<TimeCreated>63455,36394.658273</TimeCreated>
<DependsOn>EnsLib.HL7.Message</DependsOn>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/MAIN/cls/ISSAS/Common/DTL/Doctolib/SIUtoSRM.xml#8 $</Default>
</Parameter>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='EnsLib.HL7.Message' sourceDocType='2.5.1:SIU_S12' targetDocType='2.4:SRM_S01' create='new' language='objectscript' >
<if condition='+##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "TraceTransformations", $$$FALSE)'>
<true>
<trace value='"Dans " _ $ClassName() _ ", MsgId=" _ source.%Id()'/>
</true>
</if>
<assign value='##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "RessourceSeparator", "-")' property='RessourceSeparator' action='set' />
<assign value='##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "FormatRessources", "UF_RESSOURCE")' property='FormatRessources' action='set' />

<if condition='FormatRessources = "UF_US_RESSOURCE"'>
<true>
<assign value='source.{RGSgrp(1).AILgrp(1).AIL:LocationResourceID(1).PointofCare}' property='PointofCare' action='set' />
<assign value='$PIECE(PointofCare, RessourceSeparator, 1)' property='UF' action='set' />
<assign value='$PIECE(PointofCare, RessourceSeparator, 2)' property='UC' action='set' />
<assign value='$PIECE(PointofCare, RessourceSeparator, 3)' property='Ressource' action='set' />
<assign value='""' property='CodeAgenda01' action='set' />
</true>
</if>
<if condition='FormatRessources = "UF_RESSOURCE"'>
<true>
<assign value='source.{RGSgrp(1).AILgrp(1).AIL:LocationResourceID(1).PointofCare}' property='PointofCare' action='set' />
<assign value='$PIECE(PointofCare, RessourceSeparator, 1)' property='UF' action='set' />
<assign value='""' property='UC' action='set' />
<assign value='$PIECE(PointofCare, RessourceSeparator, 2)' property='Ressource' action='set' />
<assign value='""' property='CodeAgenda01' action='set' />
</true>
</if>
<if condition='(FormatRessources = "UF_US_RESSOURCE_OTHERAGD") || (FormatRessources = "UF_US_RESSOURCE_OTHERAGD_SCH_AIG")'>
<true>
<assign value='source.{RGSgrp(1).AIGgrp(1).AIG:ResourceType.Text}' property='ResourceType' action='set' />
<assign value='$PIECE(ResourceType, RessourceSeparator, 1)' property='UF' action='set' />
<assign value='$PIECE(ResourceType, RessourceSeparator, 2)' property='UC' action='set' />
<assign value='$PIECE(ResourceType, RessourceSeparator, 3)' property='Ressource' action='set' />
<assign value='$PIECE(ResourceType, RessourceSeparator, 4)' property='CodeAgenda01' action='set' />
</true>
</if>

<assign value='source.{MSH}' property='target.{MSH}' action='set' />
<if condition='source.{MSH:MessageType.TriggerEvent}="S12"' >
<true>
<assign value='"SRM^S01"' property='target.{MSH:MessageType}' action='set' />
</true>
<false>
<assign value='"SRM^S04"' property='target.{MSH:MessageType}' action='set' />
</false>
</if>
<assign value='"8859/1"' property='target.{MSH:CharacterSet}' action='set' />
<assign value='source.{SCH:FillerAppointmentID.NamespaceID}' property='target.{ARQ:PlacerAppointmentID}' action='set' />
<assign value='"TRAKCARE"' property='target.{MSH:ReceivingApplication}' action='set' />
<assign value='"ISC"' property='target.{MSH:ReceivingFacility}' action='set' />
<assign value='source.{SCH:FillerAppointmentID.EntityIdentifier}' property='target.{ARQ:ScheduleID}' action='set' />
<assign value='source.{SCH:AppointmentTimingQuantity(1).Duration}' property='target.{ARQ:AppointmentDuration}' action='set' />
<assign value='source.{SCH:AppointmentTimingQuantity(1).StartDateTime}' property='target.{ARQ:RequestedStartDateTimeRange(1).rangestartdatetime}' action='set' />
<assign value='source.{NTE()}' property='target.{NTE()}' action='set' />
<assign value='source.{PIDgrp(1).PID}' property='target.{PIDgrp(1).PID}' action='set' />
<assign value='source.{PIDgrp(1).PV1}' property='target.{PIDgrp(1).PV1}' action='set' />
<assign value='source.{RGSgrp(1).RGS}' property='target.{RGSgrp(1).RGS}' action='set' />

<assign value='UF' property='target.{RGSgrp(1).AILgrp(1).AIL:LocationGroup}' action='set' />
<assign value='Ressource' property='target.{RGSgrp(1).AILgrp(1).AIL:LocationTypeAIL}' action='set' />
<assign value='source.{SCH:EventReason.Identifier}' property='target.{RGSgrp(1).AISgrp(1).AIS:UniversalServiceIdentifier}' action='set' />
<assign value='source.{RGSgrp(1).AILgrp(1).AIL:LocationResourceID(1).Room}' property='target.{RGSgrp(1).AILgrp(1).AIL:LocationResourceID(1).Room}' action='set' />

<code>
<![CDATA[
	// Formatte le PID (casse du nom, ...) à partir des paramètres de WSClinicomSyncOut (ISSAS.Common.BO.WS.ClinicomSyncOperation.CLS)
	SET tSC1 = ##class(ISSAS.Common.DTL.Doctolib.DoctolibUtils).FormatPID(.target)
	Set:($$$ISERR(tSC1)) tSCTrans = tSC1
]]]]><![CDATA[>
</code>


<if condition='+##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "TraceTransformations", $$$FALSE)'>
<true>
<code>
<![CDATA[
	set strBuffer = "En sortie de " _ ..%ClassName() _ $char(13, 10)
	For I=1:1:target.SegCount
	{ set strBuffer = strBuffer _ target.GetValueAt(I) _ $char(13, 10) }
	$$$TRACE(strBuffer)
]]]]><![CDATA[>
</code>
</true>
</if>
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.Doctolib.SIUtoSRMUPD1">
<IncludeCode>Constantes</IncludeCode>
<Super>ISSAS.Common.DTL.Doctolib.SIUtoSRM</Super>
<TimeChanged>65045,53941</TimeChanged>
<TimeCreated>63455,36394.658273</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/MAIN/cls/ISSAS/Common/DTL/Doctolib/SIUtoSRMUPD1.xml#2 $</Default>
</Parameter>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='EnsLib.HL7.Message' sourceDocType='2.5.1:SIU_S12' targetDocType='2.4:SRM_S01' create='new' language='objectscript' >
<if condition='+##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "TraceTransformations", $$$FALSE)'>
<true>
<trace value='"Dans " _ $ClassName() _ ", MsgId=" _ source.%Id()'/>
</true>
</if>

<code>
<![CDATA[
	Set tSC = ##super(source, .target, $GET(aux))
	Quit:($$$ISERR(tSC))
]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value='"SRM^S04"' property='target.{MSH:MessageType}' action='set' />

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.Doctolib.SIUtoSRMUPD2">
<IncludeCode>Constantes</IncludeCode>
<Super>ISSAS.Common.DTL.Doctolib.SIUtoSRM</Super>
<TimeChanged>65045,53941</TimeChanged>
<TimeCreated>63455,36394.658273</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/MAIN/cls/ISSAS/Common/DTL/Doctolib/SIUtoSRMUPD2.xml#2 $</Default>
</Parameter>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='EnsLib.HL7.Message' sourceDocType='2.5.1:SIU_S12' targetDocType='2.4:SRM_S01' create='new' language='objectscript' >
<if condition='+##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "TraceTransformations", $$$FALSE)'>
<true>
<trace value='"Dans " _ $ClassName() _ ", MsgId=" _ source.%Id()'/>
</true>
</if>

<code>
<![CDATA[
	Set tSC = ##super(source, .target, $Get(aux))
	quit:($$$ISERR(tSC))
]]]]><![CDATA[>
</code>

<!-- segment MSH -->
<assign value='"SRM^S01"' property='target.{MSH:MessageType}' action='set' />

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.Doctolib.TCSIUtoCCOMSIU">
<IncludeCode>Constantes,%sySite</IncludeCode>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65182,42625</TimeChanged>
<TimeCreated>64972,70355.214146</TimeCreated>
<DependsOn>EnsLib.HL7.Message,ISSAS.Common.Message.ClinicomHL7</DependsOn>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/MAIN/cls/ISSAS/Common/DTL/Doctolib/TCSIUtoCCOMSIU.xml#4 $</Default>
</Parameter>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='ISSAS.Common.Message.ClinicomHL7' sourceDocType='TrakCare:SIU_S12' targetDocType='ClinicomReceiver:SIU' create='new' language='objectscript' >
<if condition='+##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "TraceTransformations", $$$FALSE)'>
<true>
<trace value='"Dans " _ $ClassName() _ ", MsgId=" _ source.%Id()'/>
<code>
<![CDATA[
	set strBuffer = "En entrée de " _ $$$CURRENTMETHOD _ $char(13, 10)
	For I=1:1:source.SegCount
	{ set strBuffer = strBuffer _ source.GetValueAt(I) _ $char(13, 10) }
	$$$TRACE(strBuffer)
]]]]><![CDATA[>
</code>
</true>
</if>

<assign value='##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "RessourceSeparator", "-")' property='RessourceSeparator' action='set' />
<assign value='##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "FormatRessources", "UF_RESSOURCE")' property='FormatRessources' action='set' />
<assign value='source.{RGSgrp(1).AILgrp(1).AIL:LocationResourceID(1).PointofCare}' property='PointofCare' action='set' />

<if condition='FormatRessources = "UF_US_RESSOURCE"'>
<true>
<assign value='$PIECE(PointofCare, RessourceSeparator, 1)' property='UF' action='set' />
<assign value='$PIECE(PointofCare, RessourceSeparator, 2)' property='UC' action='set' />
<assign value='$PIECE(PointofCare, RessourceSeparator, 3)' property='Ressource' action='set' />
<assign value='""' property='CodeAgenda01' action='set' />
</true>
</if>
<if condition='FormatRessources = "UF_RESSOURCE"'>
<true>
<assign value='""' property='UF' action='set' />
<assign value='$PIECE(PointofCare, RessourceSeparator, 1)' property='UC' action='set' />
<assign value='$PIECE(PointofCare, RessourceSeparator, 2)' property='Ressource' action='set' />
<assign value='""' property='CodeAgenda01' action='set' />
</true>
</if>
<if condition='(FormatRessources = "UF_US_RESSOURCE_OTHERAGD") || (FormatRessources = "UF_US_RESSOURCE_OTHERAGD_SCH_AIG")'>
<true>
<assign value='$PIECE(PointofCare, RessourceSeparator, 1)' property='UF' action='set' />
<assign value='$PIECE(PointofCare, RessourceSeparator, 2)' property='UC' action='set' />
<assign value='$PIECE(PointofCare, RessourceSeparator, 3)' property='Ressource' action='set' />
<assign value='$PIECE(PointofCare, RessourceSeparator, 4)' property='CodeAgenda01' action='set' />
</true>
</if>

<!-- entête -->
<assign value='source.{MSH}' property='target.{MSH}' action='set' />
<assign value='"SIU"' property='target.{MSH:MSH09MessageType}' action='set' />

<!-- segment SIU : code action -->
<if condition='source.{MSH:MessageType.triggerevent}="S12"'>
<true>
<assign value='"01"' property='target.{SIU:SIU01CodeAction}' action='set' />
</true>
</if>
<if condition='",S13,S14," [ ("," _ source.{MSH:MessageType.triggerevent} _ ",")'>
<true>
<assign value='"02"' property='target.{SIU:SIU01CodeAction}' action='set' />
</true>
</if>
<if condition='",S15,S17," [ ("," _ source.{MSH:MessageType.triggerevent} _ ",")'>
<true>
<assign value='"03"' property='target.{SIU:SIU01CodeAction}' action='set' />
</true>
</if>

<!-- segment SIU : other fields -->
<assign value='"Docotlib"' property='target.{SIU:SIU02IdentifiantModuleProduc}' action='set' />
<assign value='$REPLACE(source.{SCH:FillerAppointmentID}, "\", ".")' property='target.{SIU:SIU03IdentifiantUniqueRDV}' action='set' />
<assign value='"P"' property='target.{SIU:SIU04TypeEntiteAttendue}' action='set' />
<if condition='",2.5:SIU_S12,2.5.1:SIU_S12," [ ("," _ source.DocType _ ",")' >
<true>
<assign value='source.{PIDgrp(1).PID:PatientIdentifierList(1).IDNumber}' property='target.{SIU:SIU05IPP}' action='set' />
</true>
<false>
<assign value='source.{PIDgrp(1).PID:PatientIdentifierList(1).ID}' property='target.{SIU:SIU05IPP}' action='set' />
</false>
</if>
<assign value='source.{SCH:AppointmentTimingQuantity(1).startdatetime}' property='DateHeureDebutRDV' action='set' />
<code>
<![CDATA[
	// On vérifie que l'heure de début n'est pas 0000
	IF $EXTRACT(DateHeureDebutRDV, 9, 12) = "0000"
	{
		SET $EXTRACT(DateHeureDebutRDV, 12, 12) = "1" // => 0001
	}
]]]]><![CDATA[>
</code>
<assign value='$EXTRACT(DateHeureDebutRDV, 1, 12)' property='target.{SIU:SIU07DateHeureDebutRDV}' action='set' />
<assign value='source.{SCH:AppointmentTimingQuantity(1).AppointmentDuration}' property='DureeRDV' action='set' />

<code>
<![CDATA[
	SET DateODBC = $ZDATEH($EXTRACT(DateHeureDebutRDV, 1, 8), 8) _ "," _ $ZTIMEH($EXTRACT(DateHeureDebutRDV, 9, 10) _ ":" _ $EXTRACT(DateHeureDebutRDV, 11, 12) _ ":00", 1)
	SET DateODBC = $ZDATETIME(DateODBC, 3, 1) // Conversion en ODBC
	SET DateODBC = $ZDATETIMEH($SYSTEM.SQL.DATEADD("mi", 15, DateODBC), 3, 1)
	SET DateHeureFinRDV = $ZDATETIME(DateODBC, 3, 2) // Conversion en YYYMMDDHHmm
	SET DateHeureFinRDV = $TRANSLATE(DateHeureFinRDV, "-: ", "")
]]]]><![CDATA[>
</code>
<assign value='DateHeureFinRDV' property='target.{SIU:SIU08DateHeureFinRDV}' action='set' />

<!-- *****************  -->
<assign property="TCSIUtoCCOMSIURessourcesLut" value='##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "TCSIUtoCCOMSIURessourcesLut", "")' action="set" />
<if condition='TCSIUtoCCOMSIURessourcesLut = ""' >
<true>
<assign property="tSC1" value='$$$ERROR($$$GeneralError, "Le nom du LUT n&apos;est pas renseignée dans " _ $CLASSNAME())' action="set"/>
</true>
<false>

<!-- code agenda -->
<trace value='"Ressource Doctolib=" _ Ressource'/>
<assign value='..Lookup(TCSIUtoCCOMSIURessourcesLut, Ressource)' property='CodeRessource' action='set' />
<if condition='CodeRessource = ""'>
<true>
<assign property="Erreur" value='"La valeur dans " _ TCSIUtoCCOMSIURessourcesLut _ ".LUT n&apos;est pas renseignée pour la ressource """ _ Ressource _ """ dans " _ $CLASSNAME() _ " -1-"' action="set"/>
<assign property="(tSC, tSCTrans)" value='$$$ERROR($$$GeneralError, Erreur)' action="set"/>
<assign property="TargetEMails" value='##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "TargetEMails", "")' action="set" />
<if condition='TargetEMails &apos;= ""'>
<true>
<assign property="Erreur" value='$$$FormatText("%1 (SessionId=%2)", Erreur, %Ensemble("%Process").%SessionId)' action="set"/>
<assign property="bidon" value='##class(ISSAS.Common.Tools.ClassTools).SendMail("Valeur Ressource absente dans " _ TCSIUtoCCOMSIURessourcesLut, TargetEMails, Erreur)' action="set"/>
</true>
</if>
<assign property="bidon" value='##class(%Monitor.Alert).External("SNMP", $EXTRACT("BPLDoctolib " _ $CLASSNAME(), 20), 3, Erreur)' action="set"/>
<if condition="$$$ISWINDOWS">
<true>
<assign property="bidon" value='##class(%Monitor.Alert).External("WMI", $EXTRACT("BPLDoctolib " _ $CLASSNAME(), 20), 3, Erreur)' action="set"/>
</true>
</if>
</true>
<false>
<trace value='"Code Ressource Clinicom=" _ CodeRessource'/>
<assign value='CodeRessource' property='target.{SIU:SIU12CodeRessource}' action='set' />
</false>
</if>
</false>
</if>
<!-- *****************  -->

<assign value='source.{RGSgrp(1).AISgrp(1).AIS:UniversalServiceIdentifier.identifierST}' property='target.{SIU:SIU10PrestationAgenda}' action='set' />
<assign value='"0"' property='target.{SIU:SIU11TypeRessource}' action='set' />
<if condition='",2.5:SIU_S12,2.5.1:SIU_S12," [ ("," _ source.DocType _ ",")' >
<true>
<assign value='source.{SCH:EnteredByPerson(1).IDnumber}' property='target.{SIU:SIU16CodeUtilisateur}' action='set' />
</true>
<false>
<assign value='source.{SCH:EnteredByPerson(1).IDnumberST}' property='target.{SIU:SIU16CodeUtilisateur}' action='set' />
</false>
</if>

<!-- segment SIU : RDV status -->
<assign value='..Lookup("Doctolib_CCOM_StatutRDV",source.{SCH:FillerStatusCode.Identifier})' property='target.{SIU:SIU09StatutRDV}' action='set' />

<!-- segment SIU : comment -->
<assign value='source.{NTE(1):Comment(1)}' property='Commentaire' action='set' />
<assign value='$REPLACE(Commentaire, "\.br\", "-")' property='Commentaire' action='set' />
<assign value='$REPLACE(Commentaire, "\X000d\.", "-")' property='Commentaire' action='set' />
<assign value='Commentaire' property='target.{SIU:SIU14Commentaire}' action='set' />
<if condition='",2.5:SIU_S12,2.5.1:SIU_S12," [ ("," _ source.DocType _ ",")' >
<true>
<assign value='source.{SCH:EventReason.Identifier}' property='target.{SIU:SIU10PrestationAgenda}' action='set' />
</true>
<false>
<assign value='source.{SCH:EventReason.identifierST}' property='target.{SIU:SIU10PrestationAgenda}' action='set' />
</false>
</if>

<assign property="TCSIUtoCCOMSIULut" value='##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "TCSIUtoCCOMSIULut", "")' action="set" />
<if condition='TCSIUtoCCOMSIULut = ""' >
<true>
<assign property="tSC1" value='$$$ERROR($$$GeneralError, "Le nom du LUT n&apos;est pas renseignée dans " _ $CLASSNAME())' action="set"/>
</true>
<false>
<!-- code agenda -->
<trace value='"Ressource Doctolib=" _ Ressource'/>
<assign value='..Lookup(TCSIUtoCCOMSIULut, Ressource)' property='CodeAgenda' action='set' />
<if condition='CodeAgenda = ""'>
<true>
<assign property="Erreur" value='"La valeur dans " _ TCSIUtoCCOMSIULut _ ".LUT n&apos;est pas renseignée pour la ressource """ _ Ressource _ """ dans " _ $CLASSNAME() _ " -2-"' action="set"/>
<assign property="(tSC, tSCTrans)" value='$$$ERROR($$$GeneralError, Erreur)' action="set"/>
<assign property="TargetEMails" value='##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "TargetEMails", "")' action="set" />
<if condition='TargetEMails &apos;= ""'>
<true>
<assign property="Erreur" value='$$$FormatText("%1 (SessionId=%2)", Erreur, %Ensemble("%Process").%SessionId)' action="set"/>
<assign property="bidon" value='##class(ISSAS.Common.Tools.ClassTools).SendMail("Valeur Ressource absente dans " _ TCSIUtoCCOMSIULut, TargetEMails, Erreur)' action="set"/>
</true>
</if>
<assign property="bidon" value='##class(%Monitor.Alert).External("SNMP", $EXTRACT("BPLDoctolib " _ $CLASSNAME(), 20), 3, Erreur)' action="set"/>
<if condition="$$$ISWINDOWS">
<true>
<assign property="bidon" value='##class(%Monitor.Alert).External("WMI", $EXTRACT("BPLDoctolib " _ $CLASSNAME(), 20), 3, Erreur)' action="set"/>
</true>
</if>
</true>
<false>
<trace value='"Code Agenda Clinicom=" _ CodeAgenda'/>
<assign value='CodeAgenda' property='target.{SIU:SIU06CodeAgenda}' action='set' />
</false>
</if>
</false>
</if>
<if condition='+##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "TraceTransformations", $$$FALSE)'>
<true>
<code>
<![CDATA[
	set strBuffer = "En sortie de " _ $$$CURRENTMETHOD _ $char(13, 10)
	For I=1:1:target.SegCount
	{ set strBuffer = strBuffer _ target.GetValueAt(I) _ $char(13, 10) }
	$$$TRACE(strBuffer)
]]]]><![CDATA[>
</code>
</true>
</if>

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.Doctolib.TCSIUtoDoctolibSIU">
<IncludeCode>Constantes</IncludeCode>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65122,42135</TimeChanged>
<TimeCreated>62472,44175.207449</TimeCreated>
<DependsOn>EnsLib.HL7.Message</DependsOn>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/MAIN/cls/ISSAS/Common/DTL/Doctolib/TCSIUtoDoctolibSIU.xml#3 $</Default>
</Parameter>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='EnsLib.HL7.Message' sourceDocType='2.4:SIU_S12' targetDocType='2.4:SIU_S12' create='new' language='objectscript' >
<if condition='+##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "TraceTransformations", $$$FALSE)'>
<true>
<trace value='"Dans " _ $ClassName() _ ", MsgId=" _ source.%Id()'/>
</true>
</if>

<!-- segment MSH -->
<assign value='source.{MSH}' property='target.{MSH}' action='set' />


<assign value='source.{SCH}' property='target.{SCH}' action='set' />
<assign value='..Lookup("DOCTOLIB_TRAK_DOCTOLIB_StatutRDV",source.{SCH:FillerStatusCode.text})' property='target.{SCH:FillerStatusCode}' action='set' />

<assign value='source.{NTE()}' property='target.{NTE()}' action='set' />
<assign value='""' property='strBuffer' action='set' />
<code>
<![CDATA[
	Set (strBuffer, strSep) = ""
	Set keyNTE=""
	For {
		Set tSC1=1, keyNTE=source.GetNextIndex("NTE(1):Comment()",keyNTE,.tSC1)
		Set:('tSC1)&&('..#IGNOREMISSINGSOURCE||(($$GetOneStatusText^%apiOBJ(tSC1)'["No segment found")&&($$GetOneStatusText^%apiOBJ(tSC1)'["is not an element, instead this node"))) tSCTrans=$select(+tSCTrans:tSC1,1:$$AppendStatus^%occSystem(tSCTrans,tSC1))
		Quit:(keyNTE = "")
		set strBuffer = strBuffer _ strSep _ source.GetValueAt("NTE(1):Comment(" _ keyNTE _ ")")
		set strSep = "\.br\"
	}
]]]]><![CDATA[>
</code>
<if condition="strBuffer '= &quot;&quot; ">
<true>
<assign value='strBuffer' property='target.{NTE(1):Comment}' action='set' />
</true>
</if>
<assign value='source.{PIDgrp().PID}' property='target.{PIDgrp().PID}' action='set' />
<assign value='"CLINICOM"' property='target.{PIDgrp(1).PID:PatientIdentifierList(1).assigningauthority}' action='set' />
<assign value='"PI"' property='target.{PIDgrp(1).PID:PatientIdentifierList(1).identifiertypecodeID}' action='set' />
	<!-- CCOMTCC-518 -->
<assign value='$REPLACE(source.{PIDgrp(1).PID:AdministrativeSex},"I","U")' property='target.{PIDgrp(1).PID:AdministrativeSex}' action='set' />

<assign value='source.{PIDgrp().PV1}' property='target.{PIDgrp().PV1}' action='set' />

<assign value='source.{RGSgrp().RGS}' property='target.{RGSgrp().RGS}' action='set' />

<assign value='source.{RGSgrp().AISgrp()}' property='target.{RGSgrp().AISgrp()}' action='set' />

<assign value='source.{RGSgrp().AIGgrp()}' property='target.{RGSgrp().AIGgrp()}' action='set' />

<assign value='""' property="Ressource" />
<assign value='##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "RessourceSeparator", "-")' property="RessourceSeparator" />
<assign value='##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "FormatRessources", "UF_RESSOURCE")' property='FormatRessources' action='set' />

<if condition='FormatRessources = "UF_US_RESSOURCE"'>
<true>
<assign value='source.{PIDgrp(1).PV1:HospitalService}' property="UF" />
<assign value='source.{PIDgrp(1).PV1:AssignedPatientLocation.PointofCare}' property="UC" />
<assign value='source.{PIDgrp(1).PV1:AttendingDoctor(1).IDNumber}' property="Ressource" />
<assign value='UF _ RessourceSeparator _ UC _ RessourceSeparator _ Ressource' property="CodeAgenda" />
</true>
</if>
<if condition='FormatRessources = "UF_RESSOURCE"'>
<true>
<assign value='source.{PIDgrp(1).PV1:HospitalService}' property="UF" />
<assign value='source.{PIDgrp(1).PV1:AttendingDoctor(1).IDNumber}' property="Ressource" />
<assign value='UF _ RessourceSeparator _ Ressource' property="CodeAgenda" />
</true>
</if>
<if condition='FormatRessources = "UF_US_RESSOURCE_OTHERAGD"'>
<true>
<assign value='source.{PIDgrp(1).PV1:HospitalService}' property="UF" />
<assign value='source.{PIDgrp(1).PV1:AssignedPatientLocation.PointofCare}' property="UC" />
<assign value='source.{PIDgrp(1).PV1:AttendingDoctor(1).IDNumber}' property="Ressource" />
<assign value='"AFINIR"' property='CodeAgenda01' action='set' />
<assign value='UF _ RessourceSeparator _ UC _ RessourceSeparator _ Ressource _ RessourceSeparator _ CodeAgenda01' property="CodeAgenda" />
</true>
</if>
<if condition='FormatRessources = "UF_US_RESSOURCE_OTHERAGD_SCH_AIG"'>
<true>
<assign value='source.{SCH:EventReason.Identifier}' property="EventReason" />
<assign value='source.{PIDgrp(1).PV1:HospitalService}' property="UF" />
<assign value='source.{PIDgrp(1).PV1:AssignedPatientLocation.PointofCare}' property="UC" />
<assign value='source.{PIDgrp(1).PV1:AttendingDoctor(1).IDNumber}' property="Ressource" />
<assign value='""' property='CodeAgenda01' action='set' />
<assign value='UF _ RessourceSeparator _ UC _ RessourceSeparator _ EventReason' property="target.{SCH:EventReason.identifierST}" />
<if condition='CodeAgenda01 = ""'>
<true>
<assign value='Ressource' property="CodeAgenda" />
</true>
<false>
<assign value='Ressource _ RessourceSeparator _ CodeAgenda01' property="CodeAgenda" />
</false>
</if>
</true>
</if>

<assign value='CodeAgenda' property='target.{RGSgrp(1).AIGgrp(1).AIG:ResourceType.identifierST}' action='set' />

<assign value='source.{RGSgrp().AIPgrp()}' property='target.{RGSgrp().AIPgrp()}' action='set' />

<assign value='source.{RGSgrp().AILgrp()}' property='target.{RGSgrp().AILgrp()}' action='set' />
<if condition='$get(^ISSAS.Config("WS", "Client", "Clinicom", "Settings", "Doctolib", "AIL")) &apos;= ""' >
<annotation>Pour déboggage</annotation>
<true>
<assign value='^ISSAS.Config("WS", "Client", "Clinicom", "Settings", "Doctolib", "AIL")' property='target.{RGSgrp(1).AILgrp(1).AIL:LocationResourceID(1).pointofcare}' action='set' />
<trace value='"MODE DEBUG AIL !!!!"' />
</true>
</if>

<if condition='+##class(ISSAS.Common.Tools.ClassTools).GetSettingFromItemName("BPLDoctolib", "TraceTransformations", $$$FALSE)'>
<true>
<code>
<![CDATA[
	set strBuffer = "En sortie de " _ ..%ClassName() _ $char(13, 10)
	For I=1:1:target.SegCount
	{ set strBuffer = strBuffer _ target.GetValueAt(I) _ $char(13, 10) }
	$$$TRACE(strBuffer)
]]]]><![CDATA[>
</code>
</true>
</if>
</transform>
]]></Data>
</XData>
</Class>




<Class name="ISSAS.Common.DTL.TCtoCCOM.SIUtoSIU">
<Description>
!!! --- !!!
This class must be inherited for each site to manage 'SIU:SIU06CodeAgenda' field :
You need to create a specific lookup table for each site to put the correct value in 'SIU:SIU06CodeAgenda' field
!!! --- !!!</Description>
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64565,65844</TimeChanged>
<TimeCreated>62810,63740.048474</TimeCreated>
<DependsOn>EnsLib.HL7.Message,ISSAS.Common.Message.ClinicomHL7</DependsOn>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/DTL/TCtoCCOM/SIUtoSIU.xml#5 $</Default>
</Parameter>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='ISSAS.Common.Message.ClinicomHL7' sourceDocType='TrakCare:SIU_S12' targetDocType='ClinicomReceiver:SIU' create='new' language='objectscript' >
<!-- entête -->
<assign value='source.{MSH}' property='target.{MSH}' action='set' />
<assign value='"SIU"' property='target.{MSH:MSH09MessageType}' action='set' />

<!-- segment SIU : code action -->
<if condition='source.{MSH:MessageType.triggerevent}="S12"'>
<true>
<assign value='"01"' property='target.{SIU:SIU01CodeAction}' action='set' />
</true>
</if>
<if condition='source.{MSH:MessageType.triggerevent}="S13"'>
<true>
<assign value='"02"' property='target.{SIU:SIU01CodeAction}' action='set' />
</true>
</if>
<if condition='source.{MSH:MessageType.triggerevent}="S14"'>
<true>
<assign value='"02"' property='target.{SIU:SIU01CodeAction}' action='set' />
</true>
</if>
<if condition='source.{MSH:MessageType.triggerevent}="S15"'>
<true>
<assign value='"03"' property='target.{SIU:SIU01CodeAction}' action='set' />
</true>
</if>

<!-- segment SIU : other fields -->
<assign value='"TC"' property='target.{SIU:SIU02IdentifiantModuleProduc}' action='set' />
<assign value='$Replace(source.{SCH:FillerAppointmentID}, "\", ".")' property='target.{SIU:SIU03IdentifiantUniqueRDV}' action='set' />
<assign value='"P"' property='target.{SIU:SIU04TypeEntiteAttendue}' action='set' />
<assign value='source.{PIDgrp(1).PID:PatientIdentifierList(1).ID}' property='target.{SIU:SIU05IPP}' action='set' />
<assign value='$E(source.{SCH:AppointmentTimingQuantity(1).startdatetime},1,12)' property='target.{SIU:SIU07DateHeureDebutRDV}' action='set' />
<assign value='$E(source.{SCH:AppointmentTimingQuantity(1).enddatetime},1,12)' property='target.{SIU:SIU08DateHeureFinRDV}' action='set' />
<assign value='source.{RGSgrp(1).AISgrp(1).AIS:UniversalServiceIdentifier.identifierST}' property='target.{SIU:SIU10PrestationAgenda}' action='set' />
<assign value='"0"' property='target.{SIU:SIU11TypeRessource}' action='set' />
<assign value='source.{RGSgrp(1).AIGgrp(1).AIG:ResourceID.identifierST}' property='target.{SIU:SIU12CodeRessource}' action='set' />
<assign value='source.{SCH:EnteredByPerson(1).IDnumberST}' property='target.{SIU:SIU16CodeUtilisateur}' action='set' />

<!-- segment SIU : RDV status -->
<assign value='..Lookup("TC_CCOM_StatutRDV",source.{SCH:FillerStatusCode.identifierST})' property='target.{SIU:SIU09StatutRDV}' action='set' />

<!-- segment SIU : comment -->
<if condition='source.{MSH:MessageType.triggerevent}="S15"'>
<true>
<assign value='source.{SCH:EventReason.text}' property='target.{SIU:SIU14Commentaire}' action='set' />
</true>
</if>

<!-- segment SIU : code agenda -->
<!-- this class must be inherited for each site to manage 'SIU:SIU06CodeAgenda' field -->
<!-- you need to create a specific lookup table for each site to put the correct value in 'SIU:SIU06CodeAgenda' field -->
<assign value='"???"' property='target.{SIU:SIU06CodeAgenda}' action='set' />

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.DTL.TCtoMONDOCTEUR.SIUtoSIU">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64887,57937</TimeChanged>
<TimeCreated>64267,49802.044478</TimeCreated>
<DependsOn>EnsLib.HL7.Message</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='EnsLib.HL7.Message' sourceDocType='2.4:SIU_S12' targetDocType='2.3:SIU_S12' create='new' language='objectscript' >

<!-- segment MSH -->
<assign value='source.{MSH}' property='target.{MSH}' action='set' />
<assign value='"2.3"' property='target.{MSH:VersionID}' action='set' />
<assign value='"UTF-8"' property='target.{MSH:CharacterSet(1)}' action='set' />

<!-- segment SCH -->
<assign value='source.{SCH}' property='target.{SCH}' action='set' />
<assign value='source.{NTE()}' property='target.{NTE()}' action='set' />

<!-- segment PID -->
<assign value='source.{PIDgrp(1).PID}' property='target.{PIDgrp(1).PID}' action='set' />
<assign value='""' property='target.{PIDgrp(1).PID:PhoneNumberHome()}' action='set' />
<code>
<![CDATA[ Set oTEL=0 ]]]]><![CDATA[>
</code>
<foreach key="kPH" property="source.{PIDgrp(1).PID:PhoneNumberHome()}">
<if condition='",CP,Internet" [ source.{PIDgrp(1).PID:PhoneNumberHome(kPH).telecommunicationequipmentty}'>
<true>
<assign value='source.{PIDgrp(1).PID:PhoneNumberHome(kPH)}' property='target.{PIDgrp(1).PID:PhoneNumberHome($I(oTEL))}' action='set' />
</true>
</if>
</foreach>

<!-- segment PV1 -->
<assign value='source.{PIDgrp().PV1}' property='target.{PIDgrp().PV1}' action='set' />

<!-- segment RGS -->
<assign value='source.{RGSgrp().RGS}' property='target.{RGSgrp().RGS}' action='set' />

<!-- segment AIS -->
<assign value='source.{RGSgrp().AISgrp()}' property='target.{RGSgrp().AISgrp()}' action='set' />

<!-- segment AIG -->
<assign value='source.{RGSgrp().AIGgrp()}' property='target.{RGSgrp().AIGgrp()}' action='set' />

<!-- segment AIL -->
<assign value='source.{RGSgrp().AILgrp()}' property='target.{RGSgrp().AILgrp()}' action='set' />

<!-- segment AIP -->
<assign value='source.{RGSgrp().AIPgrp()}' property='target.{RGSgrp().AIPgrp()}' action='set' />
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Common.Message.ClinicomHL7">
<IncludeCode>Ensemble</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>EnsLib.HL7.Message</Super>
<TimeChanged>65434,54839</TimeChanged>
<TimeCreated>62446,58679.003242</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/Message/ClinicomHL7.xml#4 $</Default>
</Parameter>

<Property name="MSHAddToMTS">
<Description>
Add MSH segment to MTS message</Description>
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>
<Transient>1</Transient>
</Property>

<Property name="MSHDelimiter">
<Description>
Define fields separators to parse a segment</Description>
<Type>%String</Type>
<InitialExpression><![CDATA["\^~|&"]]></InitialExpression>
<Transient>1</Transient>
</Property>

<Property name="MSHDocType">
<Description><![CDATA[
Define document type <=> application name (caller)]]></Description>
<Type>%String</Type>
<InitialExpression>"Clinicom"</InitialExpression>
<Transient>1</Transient>
</Property>

<Property name="MSHPieceMessageType">
<Description>
Define piece index where we can find the message type</Description>
<Type>%Integer</Type>
<InitialExpression>1</InitialExpression>
<Transient>1</Transient>
</Property>

<Property name="MSHSendingApp">
<Description>
Define sending application to insert into MSH segment</Description>
<Type>%String</Type>
<Transient>1</Transient>
</Property>

<Property name="MSHSendingFacility">
<Description>
Define sending facility to insert into MSH segment</Description>
<Type>%String</Type>
<Transient>1</Transient>
</Property>

<Property name="MSHReceivingApp">
<Description>
Define receiving application to insert into MSH segment</Description>
<Type>%String</Type>
<Transient>1</Transient>
</Property>

<Property name="MSHReceivingFacility">
<Description>
Define receiving facility to insert into MSH segment</Description>
<Type>%String</Type>
<Transient>1</Transient>
</Property>

<Property name="MSHProcessingId">
<Description>
Define processing ID to insert into MSH segment (Environment)</Description>
<Type>%String</Type>
<Transient>1</Transient>
</Property>

<Method name="UpdateMSH">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Do ..SetValueAt(..MSHSendingApp, "MSH:MSH03SendingApplication")
	Do ..SetValueAt(..MSHSendingFacility, "MSH:MSH04SendingFacility")
	Do ..SetValueAt(..MSHReceivingApp, "MSH:MSH05ReceivingApplication")
	Do ..SetValueAt(..MSHReceivingFacility, "MSH:MSH06ReceivingFacility")
	Do ..SetValueAt(..MSHProcessingId, "MSH:MSH11ProcessingID")
	Do ..SetValueAt($ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6), "MSH:MSH07DateTimeOfMessage")

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="UpdateMSHToSendToClinicom">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// Clinicom doesn't parse MSH using separators
	// All informations into MSH must have same position and length
	Set (strSendingApp, strSendingFacility, strReceivingApp) = ""
	Set (strReceivingFacility, strProcessingId, strMessageType) = ""

	If ($L(..MSHSendingApp)) { Set strSendingApp = $E(..MSHSendingApp, 1, 12) }
	Else { Set strSendingApp = $E(..GetValueAt("MSH:MSH03SendingApplication"), 1, 12) }
	While ($L(strSendingApp) < 12) { Set strSendingApp = strSendingApp_" " }
	Set tSC = ..SetValueAt(strSendingApp, "MSH:MSH03SendingApplication")
	If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }

	If ($L(..MSHSendingFacility)) { Set strSendingFacility = $E(..MSHSendingFacility, 1, 12) }
	Else { Set strSendingFacility = $E(..GetValueAt("MSH:MSH04SendingFacility"), 1, 12) }
	While ($L(strSendingFacility) < 12) { Set strSendingFacility = strSendingFacility_" " }
	Set tSC = ..SetValueAt(strSendingFacility, "MSH:MSH04SendingFacility")
	If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }

	If ($L(..MSHReceivingApp)) { Set strReceivingApp = $E(..MSHReceivingApp, 1, 12) }
	Else { Set strReceivingApp = $E(..GetValueAt("MSH:MSH05ReceivingApplication"), 1, 12) }
	While ($L(strReceivingApp) < 12) { Set strReceivingApp = strReceivingApp_" " }
	Set tSC = ..SetValueAt(strReceivingApp, "MSH:MSH05ReceivingApplication")
	If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }

	If ($L(..MSHReceivingFacility)) { Set strReceivingFacility = $E(..MSHReceivingFacility, 1, 12) }
	Else { Set strReceivingFacility = $E(..GetValueAt("MSH:MSH06ReceivingFacility"), 1, 12) }
	While ($L(strReceivingFacility) < 12) { Set strReceivingFacility = strReceivingFacility_" " }
	Set tSC = ..SetValueAt(strReceivingFacility, "MSH:MSH06ReceivingFacility")
	If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }

	If ($L(..MSHProcessingId)) { Set strProcessingId = $E(..MSHProcessingId, 1, 3) }
	Else { Set strProcessingId = $E(..GetValueAt("MSH:MSH11ProcessingID"), 1, 3) }
	While ($L(strProcessingId) < 3) { Set strProcessingId = strProcessingId_" " }
	Set tSC = ..SetValueAt(strProcessingId, "MSH:MSH11ProcessingID")
	If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }

	If ($L(..DocTypeName)) { Set strMessageType = $E(..DocTypeName, 1, 3) }
	Else { Set strMessageType = $E(..GetValueAt("MSH:MSH09MessageType"), 1, 3) }
	While ($L(strMessageType) < 3) { Set strMessageType = strMessageType_" " }
	Set tSC = ..SetValueAt(strMessageType, "MSH:MSH09MessageType")
	If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }

	Set strNow = $ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6)
	Set tSC = ..SetValueAt(strNow, "MSH:MSH07DateTimeOfMessage")
	If ($$$ISERR(tSC)) { $$$LOGWARNING(tSC) }

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="FromMTS">
<FormalSpec><![CDATA[&pMTS:ISSAS.Common.Adapter.MTS.Message.Message]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim tSC As %Status = $$$OK

	// Check if input parameter is valid
	If (pMTS = "") { Quit $$$ERROR($$$GeneralError, "MTS message parameter must be instantiated") }
	If (pMTS.ListOfSegment.Count() <= 0) { Quit $$$ERROR($$$GeneralError, "MTS message parameter must have at least 1 segment") }

	// Define all separators to parse the message
	Set ..Separators = ..MSHDelimiter
	Set tSC = ..SetValueAt("MSH"_..MSHDelimiter, 1)
	If ($$$ISERR(tSC)) { $$$LOGERROR(tSC)  Quit tSC }

	// Retrieve the doc type of the message
	Set firstSeg = pMTS.ListOfSegment.GetAt(1)
	Set firstSep = $E(..MSHDelimiter, 1, 1)
	Set docType = $P(firstSeg.Data, firstSep, ..MSHPieceMessageType)
	Set ..DocType = ..MSHDocType_":"_docType

	// Retrieve the message type to put into MSH segment
	If (..MSHPieceMessageType = 1) { Set msgType = docType_$P(firstSeg.Data, firstSep, 2) }
	Else { Set msgType = docType }
	Do ..SetValueAt(msgType, "MSH:MSH09MessageType")

	// Add some informations into MSH segment
	Do ..UpdateMSH()

	// Iterate over all segments into the message
	For I=1:1:pMTS.ListOfSegment.Count()
	{
		Set tSC = ..AppendSegment(##class(EnsLib.HL7.Segment).%New())
		If ($$$ISERR(tSC)) { $$$LOGERROR(tSC)  Quit }

		// Build a fake HL7 message
		Set segment = pMTS.ListOfSegment.GetAt(I)
		Set tSC = ..SetValueAt(segment.Data, (I + 1))
		If ($$$ISERR(tSC)) { $$$LOGERROR(tSC)  Quit }
		Do ..commitSegmentByIndex(I + 1)
	}

	Quit tSC
]]></Implementation>
</Method>

<Method name="ToMTS">
<FormalSpec><![CDATA[&pMTS:ISSAS.Common.Adapter.MTS.Message.Message]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim tSC As %Status = $$$OK

	// Check if input parameter is valid
	If (pMTS = "") { Quit $$$ERROR($$$GeneralError, "MTS message parameter must be instantiated") }
	Do pMTS.ListOfSegment.Clear()

	// First index to iterare over : exclude or not MSH segment
	Set firstIndex = 2
	If (..MSHAddToMTS) { Set firstIndex = 1 }

	// Iterate over all segments into HL7 message and build MTS message
	For I=firstIndex:1:..SegCount
	{
		Set line = ..GetValueAt(I)
		Set tSC = pMTS.InsertData(line)
		If ($$$ISERR(tSC)) { $$$LOGERROR(tSC)  Quit }
		Do ..commitSegmentByIndex(I)
	}

	Quit tSC
]]></Implementation>
</Method>

<Method name="CloneFromHL7">
<FormalSpec>pHL7:EnsLib.HL7.Message</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim tSC As %Status = $$$OK

	// Clear current HL7 message
	If (..SegCount > 1) { Do ..Clear() }

	// Clone HL7 parameters
	Set ..Separators = pHL7.Separators
	Set ..DocType = pHL7.DocType

	// Clone MSH segment
	Set tSC = ..SetValueAt(pHL7.GetValueAt("MSH"), "MSH")
	If ($$$ISERR(tSC)) { Quit tSC }

	// Copy all segments into Clinicom HL7 message
	For I=2:1:pHL7.SegCount
	{
		Set pSegment = ##class(EnsLib.HL7.Segment).%New()
		Set tSC = ..AppendSegment(pSegment)  If ($$$ISERR(tSC)) { Quit }
		Set tSC = ..SetValueAt(pHL7.GetValueAt(I), I)  If ($$$ISERR(tSC)) { Quit }
		Do pHL7.commitSegmentByIndex(I)
		Do ..commitSegmentByIndex(I)
	}

	Quit tSC
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
</Storage>
</Class>


<Class name="ISSAS.Common.Message.HPRIMv2HL7">
<IncludeCode>Ensemble</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>EnsLib.HL7.Message</Super>
<TimeChanged>65434,54839</TimeChanged>
<TimeCreated>62482,35850.444402</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/REL/cls/ISSAS/Common/Message/HPRIMv2HL7.xml#4 $</Default>
</Parameter>

<Method name="UpdateMSHFromSegmentH">
<FormalSpec>segmentH:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If ($L(segmentH) <= 0)
	{ Quit $$$ERROR($$$GeneralError, "HPRIMv2 segment H is empty") }

	// Define HPRIMv2 HL7 separators
	Set ..Separators = $E(segmentH, 2, 6)
	Set firstSep = $E(..Separators, 1, 1)
	Set secondSep = $E(..Separators, 2, 2)
	$$$TRACE("HPRIMv2 delimiters : "_..Separators)
	$$$TRACE("Field delimiter : "_firstSep)
	$$$TRACE("Component delimiter : "_secondSep)
	If (secondSep = firstSep)
	{
		Set ..Separators = "|^~\&"
		Set secondSep = $E(..Separators, 2, 2)
		$$$TRACE("HPRIMv2 delimiters : "_..Separators)
		$$$TRACE("Field delimiter : "_firstSep)
		$$$TRACE("Component delimiter : "_secondSep)
	}

	// Define HPRIMv2 document type
	Set msgType = $P(segmentH, firstSep, 7)
	$$$TRACE("HPRIMv2 message type : "_msgType)
	If ($L(msgType) <= 0) { Quit $$$ERROR($$$GeneralError, "HPRIMv2 message type is empty") }
	Set ..DocType = "HPRIMV2:"_msgType

	// Update MSH segment from H segment
	Set tSC = ..SetValueAt($P($P(segmentH, firstSep, 5), secondSep, 1), "MSH:MSH03SendingApplication")  If ($$$ISERR(tSC)) { Quit tSC }
	Set tSC = ..SetValueAt($P($P(segmentH, firstSep, 5), secondSep, 2), "MSH:MSH04SendingFacility")  If ($$$ISERR(tSC)) { Quit tSC }
	Set tSC = ..SetValueAt($P($P(segmentH, firstSep, 10), secondSep, 1), "MSH:MSH05ReceivingApplication")  If ($$$ISERR(tSC)) { Quit tSC }
	Set tSC = ..SetValueAt($P($P(segmentH, firstSep, 10), secondSep, 2), "MSH:MSH06ReceivingFacility")  If ($$$ISERR(tSC)) { Quit tSC }
	Set tSC = ..SetValueAt(msgType, "MSH:MSH09MessageType")  If ($$$ISERR(tSC)) { Quit tSC }
	Set tSC = ..SetValueAt($P(segmentH, firstSep, 12), "MSH:MSH11ProcessingID")  If ($$$ISERR(tSC)) { Quit tSC }
	Set tSC = ..SetValueAt($P(segmentH, firstSep, 13), "MSH:MSH12VersionID")  If ($$$ISERR(tSC)) { Quit tSC }
	Set tSC = ..SetValueAt($ZDATE($PIECE($HOROLOG,",",1),8)_$E($TR($ZTIME($PIECE($HOROLOG,",",2)),":",""),1,6), "MSH:MSH07DateTimeOfMessage")  If ($$$ISERR(tSC)) { Quit tSC }

	Quit tSC
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
</Storage>
</Class>


<Class name="ISSAS.Common.Tools.RulesFunctions">
<IncludeCode>Constantes</IncludeCode>
<Super>Ens.Rule.FunctionSet</Super>
<TimeChanged>65538,33406.205</TimeChanged>
<TimeCreated>64966,61154.823905</TimeCreated>

<Parameter name="SrcVer">
<Default>$Id: //legacy/fr_products/CCOMTCC/MAIN/cls/ISSAS/Common/Tools/RulesFunctions.xml#4 $</Default>
</Parameter>

<Method name="ISSASXcute">
<ClassMethod>1</ClassMethod>
<FormalSpec>strINCommand:%String</FormalSpec>
<Implementation><![CDATA[
	/*
w ##class(ISSAS.Common.Tools.RulesFunctions).ISSASXcute("quit ##class(ISSAS.Common.DTL.Doctolib.DoctolibUtils).GetClinicomAssigningAuthority(""2.5"")")
	*/
	SET $ZTRAP = "ISSASXcuteError"
	XECUTE strINCommand
	QUIT $$$TRUE
ISSASXcuteError
	SET $ZTRAP = ""
	do BACK^%ETN
	QUIT $$$FALSE
]]></Implementation>
</Method>

<Method name="ISSASOBJClassMethodWithQuit1Arg">
<Description>
Permet d'appeler une ClassMethod qui prends 1 argument et renvoie un résultat.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Classname:%String,Methodname:%String,Arg1</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	/*
w ##class(ISSAS.Common.Tools.RulesFunctions).ISSASOBJClassMethodWithQuit1Arg("ISSAS.Common.DTL.Doctolib.DoctolibUtils", "GetClinicomAssigningAuthority", "2.5")
	*/
	SET $ZTRAP = "ISSASOBJClassMethodWithQuit1ArgError"
	quit $CLASSMETHOD(Classname, Methodname, Arg1)
ISSASOBJClassMethodWithQuit1ArgError
	SET $ZTRAP = ""
	do BACK^%ETN
	quit ""
]]></Implementation>
</Method>

<Method name="ISSASOBJClassMethodWithQuit2Args">
<Description>
Permet d'appeler une ClassMethod qui prends 2 arguments et renvoie un résultat.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Classname:%String,Methodname:%String,Arg1,Arg2</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	/*
w ##class(ISSAS.Common.Tools.RulesFunctions).ISSASOBJClassMethodWithQuit2Args("ISSAS.Common.DTL.Doctolib.DoctolibUtils", "GetPB227WebServiceApp", "Document.{PB2}", "TRAKCARE")
	*/
	SET $ZTRAP = "ISSASOBJClassMethodWithQuit1ArgError"
	quit $CLASSMETHOD(Classname, Methodname, Arg1, Arg2)
ISSASOBJClassMethodWithQuit1ArgError
	SET $ZTRAP = ""
	do BACK^%ETN
	quit ""
]]></Implementation>
</Method>

<Method name="ISSASOBJClassMethodWithQuit3Args">
<Description>
Permet d'appeler une ClassMethod qui prends 3 arguments et renvoie un résultat.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Classname:%String,Methodname:%String,Arg1,Arg2,Arg3</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	/*
w ##class(ISSAS.Common.Tools.RulesFunctions).ISSASOBJClassMethodWithQuit3Args("ISSAS.Common.Tools.ClassTools", "GetSettingFromItemName", "BPLDoctolib", "TraceTransformations", "")
	*/
	SET $ZTRAP = "ISSASOBJClassMethodWithQuit1ArgError"
	quit $CLASSMETHOD(Classname, Methodname, Arg1, Arg2, Arg3)
ISSASOBJClassMethodWithQuit1ArgError
	SET $ZTRAP = ""
	do BACK^%ETN
	quit ""
]]></Implementation>
</Method>

<Method name="ISSASOBJClassMethodWithQuit4Args">
<Description>
Permet d'appeler une ClassMethod qui prends 4 arguments et renvoie un résultat.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Classname:%String,Methodname:%String,Arg1,Arg2,Arg3,Arg4</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	/*
	*/
	SET $ZTRAP = "ISSASOBJClassMethodWithQuit4ArgError"
	quit $CLASSMETHOD(Classname, Methodname, Arg1, Arg2, Arg3, Arg4)
ISSASOBJClassMethodWithQuit4ArgError
	SET $ZTRAP = ""
	do BACK^%ETN
	quit ""
]]></Implementation>
</Method>

<Method name="CalcAgeFromBirthDate">
<Description>
Calcul age in Year from Birth Date in YYYYMMDD</Description>
<Final>1</Final>
<ClassMethod>1</ClassMethod>
<FormalSpec>strINDateBirth:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// write ##class(ISSAS.Common.Tools.RulesFunctions).CalcAgeFromBirthDate("19681019")
	SET $ZTRAP = "CalcAgeFromBirthDateError"
	if ($get(strINDateBirth)="") { quit "" }
	set (XBirth,XToday,AgeDay,AgeMth,AgeYear,CurrMth,CurrYear,AgeYr)=""
	set IBirth=$zdateh($get(strINDateBirth),8)
	set IToday=+$h
	if IBirth>2980000 set IBirth=""
	if IBirth<0 set IBirth=""
	if IToday<0 set IToday=""
	quit:'$get(IBirth) ""
	set XBirth=$zdate(IBirth,1)
	set XToday=$zdate(IToday,1)
	set AgeMth=XToday-XBirth
	set AgeDay=$piece(XToday,"/",2)-$piece(XBirth,"/",2)
	set CurrYear=$piece(XToday,"/",3) 
	if (CurrYear<100) { set CurrYear=CurrYear+1900 }
	set BirthYear=$piece(XBirth,"/",3) 
	if (BirthYear<100) { set BirthYear=BirthYear+1900 }
	set AgeYear=CurrYear-BirthYear
	if (AgeDay<0) {
		set AgeMth=AgeMth-1
		set AgeDay=AgeDay+$piece("31,31,28,31,30,31,30,31,31,30,31,30,31",",",+XToday)
		if (+XToday=2) {
			if (((CurrYear#4)=0)&&(((CurrYear#100)'=0)||((CurrYear#400)=0))) {
				set AgeDay=AgeDay+1
			}
		}
	}
	if (AgeMth<0) {
		set AgeMth=AgeMth+12
		set AgeYear=AgeYear-1
	}
	quit AgeYear
CalcAgeFromBirthDateError
	SET $ZTRAP = ""
	do BACK^%ETN
	quit ""
]]></Implementation>
</Method>
</Class>






























































































<Class name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.ADtoADT">
<Description>
</Description>
<Super>ISSAS.Common.DTL.CCOMtoHL7v231.ADtoADT</Super>
<TimeChanged>63704,51384.858354</TimeChanged>
<TimeCreated>62521,33484.003124</TimeCreated>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:AD" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set tSC = ##super(source, .target, $G(aux))  If ($$$ISERR(tSC)) { Quit } ]]]]><![CDATA[>
</code>

<!-- UF hébergée -->
<if condition='source.{AD3:AD329IndicateurUFHebergee}="1"'>
<true>
<assign value='..Lookup("ISSAS.Sites.Bayonne.LUT.US_UF_hebergee",source.{AD3:AD305CodeUS})' property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
</true>
</if>

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.DStoADT">
<Description>
</Description>
<Super>ISSAS.Common.DTL.CCOMtoHL7v231.DStoADT</Super>
<TimeChanged>63704,51422.288478</TimeChanged>
<TimeCreated>62521,33484.003124</TimeCreated>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:DS" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set tSC = ##super(source, .target, $G(aux))  If ($$$ISERR(tSC)) { Quit } ]]]]><![CDATA[>
</code>

<!-- UF hébergée -->
<if condition='source.{DS:DS16IndicateurUFHebergee}="1"'>
<true>
<assign value='..Lookup("ISSAS.Sites.Bayonne.LUT.US_UF_hebergee",source.{DS:DS14CodeUS})' property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
</true>
</if>

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.NDtoADT">
<Description>
</Description>
<Super>ISSAS.Common.DTL.CCOMtoHL7v231.NDtoADT</Super>
<TimeChanged>63704,51473.914884</TimeChanged>
<TimeCreated>62521,33484.003124</TimeCreated>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:ND" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set tSC = ##super(source, .target, $G(aux))  If ($$$ISERR(tSC)) { Quit } ]]]]><![CDATA[>
</code>

<!-- UF hébergée -->
<if condition='source.{ND:ND19IndicateurUFHebergee}="1"'>
<true>
<assign value='..Lookup("ISSAS.Sites.Bayonne.LUT.US_UF_hebergee",source.{ND:ND17CodeUS})' property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
</true>
</if>

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.NRtoADT">
<Description>
</Description>
<Super>ISSAS.Common.DTL.CCOMtoHL7v231.NRtoADT</Super>
<TimeChanged>63704,51490.212033</TimeChanged>
<TimeCreated>62521,33484.003124</TimeCreated>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:NR" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set tSC = ##super(source, .target, $G(aux))  If ($$$ISERR(tSC)) { Quit } ]]]]><![CDATA[>
</code>

<!-- UF hébergée -->
<if condition='source.{NR4:NR410IndicateurUFHebergee}="1"'>
<true>
<assign value='..Lookup("ISSAS.Sites.Bayonne.LUT.US_UF_hebergee",source.{NR4:NR408CodeUS})' property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
</true>
</if>

</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.OPtoADT">
<Description>
</Description>
<Super>ISSAS.Common.DTL.CCOMtoHL7v231.OPtoADT</Super>
<TimeChanged>62910,55769.668539</TimeChanged>
<TimeCreated>62521,33484.003124</TimeCreated>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:OP" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set tSC = ##super(source, .target, $G(aux))  If ($$$ISERR(tSC)) { Quit } ]]]]><![CDATA[>
</code>
<assign value="source.{OP3:OP303NumeroEpisode}" property="target.{PV1:PreadmitNumber.ID}" key="&quot;&quot;" action="set" />

<assign value="source.{OP3:OP312IdentifiantsRDVPreEpiso(1).Identifiant}" property="target.{PV1:AlternateVisitID}" key="&quot;&quot;" action="set" />
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.PAtoADT">
<Description>
</Description>
<Super>ISSAS.Common.DTL.CCOMtoHL7v231.PAtoADT</Super>
<TimeChanged>62910,55628.824465</TimeChanged>
<TimeCreated>62521,33484.003124</TimeCreated>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:PA" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set tSC = ##super(source, .target, $G(aux))  If ($$$ISERR(tSC)) { Quit } ]]]]><![CDATA[>
</code>

<assign value="source.{PA3:PA303NumeroEpisode}" property="target.{PV1:PreadmitNumber.ID}" key="&quot;&quot;" action="set" />

<assign value="source.{PA7:PA713IdentifiantsRDVPreEpiso.Identifiant}" property="target.{PV1:AlternateVisitID}" key="&quot;&quot;" action="set" />
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.PBtoADT">
<Description>
</Description>
<Super>ISSAS.Common.DTL.CCOMtoHL7v231.PBtoADT</Super>
<TimeChanged>62873,31378.540997</TimeChanged>
<TimeCreated>62521,33484.003124</TimeCreated>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:PB" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set tSC = ##super(source, .target, $G(aux))  If ($$$ISERR(tSC)) { Quit } ]]]]><![CDATA[>
</code>
<assign value='"A08"' property="target.{MSH:MessageType.triggerevent}" key="&quot;&quot;" action="set" />
<assign value='"A08"' property="target.{EVN:EventTypeCode}" key="&quot;&quot;" action="set" />
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.TRtoADT">
<Description>
</Description>
<Super>ISSAS.Common.DTL.CCOMtoHL7v231.TRtoADT</Super>
<TimeChanged>63714,35539.742773</TimeChanged>
<TimeCreated>62521,33484.003124</TimeCreated>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass="EnsLib.HL7.Message" sourceDocType="Clinicom:TR" targetClass="EnsLib.HL7.Message" targetDocType="HL7v231IHE:ADT_AXX" create="new" language="objectscript" >
<code>
<![CDATA[ Set tSC = ##super(source, .target, $G(aux))  If ($$$ISERR(tSC)) { Quit } ]]]]><![CDATA[>
</code>

<!-- UF hébergée -->
<if condition='source.{TR:TR22IndicateurUFHebergee}="1"'>
<true>
<assign value='..Lookup("ISSAS.Sites.Bayonne.LUT.US_UF_hebergee",source.{TR:TR09CodeUS})' property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
</true>
</if>

<!-- annulation de mutation -->
<if condition='(source.{TR:TR01Mode} = "03") &amp;&amp; (source.{TR:TR24IndicateurUFPrecedenteHe}="1")'>
<true>
<assign value='..Lookup("ISSAS.Sites.Bayonne.LUT.US_UF_hebergee",source.{TR:TR23CodeUSPrecedente})' property="target.{ZFU:MedicalFunctionalUnit}" key="&quot;&quot;" action="set" />
</true>
</if>

</transform>
]]></Data>
</XData>
</Class>




















<Class name="ISSAS.Sites.Bayonne.PRD.DTL.QPLANNERtoCCOM.SIUtoQPA">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>63334,61298.064754</TimeChanged>
<TimeCreated>62789,36673.205569</TimeCreated>
<DependsOn>EnsLib.HL7.Message,ISSAS.Common.Message.ClinicomHL7</DependsOn>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='ISSAS.Common.Message.ClinicomHL7' sourceDocType='2.3.1:SIU_S12' targetDocType='ClinicomReceiver:QPA' create='new' language='objectscript' >
<assign value='source.{MSH:SendingApplication}' property='target.{MSH:MSH03SendingApplication}' action='set' />
<if condition='source.{MSH:MessageType.triggerevent}="S12"'>
<true>
<assign value='"01"' property='target.{QPA:QPA01CodeAction}' action='set' />
</true>
</if>
<if condition='source.{MSH:MessageType.triggerevent}="S13"'>
<true>
<assign value='"02"' property='target.{QPA:QPA01CodeAction}' action='set' />
</true>
</if>
<if condition='source.{MSH:MessageType.triggerevent}="S14"'>
<true>
<assign value='"02"' property='target.{QPA:QPA01CodeAction}' action='set' />
</true>
</if>
<if condition='source.{MSH:MessageType.triggerevent}="S15"'>
<true>
<assign value='"03"' property='target.{QPA:QPA01CodeAction}' action='set' />
</true>
</if>

<if condition='source.{PIDgrp(1).PV1:PatientClass}="I"'>
<true>
<assign value='"HCO"' property='target.{QPA:QPA02TypeEpisode}' action='set' />
</true>
</if>
<if condition='source.{PIDgrp(1).PV1:PatientClass}="O"'>
<true>
<assign value='"EXT"' property='target.{QPA:QPA02TypeEpisode}' action='set' />
</true>
</if>
<assign value='$E(source.{MSH:DateTimeOfMessage},1,12)' property='target.{QPA:QPA03DateHeureCreation}' action='set' />
<assign value='$E(source.{PIDgrp(1).PV1:AdmitDateTime},1,12)' property='target.{QPA:QPA04DateHeurePrevueAdmissio}' action='set' />
<assign value='source.{PIDgrp(1).PID:PatientIdentifierList(1).ID}' property='target.{QPA:QPA05IPP}' action='set' />
<assign value='source.{PIDgrp(1).PV1:VisitNumber.ID}' property='target.{QPA:QPA06NumeroEpisode}' action='set' />
<assign value='source.{PIDgrp(1).PV1:AssignedPatientLocation.pointofcare}' property='target.{QPA:QPA07CodeUSOuUC}' action='set' />
<assign value='source.{PIDgrp(1).PV1:AttendingDoctor(1).IDnumberST}' property='target.{QPA:QPA09CodeMedecin}' action='set' />
<assign value='"1"' property='target.{QPA:QPA10ModeEntree}' action='set' />
<assign value='"C3"' property='target.{QPA:QPA11CelluleDeGestion}' action='set' />
<code>
 Set com = $REPLACE(source.GetValueAt("NTE(1):Comment(1)"),"\.br\","- ") 
 Set com = ##class(EnsLib.HL7.Segment).UnescapeEx(com, source.Separators)
</code>
<!-- <assign value='$REPLACE(source.{NTE(1):Comment(1)},"\.br\","- ")' property='target.{QPA:QPA12Commentaire}' action='set' /> -->
<assign value='com' property='target.{QPA:QPA12Commentaire}' action='set' />
<assign value='source.{SCH:FillerAppointmentID.entityidentifier}' property='target.{QPA:QPA13NumeroItemAttente}' action='set' />
<assign value='$E(source.{SCH:AppointmentTimingQuantity(1).startdatetime},1,8)' property='target.{QPA:QPA14DateRDV}' action='set' />
</transform>
]]></Data>
</XData>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>
</Class>


<Class name="ISSAS.Sites.Bayonne.PRD.DTL.QPLANNERtoCCOM.SIUtoSIU">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>63019,52782.627047</TimeChanged>
<TimeCreated>62789,36794.179623</TimeCreated>
<DependsOn>EnsLib.HL7.Message,ISSAS.Common.Message.ClinicomHL7</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='ISSAS.Common.Message.ClinicomHL7' sourceDocType='2.3.1:SIU_S12' targetDocType='ClinicomReceiver:SIU' create='new' language='objectscript' >
<assign value='"QPLANNER"' property='target.{MSH:MSH03SendingApplication}' action='set' />
<if condition='source.{MSH:MessageType.triggerevent}="S12"'>
<true>
<assign value='"01"' property='target.{SIU:SIU01CodeAction}' action='set' />
</true>
</if>
<if condition='source.{MSH:MessageType.triggerevent}="S13"'>
<true>
<assign value='"02"' property='target.{SIU:SIU01CodeAction}' action='set' />
</true>
</if>
<if condition='source.{MSH:MessageType.triggerevent}="S14"'>
<true>
<assign value='"02"' property='target.{SIU:SIU01CodeAction}' action='set' />
</true>
</if>
<if condition='source.{MSH:MessageType.triggerevent}="S15"'>
<true>
<assign value='"03"' property='target.{SIU:SIU01CodeAction}' action='set' />
</true>
</if>
<assign value='"QPLANNER"' property='target.{SIU:SIU02IdentifiantModuleProduc}' action='set' />
<assign value='source.{SCH:FillerAppointmentID.entityidentifier}' property='target.{SIU:SIU03IdentifiantUniqueRDV}' action='set' />
<assign value='"P"' property='target.{SIU:SIU04TypeEntiteAttendue}' action='set' />
<assign value='source.{PIDgrp(1).PID:PatientIdentifierList(1).ID}' property='target.{SIU:SIU05IPP}' action='set' />
<assign value='source.{SCH:PlacerContactPerson(1)}' property='target.{SIU:SIU06CodeAgenda}' action='set' />
<assign value='$E(source.{SCH:AppointmentTimingQuantity(1).startdatetime},1,12)' property='target.{SIU:SIU07DateHeureDebutRDV}' action='set' />
<assign value='$E(source.{SCH:AppointmentTimingQuantity(1).enddatetime},1,12)' property='target.{SIU:SIU08DateHeureFinRDV}' action='set' />
<if condition='$L(source.{SCH:FillerStatusCode.text})'>
<true>
<assign value="..Lookup(&quot;ISSAS.Sites.Bayonne.PRD.LUT.Qplanner_StatutRDV&quot;,source.{SCH:FillerStatusCode.text})" property='target.{SIU:SIU09StatutRDV}' action='set' />
</true>
<false>
<assign value="..Lookup(&quot;ISSAS.Sites.Bayonne.PRD.LUT.Qplanner_StatutRDV&quot;,source.{SCH:FillerStatusCode})" property='target.{SIU:SIU09StatutRDV}' action='set' />
</false>
</if>
<assign value='"9999"' property='target.{SIU:SIU10PrestationAgenda}' action='set' />
<assign value='"0"' property='target.{SIU:SIU11TypeRessource}' action='set' />
<assign value='source.{RGSgrp(1).AIPgrp(1).AIP:PersonnelResourceID(1).IDnumberST}' property='target.{SIU:SIU12CodeRessource}' action='set' />
<assign value='source.{RGSgrp(1).AIPgrp(1).NTE(1):Comment(1)}' property='target.{SIU:SIU14Commentaire}' action='set' />
<assign value='source.{RGSgrp(1).AISgrp(1).AIS:UniversalServiceID.text}' property='target.{SIU:SIU14Commentaire}' action='set' />
</transform>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Sites.Bayonne.PRD.DTL.TCtoCCOM.SIUtoSIU">
<Description>
</Description>
<Super>ISSAS.Common.DTL.TCtoCCOM.SIUtoSIU</Super>
<TimeChanged>63222,56925.427905</TimeChanged>
<TimeCreated>62539,40547.29409</TimeCreated>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.HL7.Message' targetClass='ISSAS.Common.Message.ClinicomHL7' sourceDocType='TrakCare:SIU_S12' targetDocType='ClinicomReceiver:SIU' create='new' language='objectscript' >
<code>
<![CDATA[ Set tSC = ##super(source, .target, $G(aux))  If ($$$ISERR(tSC)) { Quit } ]]]]><![CDATA[>
</code>

<!-- code agenda -->
<assign value='..Lookup("ISSAS.Sites.Bayonne.PRD.LUT.TrakCare_Agendas",source.{SCH:PlacerContactPerson(1).IDnumberST})' property='target.{SIU:SIU06CodeAgenda}' action='set' />

</transform>
]]></Data>
</XData>
</Class>










<Class name="ISSAS.Sites.Bayonne.PRD.Prod.RouterCCOMSourceRoutingRule">
<Description>
Clinicom Source</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.Rule.Definition</Super>
<TimeChanged>65513,33770.78617</TimeChanged>
<TimeCreated>62518,61782.626293</TimeCreated>

<Parameter name="RuleAssistClass">
<Default>EnsLib.MsgRouter.VDocRuleAssistCompatible</Default>
</Parameter>

<XData name="RuleDefinition">
<XMLNamespace>http://www.intersystems.com/rule</XMLNamespace>
<Data><![CDATA[
<ruleDefinition alias="" context="EnsLib.MsgRouter.VDocRoutingEngine" production="ISSAS.Sites.Bayonne.PRD.Prod.Production">
<ruleSet name="" effectiveBegin="" effectiveEnd="">
<rule name="ADT (tous mouvements HPRIM)" disabled="false">
<constraint name="source" value="TCPClinicomHPRIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="ADT,SOR"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="ADT,SOR"></constraint>
<when condition="1">
</when>
</rule>
<rule name="ADT (Mouvements HPRIM Saint Palais)" disabled="false">
<constraint name="source" value="TCPClinicomHPRIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docName" value="ADT,SOR"></constraint>
<when condition="(Document.{P:P21CodeEtablissement}=&quot;01&quot;)">
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMToAXBIOCEAN.ADTToADM" target="AxBiocean.ADT.FTP"></send>
</when>
</rule>
<rule name="AD (admission hospit)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="Clinicom:AD"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.ADtoADT" target="Hemadialyse.ADT.FTP,LOGIPREN.ADT.TCP,VENUS.ADT.TCP,LOGIPRENv2.ADT.TCP"></send>
</when>
</rule>
<rule name="AD (admission hospit SYSEO)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="Clinicom:AD"></constraint>
<when condition="Document.{AD3:AD320DateHeureAdmission}&gt;=&quot;201701010000&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.ADtoADT" target="SYSEO.ADT.TCP"></send>
</when>
</rule>
<rule name="AD (admission hospit) NON HISTORIQUE" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="AD01,AD02,AD03,AD04,AD05"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="AD"></constraint>
<when condition="Document.{AD7:AD711IndicateurDernierMouvem}=&quot;1&quot;">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.ADtoADT" target="TCPDraegerOut,TCPQcareOut,FileCopiloteOut,TCPViewpointOut"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.ADtoADT" target="FTPHemosOut,FTPImageOut"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.ADtoADT" target="Glims.ADT.TCP"></send>
</when>
</rule>
<rule name="AD (admission hospit) pour CHIMIO" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="AD01,AD02,AD03,AD04,AD05"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="AD"></constraint>
<when condition="(Document.{AD7:AD711IndicateurDernierMouvem}=&quot;1&quot;)&amp;&amp;(Document.{AD3:AD306CodeUF} DoesNotContain &quot;S4&quot;)&amp;&amp;(Document.{AD3:AD306CodeUF} DoesNotContain &quot;S5&quot;)&amp;&amp;(Document.{AD3:AD306CodeUF} DoesNotContain &quot;S8&quot;)">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoCHIMIO.ADtoADT" target="FileChimioOut"></send>
</when>
</rule>
<rule name="AD (admission hospit) pour GRAAL" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="AD01,AD02,AD03,AD04,AD05"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="AD"></constraint>
<when condition="(Document.{AD7:AD711IndicateurDernierMouvem}=&quot;1&quot;)&amp;&amp;(Lookup(&quot;ISSAS.Sites.Bayonne.PRD.LUT.Graal_US&quot;,Document.{AD3:AD305CodeUS})=&quot;&quot;)">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoGRAAL.ADtoADT" target="FTPGraalOut"></send>
<return></return>
</when>
</rule>
<rule name="AS (annulation séjour) sauf préad" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="AS01,AS03,AS04,AS05"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="Clinicom:AS"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.AStoADT" target="TCPDraegerOut,TCPViewpointOut"></send>
</when>
</rule>
<rule name="AS (annulation séjour)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="Clinicom:AS"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.AStoADT" target="TCPQcareOut,FileCopiloteOut"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.AStoADT" target="SYSEO.ADT.TCP,Hemadialyse.ADT.FTP,LOGIPREN.ADT.TCP,VENUS.ADT.TCP,LOGIPRENv2.ADT.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.AStoADT" target="Glims.ADT.TCP"></send>
</when>
</rule>
<rule name="CM (Cession Medicament)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="CM01,CM02,CM03"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="Clinicom:CM"></constraint>
<when condition="Document.{CM2:CM202CodeDuMedicament}!=&quot;F28&quot;">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoPIMPIRIN.CMtoCESSION" target="FTPPimpirinOut"></send>
<return></return>
</when>
</rule>
<rule name="DB (Document Bureautique)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DB"></constraint>
<when condition="1">
<send transform="" target="BPClinicomMMA"></send>
<return></return>
</when>
</rule>
<rule name="DL (Médecins du patient)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DL"></constraint>
<when condition="1">
<return></return>
</when>
</rule>
<rule name="DM (Médecins extérieurs)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DM"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<return></return>
</when>
</rule>
<rule name="DMP" disabled="false">
<constraint name="source" value="TCPClinicomDMPIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DMP"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoDMP.DMPSeb" target="FileDMPOut"></send>
<return></return>
</when>
</rule>
<rule name="DO (Données Complémentaires)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DO"></constraint>
<when condition="1">
</when>
</rule>
<rule name="DR" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DR"></constraint>
<when condition="1">
<return></return>
</when>
</rule>
<rule name="DS (sortie hospit) pour HEMO et IMAGE" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="DS01,DS02"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DS"></constraint>
<when condition="Document.{DS:DS18TypeDepartLongSejour}=&quot;&quot;">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.DStoADT" target="FTPHemosOut,FTPImageOut"></send>
</when>
</rule>
<rule name="DS (sortie hospit)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DS"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.DStoADT" target="TCPDraegerOut,TCPQcareOut,FileCopiloteOut,TCPViewpointOut"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.DStoADT" target="SYSEO.ADT.TCP,Hemadialyse.ADT.FTP,LOGIPREN.ADT.TCP,VENUS.ADT.TCP,LOGIPRENv2.ADT.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.DStoADT" target="Glims.ADT.TCP"></send>
</when>
</rule>
<rule name="DS (sortie hospit) pour GRAAL" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="DS01,DS02,DS03"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DS"></constraint>
<when condition="(Lookup(&quot;ISSAS.Sites.Bayonne.PRD.LUT.Graal_US&quot;,Document.{DS:DS14CodeUS})=&quot;&quot;)">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoGRAAL.DStoADT" target="FTPGraalOut"></send>
</when>
</rule>
<rule name="HM (Médecins de l&apos;établissement)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="HM"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.HMtoMFN" target="GLIMS.MFN.File"></send>
<return></return>
</when>
</rule>
<rule name="IA (Indisponibilités Agenda)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="IA"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.AGENDAtoQPLANNER.IAtoSIU" target="TCPQplannerOut"></send>
<return></return>
</when>
</rule>
<rule name="ND (sortie nouveau-né) sauf annulation" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="ND01,ND02"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="ND"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.NDtoADT" target="FTPHemosOut,FTPImageOut"></send>
</when>
</rule>
<rule name="ND (sortie nouveau-né)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="ND"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.NDtoADT" target="TCPDraegerOut,TCPQcareOut,FileCopiloteOut,TCPViewpointOut"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.NDtoADT" target="SYSEO.ADT.TCP,Hemadialyse.ADT.FTP,LOGIPREN.ADT.TCP,VENUS.ADT.TCP,LOGIPRENv2.ADT.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.NDtoADT" target="Glims.ADT.TCP"></send>
</when>
</rule>
<rule name="NR (enregistrement nouveau-né)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="NR"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.NRtoADT" target="SYSEO.ADT.TCP,Hemadialyse.ADT.FTP,LOGIPREN.ADT.TCP,VENUS.ADT.TCP,LOGIPRENv2.ADT.TCP"></send>
</when>
</rule>
<rule name="NR (enregistrement nouveau-né) non historique" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="NR"></constraint>
<when condition="Document.{NR3:NR308IndicateurDernierMouvem}=&quot;1&quot;">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.NRtoADT" target="TCPDraegerOut,TCPQcareOut,FileCopiloteOut,TCPViewpointOut"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.NRtoADT" target="FTPHemosOut,FTPImageOut"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.NRtoADT" target="Glims.ADT.TCP"></send>
</when>
</rule>
<rule name="OD (cloture externe)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="OD"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.OD2toADT" target="TCPQcareOut"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.OD2toADT" target="SYSEO.ADT.TCP,Hemadialyse.ADT.FTP,LOGIPREN.ADT.TCP,VENUS.ADT.TCP,LOGIPRENv2.ADT.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.ODtoADT" target="Glims.ADT.TCP"></send>
<return></return>
</when>
</rule>
<rule name="OP (pré consultation)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="OP01,OP02"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="OP"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.OPtoADT" target="TCPDraegerOut,TCPQcareOut,FileCopiloteOut,TCPViewpointOut"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.OPtoADT" target="FTPHemosOut,FTPImageOut"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.OPtoADT" target="LOGIPREN.ADT.TCP,Hemadialyse.ADT.FTP,LOGIPRENv2.ADT.TCP"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.OPtoADT" target="Glims.ADT.TCP"></send>
<return></return>
</when>
</rule>
<rule name="OR (enregistrement externe) pour CHIMIO" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="OR"></constraint>
<when condition="Document.{OR3:OR315MedecinResponsable.CodeClinicom} In &quot;LAREDO,REMYSTE&quot;">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoCHIMIO.ORtoADT" target="FileChimioOut"></send>
</when>
</rule>
<rule name="OR (enregistrement externe)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="OR"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.ORtoADT" target="TCPDraegerOut,TCPQcareOut,FileCopiloteOut,TCPViewpointOut"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.ORtoADT" target="FTPHemosOut,FTPImageOut"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.ORtoADT" target="Hemadialyse.ADT.FTP,LOGIPREN.ADT.TCP,VENUS.ADT.TCP,LOGIPRENv2.ADT.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.ORtoADT" target="Glims.ADT.TCP"></send>
</when>
</rule>
<rule name="OR (enregistrement externe issu des Bornes pour TRAKCARE)" disabled="false">
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="OR01,OR02,OR03,OR04,OR05"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="OR"></constraint>
<when condition="Document.{OR3:OR320Utilisateur.Nom} = &quot;BORNE ADMISSIONS&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoTC.ORtoADT" target="TCPTrakCareOut"></send>
</when>
</rule>
<rule name="OR (enregistrement externe SYSEO)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="OR"></constraint>
<when condition="Document.{OR3:OR307DateHeureEnregistrement}&gt;=&quot;201701010000&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.ORtoADT" target="SYSEO.ADT.TCP"></send>
</when>
</rule>
<rule name="ORM (prescriptions LABO)" disabled="false">
<constraint name="source" value="TCPClinicomHPRIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="ORM"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="ORM"></constraint>
<when condition="Document.{H:H09Destinataire.Code}=&quot;DORNER&quot;">
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS.ORMtoOML" target="Glims.OML.File"></send>
<return></return>
</when>
</rule>
<rule name="PA (pré admission)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PA"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.PAtoADT" target="SYSEO.ADT.TCP,Hemadialyse.ADT.FTP,VENUS.ADT.TCP"></send>
</when>
</rule>
<rule name="PA (pré admission) NON HISTORIQUE" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="PA01,PA02,PA03"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PA"></constraint>
<when condition="Document.{PA7:PA711IndicateurDernierMouvem}=&quot;1&quot;">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.PAtoADT" target="TCPDraegerOut,TCPQcareOut,FileCopiloteOut"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.PAtoADT" target="FTPHemosOut,FTPImageOut"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.PAtoADT" target="Glims.ADT.TCP"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="PB (Démographie base)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="PB01,PB02"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PB"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.PBtoADT" target="Glims.ADT.TCP"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="PB (Démographie) pour Doctolib" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="PB01,PB02"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PB"></constraint>
<when condition="(Document.{PB:PMB1Mode}=&quot;01&quot;) &amp;&amp; (Document.{PB2:PB219IPPAutre(1)}=&quot;&quot;) || Not(ToUpper(Document.{PB2:PB219IPPAutre(1).Type})=&quot;DOCTOLIB&quot;)">
<send transform="ISSAS.Common.DTL.CCOMtoDOCTOLIB.PBtoADT" target="DOCTOLIB.ADT.HTTP"></send>
</when>
<when condition="Document.{PB:PB01Mode}=&quot;02&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoDOCTOLIB.PBtoADT" target="DOCTOLIB.ADT.HTTP"></send>
</when>
</rule>
<rule name="PB (Démographie base) MODIFICATION SEULEMENT" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="PB02"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PB"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.PBtoADT" target="TCPQcareOut,FileCopiloteOut,TCPViewpointOut"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.PBtoADT" target="FTPHemosOut,FTPImageOut"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.PBtoADT" target="SYSEO.ADT.TCP,Hemadialyse.ADT.FTP,LOGIPREN.ADT.TCP,VENUS.ADT.TCP,LOGIPRENv2.ADT.TCP"></send>
</when>
</rule>
<rule name="PL (Cloture pre admission)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="PL01,PL02,PL03"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PL"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.PLtoADT" target="Hemadialyse.ADT.FTP"></send>
<return></return>
</when>
</rule>
<rule name="PM (Fusion)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="PM01,PM02"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PM"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.PMtoADT" target="SYSEO.ADT.TCP,LOGIPREN.ADT.TCP,VENUS.ADT.TCP,LOGIPRENv2.ADT.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.PMtoADT" target="Glims.ADT.TCP"></send>
</when>
</rule>
<rule name="PM (Fusion) IDENTITES SEULEMENT" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="PM01"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PM"></constraint>
<when condition="Document.{PM:PM01Mode}=&quot;01&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.PMtoADT" target="TCPDraegerOut,TCPQcareOut,TCPViewpointOut"></send>
<send transform="ISSAS.Common.DTL.Doctolib.CCOMtoHL7v25PMtoADT" target="DOCTOLIB.ADT.HTTP"></send>
</when>
</rule>
<rule name="RI (retour permission)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="RI"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.RItoADT" target="SYSEO.ADT.TCP,VENUS.ADT.TCP"></send>
</when>
</rule>
<rule name="RI (retour permission) pour GRAAL" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="RI01,RI02,RI03"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="RI"></constraint>
<when condition="(Document.{RI: RI20IndicateurDernierMouveme}=&quot;1&quot;)&amp;&amp;(Lookup(&quot;ISSAS.Sites.Bayonne.PRD.LUT.Graal_US&quot;,Document.{RI:RI09CodeUS})=&quot;&quot;)">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoGRAAL.RItoADT" target="FTPGraalOut"></send>
</when>
</rule>
<rule name="RI (retour permission) non HISTORIQUE" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="RI"></constraint>
<when condition="Document.{RI: RI20IndicateurDernierMouveme}=&quot;1&quot;">
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.RItoADT" target="Glims.ADT.TCP"></send>
</when>
</rule>
<rule name="SD (départ permission)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="SD"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.SDtoADT" target="SYSEO.ADT.TCP,VENUS.ADT.TCP"></send>
</when>
</rule>
<rule name="SD (départ permission) pour GRAAL" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="SD"></constraint>
<when condition="(Document.{SD:SD18IndicateurDernierMouveme}=&quot;1&quot;)&amp;&amp;(Lookup(&quot;ISSAS.Sites.Bayonne.PRD.LUT.Graal_US&quot;,Document.{SD:SD12CodeUS})=&quot;&quot;)">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoGRAAL.SDtoADT" target="FTPGraalOut"></send>
</when>
</rule>
<rule name="SD (départ permission) non HISTORIQUE" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="SD01,SD02,SD03"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="SD"></constraint>
<when condition="Document.{SD:SD18IndicateurDernierMouveme}=&quot;1&quot;">
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.SDtoADT" target="Glims.ADT.TCP"></send>
</when>
</rule>
<rule name="SU (sorties urgence)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="SU01,SU02,SU03"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="SU"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<return></return>
</when>
</rule>
<rule name="TR (mutations et venues)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="TR"></constraint>
<when condition="Document.{TR:TR17TypeMutation}=&quot;1&quot;">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
<when condition="Document.{TR:TR17TypeMutation}=&quot;2&quot;">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.TRtoADT" target="SYSEO.ADT.TCP,Hemadialyse.ADT.FTP,LOGIPREN.ADT.TCP,VENUS.ADT.TCP,LOGIPRENv2.ADT.TCP"></send>
</when>
</rule>
<rule name="TR (mutation) pour CHIMIO" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="TR"></constraint>
<when condition="(Document.{TR:TR17TypeMutation}=&quot;0&quot;)&amp;&amp; (Document.{TR:TR26IndicateurDernierMouveme}=&quot;1&quot;)&amp;&amp;(Document.{TR:TR13CodeUF} DoesNotContain &quot;S4&quot;)&amp;&amp;(Document.{TR:TR13CodeUF} DoesNotContain &quot;S5&quot;)&amp;&amp;(Document.{TR:TR13CodeUF} DoesNotContain &quot;S8&quot;)">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoCHIMIO.TRtoADT" target="FileChimioOut"></send>
</when>
</rule>
<rule name="TR (mutation) pour GRAAL" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="TR"></constraint>
<when condition="(Document.{TR:TR17TypeMutation}=&quot;0&quot;)&amp;&amp;(Document.{TR:TR26IndicateurDernierMouveme}=&quot;1&quot;)&amp;&amp;(Lookup(&quot;ISSAS.Sites.Bayonne.PRD.LUT.Graal_US&quot;,Document.{TR:TR09CodeUS})=&quot;&quot;)">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoGRAAL.TRtoADT" target="FTPGraalOut"></send>
</when>
</rule>
<rule name="TR (mutation) non historique" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="TR"></constraint>
<when condition="(Document.{TR:TR17TypeMutation}=&quot;1&quot;) &amp;&amp; (Document.{TR:TR26IndicateurDernierMouveme}=&quot;1&quot;)">
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.EVtoADT" target="Glims.ADT.TCP"></send>
</when>
<when condition="(Document.{TR:TR17TypeMutation}=&quot;2&quot;) &amp;&amp; (Document.{TR:TR26IndicateurDernierMouveme}=&quot;1&quot;)">
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.SVtoADT" target="Glims.ADT.TCP"></send>
</when>
<when condition="(Document.{TR:TR17TypeMutation}=&quot;0&quot;)&amp;&amp; (Document.{TR:TR26IndicateurDernierMouveme}=&quot;1&quot;)">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.TRtoADT" target="TCPDraegerOut,TCPQcareOut,FileCopiloteOut,TCPViewpointOut"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.TRtoADT" target="FTPHemosOut,FTPImageOut"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.TRtoADT" target="Glims.ADT.TCP"></send>
</when>
</rule>
<rule name="UR (urgence)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="UR"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.URtoADT" target="Hemadialyse.ADT.FTP,LOGIPREN.ADT.TCP,VENUS.ADT.TCP,LOGIPRENv2.ADT.TCP"></send>
</when>
</rule>
<rule name="UR (urgence SYSEO)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="UR"></constraint>
<when condition="Document.{UR3:UR307DateHeureEnregistrement}&gt;=&quot;201701010000&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.URtoADT" target="SYSEO.ADT.TCP"></send>
</when>
</rule>
<rule name="UR (urgence) NON HISTORIQUE" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="UR"></constraint>
<when condition="Document.{UR3:UR316IndicateurDernierMouvem}=&quot;1&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.URtoADT" target="TCPDraegerOut,TCPQcareOut,FileCopiloteOut,TCPViewpointOut"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.URtoADT" target="FTPHemosOut,FTPImageOut"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.URtoADT" target="Glims.ADT.TCP"></send>
<return></return>
</when>
</rule>
<rule name="UF (FDB des UF)" disabled="false">
<constraint name="source" value="TCPClinicomSTDIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="UF"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.UFtoMFN" target="GLIMS.MFN.File"></send>
</when>
</rule>
</ruleSet>
</ruleDefinition>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Sites.Bayonne.TRN.Prod.RouterCCOMSourceRoutingRule">
<Description>
Clinicom Source</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.Rule.Definition</Super>
<TimeChanged>65499,39303.02095</TimeChanged>
<TimeCreated>62518,61782.626293</TimeCreated>

<Parameter name="RuleAssistClass">
<Default>EnsLib.MsgRouter.VDocRuleAssistCompatible</Default>
</Parameter>

<XData name="RuleDefinition">
<XMLNamespace>http://www.intersystems.com/rule</XMLNamespace>
<Data><![CDATA[
<ruleDefinition alias="" context="EnsLib.MsgRouter.VDocRoutingEngine" production="ISSAS.Sites.Bayonne.TRN.Prod.Production">
<ruleSet name="" effectiveBegin="" effectiveEnd="">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.ADtoADT" target="HealthConnect.KSC,Health Connect CHCB"></send>
<rule name="ADT (Mouvements HPRIM Saint Palais)" disabled="false">
<constraint name="source" value="CLINICOM.HPR.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docName" value="ADT,SOR"></constraint>
<when condition="(Document.{P:P21CodeEtablissement}=&quot;01&quot;)">
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMToAXBIOCEAN.ADTToADM" target="AxBiocean.ADT.FTP"></send>
</when>
</rule>
<rule name="ADT (tous mouvements HPRIM)" disabled="false">
<constraint name="source" value="CLINICOM.HPR.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="ADT,SOR"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="ADT,SOR"></constraint>
<when condition="1">
</when>
</rule>
<rule name="AD (admission hospit)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="Clinicom:AD"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.ADtoADT" target="LOGIPREN.ADT.TCP,Hemadialyse.ADT.FTP,VENUS.ADT.TCP,VENUS.ADT.File"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="AD (admission hospit SYSEO)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="Clinicom:AD"></constraint>
<when condition="Document.{AD3:AD320DateHeureAdmission}&gt;=&quot;201701010000&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.ADtoADT" target="SYSEO.ADT.TCP"></send>
</when>
</rule>
<rule name="AD (admission hospit) NON HISTORIQUE" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="AD"></constraint>
<when condition="Document.{AD7:AD711IndicateurDernierMouvem}=&quot;1&quot;">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.ADtoADT" target="QCARE.ADT.TCP,COPILOTE.ADT.File,SMS.ADT.TCP,VIEWPOINT.ADT.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.ADtoADT" target="IMAGE.ADT.File"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.ADtoADT" target="GLIMS.ADT.File"></send>
</when>
</rule>
<rule name="AD (admission hospit) pour CHIMIO" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="AD"></constraint>
<when condition="(Document.{AD7:AD711IndicateurDernierMouvem}=&quot;1&quot;)&amp;&amp;(Document.{AD3:AD306CodeUF} DoesNotContain &quot;S4&quot;)&amp;&amp;(Document.{AD3:AD306CodeUF} DoesNotContain &quot;S5&quot;)&amp;&amp;(Document.{AD3:AD306CodeUF} DoesNotContain &quot;S8&quot;)">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoCHIMIO.ADtoADT" target="CHIMIO.ADT.File"></send>
</when>
</rule>
<rule name="AP (rendez-vous)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="AP1"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoTC.APtoSRM" target="TRAKCARE.SRM.TCP"></send>
<return></return>
</when>
</rule>
<rule name="AS (annulation séjour) sauf pread" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="AS01,AS03,AS04,AS05"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="Clinicom:AS"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.AStoADT" target="VIEWPOINT.ADT.TCP"></send>
</when>
</rule>
<rule name="AS (annulation séjour)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="Clinicom:AS"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.AStoADT" target="QCARE.ADT.TCP,COPILOTE.ADT.File"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.AStoADT" target="LOGIPREN.ADT.TCP,SYSEO.ADT.TCP,Hemadialyse.ADT.FTP,VENUS.ADT.TCP,VENUS.ADT.File"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.AStoADT" target="GLIMS.ADT.File"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="DB (Document Bureautique)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DB"></constraint>
<when condition="1">
<send transform="" target="BP.MMA.CLINICOM"></send>
</when>
</rule>
<rule name="DL (Médecins du patient)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DL"></constraint>
<when condition="1">
<return></return>
</when>
</rule>
<rule name="DM (Médecins extérieurs)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DM"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="DMP" disabled="false">
<constraint name="source" value="CLINICOM.DMP.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DOC,DMP"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoDMP.DMPSeb" target="DMP.File"></send>
<return></return>
</when>
</rule>
<rule name="DO (Données Complémentaires)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DO"></constraint>
<when condition="1">
<return></return>
</when>
</rule>
<rule name="DR" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DR"></constraint>
<when condition="1">
<return></return>
</when>
</rule>
<rule name="DS (sortie hospit)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DS"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.DStoADT" target="QCARE.ADT.TCP,COPILOTE.ADT.File,SMS.ADT.TCP,VIEWPOINT.ADT.TCP"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.DStoADT" target="LOGIPREN.ADT.TCP,SYSEO.ADT.TCP,Hemadialyse.ADT.FTP,VENUS.ADT.TCP,VENUS.ADT.File"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.DStoADT" target="GLIMS.ADT.File"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="DS (sortie hospit) pour INFOSERV" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="DS"></constraint>
<when condition="(Lookup(&quot;ISSAS.Sites.Bayonne.PRD.LUT.Infoserv_US&quot;,Document.{DS:DS14CodeUS})!=&quot;&quot;) &amp;&amp; (Document.{DS:DS18TypeDepartLongSejour}=&quot;&quot;)">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoINFOSERV.DStoUP2" target="INFOSERV.TEL.TCP"></send>
</when>
</rule>

<rule name="HM (Médecins de l&apos;établissement)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="HM"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.HMtoMFN" target="GLIMS.MFN.File"></send>
</when>
</rule>
<rule name="IA (Indisponibilités Agenda)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="IA"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.AGENDAtoQPLANNER.IAtoSIU" target="QPLANNER.SIU.OUT.TCP"></send>
</when>
</rule>
<rule name="ND (sortie nouveau-né)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="ND"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.NDtoADT" target="QCARE.ADT.TCP,COPILOTE.ADT.File,VIEWPOINT.ADT.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.NDtoADT" target="GLIMS.ADT.File"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.NDtoADT" target="LOGIPREN.ADT.TCP,SYSEO.ADT.TCP,Hemadialyse.ADT.FTP,VENUS.ADT.TCP,VENUS.ADT.File"></send>
</when>
</rule>
<rule name="NR (enregistrement nouveau-né)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="NR"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.NRtoADT" target="LOGIPREN.ADT.TCP,SYSEO.ADT.TCP,VENUS.ADT.TCP"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="NR (enregistrement nouveau-né) non historique" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="NR"></constraint>
<when condition="Document.{NR3:NR308IndicateurDernierMouvem}=&quot;1&quot;">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.NRtoADT" target="QCARE.ADT.TCP,COPILOTE.ADT.File,VIEWPOINT.ADT.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.NRtoADT" target="GLIMS.ADT.File"></send>
</when>
</rule>
<rule name="OD (cloture externe)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="OD"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.OD2toADT" target="QCARE.ADT.TCP"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.OD2toADT" target="LOGIPREN.ADT.TCP,SYSEO.ADT.TCP,Hemadialyse.ADT.FTP,VENUS.ADT.TCP,VENUS.ADT.File"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.ODtoADT" target="GLIMS.ADT.File"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="OP (pré consultation)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="OP"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.OPtoADT" target="QCARE.ADT.TCP,COPILOTE.ADT.File,VIEWPOINT.ADT.TCP"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.OPtoADT" target="Hemadialyse.ADT.FTP"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.OPtoADT" target="GLIMS.ADT.File"></send>
</when>
</rule>
<rule name="OR (enregistrement externe) pour CHIMIO" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="OR"></constraint>
<when condition="Document.{OR3:OR315MedecinResponsable.CodeClinicom} In &quot;LAREDO,REMYSTE&quot;">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoCHIMIO.ORtoADT" target="CHIMIO.ADT.File"></send>
</when>
</rule>
<rule name="OR (enregistrement externe)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="OR"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.ORtoADT" target="QCARE.ADT.TCP,COPILOTE.ADT.File,SMS.ADT.TCP,VIEWPOINT.ADT.TCP"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.ORtoADT" target="LOGIPREN.ADT.TCP,Hemadialyse.ADT.FTP,VENUS.ADT.TCP,VENUS.ADT.File"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.ORtoADT" target="GLIMS.ADT.File"></send>
</when>
</rule>
<rule name="OR (enregistrement externe SYSEO)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="OR"></constraint>
<when condition="Document.{OR3:OR307DateHeureEnregistrement}&gt;=&quot;201701010000&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.ORtoADT" target="SYSEO.ADT.TCP"></send>
</when>
</rule>
<rule name="ORM (prescriptions LABO)" disabled="false">
<constraint name="source" value="CLINICOM.HPR.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="ORM"></constraint>
<when condition="Document.{H:H09Destinataire.Code}=&quot;DORNER&quot;">
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS.ORMtoOML" target="GLIMS.OML.File"></send>
</when>
</rule>
<rule name="PA (pré admission)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PA"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.PAtoADT" target="SYSEO.ADT.TCP,Hemadialyse.ADT.FTP,VENUS.ADT.TCP,VENUS.ADT.File"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="PA (pré admission) NON HISTORIQUE" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PA"></constraint>
<when condition="Document.{PA7:PA711IndicateurDernierMouvem}=&quot;1&quot;">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.PAtoADT" target="QCARE.ADT.TCP,COPILOTE.ADT.File"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.PAtoADT" target="GLIMS.ADT.File"></send>
</when>
</rule>
<rule name="PB (Démographie base)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="PB01,PB02"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PB"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.PBtoADT" target="GLIMS.ADT.File"></send>
</when>
</rule>
<rule name="PB (Démographie) pour TRAK" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="PB01,PB02"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PB"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="PB (Démographie base) MODIFICATION SEULEMENT" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="PB02"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PB"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.PBtoADT" target="QCARE.ADT.TCP,COPILOTE.ADT.File,VIEWPOINT.ADT.TCP"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.PBtoADT" target="LOGIPREN.ADT.TCP,SYSEO.ADT.TCP,Hemadialyse.ADT.FTP,VENUS.ADT.TCP,VENUS.ADT.File"></send>
</when>
</rule>
<rule name="PL (Cloture pre admission)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PL"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="PM (Fusion)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="PM01,PM02"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PM"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.PMtoADT" target="LOGIPREN.ADT.TCP,SYSEO.ADT.TCP,VENUS.ADT.TCP,VENUS.ADT.File"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.PMtoADT" target="GLIMS.ADT.File"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.PMtoADT" target="MONDOCTEUR.SIU.OUT.TCP"></send>
</when>
</rule>
<rule name="PM (Fusion) IDENTITES SEULEMENT" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docName" value="PM01"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="PM"></constraint>
<when condition="Document.{PM:PM01Mode}=&quot;01&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.PMtoADT" target="QCARE.ADT.TCP,VIEWPOINT.ADT.TCP"></send>
</when>
</rule>
<rule name="RI (retour permission)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="RI"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.RItoADT" target="SYSEO.ADT.TCP,VENUS.ADT.TCP,VENUS.ADT.File"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="RI (retour permission) non HISTORIQUE" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="RI"></constraint>
<when condition="Document.{RI: RI20IndicateurDernierMouveme}=&quot;1&quot;">
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.RItoADT" target="GLIMS.ADT.File"></send>
</when>
</rule>
<rule name="SD (départ permission)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="SD"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.SDtoADT" target="SYSEO.ADT.TCP,VENUS.ADT.TCP,VENUS.ADT.File"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="SD (départ permission) non HISTORIQUE" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="SD"></constraint>
<when condition="Document.{SD:SD18IndicateurDernierMouveme}=&quot;1&quot;">
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.SDtoADT" target="GLIMS.ADT.File"></send>
</when>
</rule>
<rule name="SU (sorties urgence)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="SU"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="TR (mutation et séance)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="TR"></constraint>
<when condition="Document.{TR:TR17TypeMutation}=&quot;1&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.EVtoADT" target="Hemadialyse.ADT.FTP"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
<when condition="Document.{TR:TR17TypeMutation}=&quot;2&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.SVtoADT" target="Hemadialyse.ADT.FTP"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.TRtoADT" target="LOGIPREN.ADT.TCP,SYSEO.ADT.TCP,Hemadialyse.ADT.FTP,VENUS.ADT.TCP,VENUS.ADT.File"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="TR (mutations et venues) pour INFOSERV" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="TR"></constraint>
<when condition="(Document.{TR:TR26IndicateurDernierMouveme}=&quot;1&quot;) &amp;&amp; (Lookup(&quot;ISSAS.Sites.Bayonne.PRD.LUT.Infoserv_US&quot;,Document.{TR:TR09CodeUS})!=&quot;&quot;)">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoINFOSERV.TRtoUP2" target="INFOSERV.TEL.TCP"></send>
</when>
</rule>
<rule name="TR (mutation) pour CHIMIO" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="TR"></constraint>
<when condition="(Document.{TR:TR17TypeMutation}=&quot;0&quot;)&amp;&amp; (Document.{TR:TR26IndicateurDernierMouveme}=&quot;1&quot;)&amp;&amp;(Document.{TR:TR13CodeUF} DoesNotContain &quot;S4&quot;)&amp;&amp;(Document.{TR:TR13CodeUF} DoesNotContain &quot;S5&quot;)&amp;&amp;(Document.{TR:TR13CodeUF} DoesNotContain &quot;S8&quot;)">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoCHIMIO.TRtoADT" target="CHIMIO.ADT.File"></send>
</when>
</rule>
<rule name="TR (mutation et séance) NON HISTORIQUE" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="TR"></constraint>
<when condition="(Document.{TR:TR17TypeMutation}=&quot;1&quot;) &amp;&amp; (Document.{TR:TR26IndicateurDernierMouveme}=&quot;1&quot;)">
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.EVtoADT" target="GLIMS.ADT.File"></send>
</when>
<when condition="(Document.{TR:TR17TypeMutation}=&quot;2&quot;) &amp;&amp; (Document.{TR:TR26IndicateurDernierMouveme}=&quot;1&quot;)">
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.SVtoADT" target="GLIMS.ADT.File"></send>
</when>
<when condition="Document.{TR:TR26IndicateurDernierMouveme}=&quot;1&quot;">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.TRtoADT" target="QCARE.ADT.TCP,COPILOTE.ADT.File,VIEWPOINT.ADT.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.TRtoADT" target="GLIMS.ADT.File"></send>
</when>
</rule>
<rule name="UF (FDB des UF)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="UF"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.UFtoMFN" target="GLIMS.MFN.File"></send>
</when>
</rule>
<rule name="UR (urgence)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="UR"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.URtoADT" target="LOGIPREN.ADT.TCP,Hemadialyse.ADT.FTP,VENUS.ADT.TCP,VENUS.ADT.File"></send>
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
<rule name="UR (urgence SYSEO)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="UR"></constraint>
<when condition="Document.{UR3:UR307DateHeureEnregistrement}&gt;=&quot;201701010000&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v25.URtoADT" target="SYSEO.ADT.TCP"></send>
</when>
</rule>
<rule name="UR (urgence) NON HISTORIQUE" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="UR"></constraint>
<when condition="Document.{UR3:UR316IndicateurDernierMouvem}=&quot;1&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoHL7v231.URtoADT" target="QCARE.ADT.TCP,COPILOTE.ADT.File,VIEWPOINT.ADT.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.URtoADT" target="GLIMS.ADT.File"></send>
</when>
</rule>
<rule name="US (FDB des US)" disabled="false">
<constraint name="source" value="CLINICOM.STD.TCP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docType" value="US"></constraint>
<when condition="1">
<send transform="" target="Routeur.CCOMtoTRAK"></send>
</when>
</rule>
</ruleSet>
</ruleDefinition>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Sites.Bayonne.TRN.Prod.RouterCCOMTargetRoutingRule">
<Description>
</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.Rule.Definition</Super>
<TimeChanged>65535,33837.222293</TimeChanged>
<TimeCreated>62518,61822.517969</TimeCreated>

<Parameter name="RuleAssistClass">
<Default>EnsLib.MsgRouter.VDocRuleAssistCompatible</Default>
</Parameter>

<XData name="RuleDefinition">
<XMLNamespace>http://www.intersystems.com/rule</XMLNamespace>
<Data><![CDATA[
<ruleDefinition alias="" context="EnsLib.MsgRouter.VDocRoutingEngine" production="ISSAS.Sites.Bayonne.TRN.Prod.Production">
<variable name="DoctoLibExcludeResources"></variable>
<ruleSet name="Messages HPRIM ou HL7" effectiveBegin="" effectiveEnd="">
<rule name="Résultats GLIMS pour TRAKCARE" disabled="false">
<constraint name="source" value="GLIMS.Res.File"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docCategory" value="2.5"></constraint>
<constraint name="docType" value="ORU_R01"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.DTL.GLIMStoTC.ORUtoORU" target="BP.MMA.TRAKCARE.GLIMS"></send>
<return></return>
</when>
</rule>
<rule name="Résultats OPESIM" disabled="false">
<constraint name="source" value="OPESIM.ORU.File"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.HPRIMv2HL7"></constraint>
<constraint name="docCategory" value="HPRIMV2"></constraint>
<constraint name="docType" value="ORU"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.OPESIMtoCCOM.ORUtoORU" target="CLINICOM.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.OPESIMtoTC.ORUtoORU" target="BP.MMA.TRAKCARE.OPESIM"></send>
<return></return>
</when>
</rule>
<rule name="Planification QPLANNER par FILE" disabled="false">
<constraint name="source" value="QPLANNER.SIU.IN.File"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docType" value="SIU_S12"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.QPLANNERtoCCOM.SIUtoSIU" target="CLINICOM.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.QPLANNERtoCCOM.SIUtoQPA" target="CLINICOM.TCP"></send>
<return></return>
</when>
</rule>
<rule name="Planification QPLANNER par TCP" disabled="false">
<constraint name="source" value="QPLANNER.SIU.IN.TCP"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docType" value="SIU_S12"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.QPLANNERtoCCOM.SIUtoSIU" target="CLINICOM.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.QPLANNERtoCCOM.SIUtoQPA" target="CLINICOM.TCP"></send>
<return></return>
</when>
</rule>
<rule name="Résultats COPILOTE" disabled="false">
<constraint name="source" value="COPILOTE.ORU.File"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.HPRIMv2HL7"></constraint>
<constraint name="docCategory" value="HPRIMV2"></constraint>
<constraint name="docType" value="ORU"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.COPILOTEtoCCOM.ORUtoORU" target="CLINICOM.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.COPILOTEtoTC.ORUtoORU" target="TRAKCARE.ORU.COPILOTE.TCP"></send>
<return></return>
</when>
</rule>
<rule name="Résultats VIEWPOINT" disabled="false">
<constraint name="source" value="VIEWPOINT.ORU.File"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.HPRIMv2HL7"></constraint>
<constraint name="docCategory" value="HPRIMV2"></constraint>
<constraint name="docType" value="ORU"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.VIEWPOINTtoCCOM.ORUtoORU" target="CLINICOM.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.VIEWPOINTtoTC.ORUtoORU" target="BP.MMA.TRAKCARE.VIEWPOINT"></send>
<return></return>
</when>
</rule>
<rule name="Prescriptions TrakCare pour Glims" disabled="false">
<constraint name="source" value="TRAKCARE.ORM.GLIMS.TCP"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.DTL.TCtoGLIMS.ORMtoOML" target="GLIMS.OML.File"></send>
<return></return>
</when>
</rule>
<rule name="Prescriptions TrakCare pour VENUS" disabled="false">
<constraint name="source" value="TRAKCARE.ORM.VENUS.TCP"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.DTL.TCtoVENUS.ORMtoORM" target="VENUS.ORM.TCP"></send>
<return></return>
</when>
</rule>
<rule name="Prescriptions TrakCare pour VENUS (St Palais)" disabled="false">
<constraint name="source" value="TRAKCARE.ORMsp.VENUS.TCP"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.DTL.TCtoVENUS.ORMtoORMsp" target="VENUS.ORM.TCP"></send>
<return></return>
</when>
</rule>
<rule name="Diagnostics TRAKCARE" disabled="false">
<constraint name="source" value="TRAKCARE.IN.TCP"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docCategory" value="2.4"></constraint>
<when condition="((Document.{EVN:EventTypeCode}=&quot;A08&quot;)||(Document.{EVN:EventTypeCode}=&quot;A03&quot;))&amp;&amp;(Length(Document.{DG1(1):SetIDDG1})!=0)">
<send transform="" target="BP.TCtoCCOM.SplitDiags"></send>
<return></return>
</when>
</rule>
<rule name="Diagnostics TRAKCARE" disabled="false">
<constraint name="source" value="BP.TCtoCCOM.SplitDiags"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docCategory" value="2.4"></constraint>
<when condition="((Document.{EVN:EventTypeCode}=&quot;A08&quot;)||(Document.{EVN:EventTypeCode}=&quot;A03&quot;))&amp;&amp;(Length(Document.{DG1(1):SetIDDG1})!=0)">
<send transform="ISSAS.Common.DTL.TCtoCCOM.ADTtoDIG" target="CLINICOM.TCP"></send>
<return></return>
</when>
</rule>
<rule name="Résultats HEMO SERVEUR" disabled="false">
<constraint name="source" value="HEMOS.HMV.File"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.HPRIMv2HL7"></constraint>
<constraint name="docCategory" value="HPRIMV2"></constraint>
<constraint name="docType" value="HMV"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.HEMOStoTC.HMVtoORU" target="TRAKCARE.ORU.HEMOS.TCP"></send>
<return></return>
</when>
</rule>
<rule name="Ordonnances IMAGE PHARMA" disabled="false">
<constraint name="source" value="IMAGE.ORDO.File"></constraint>
<constraint name="docType" value="ISSAS.Sites.Bayonne.PRD.VDoc.ImagePharmaCession:PH"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.IMAGEtoTC.PHtoORU" target="TRAKCARE.ORU.IMAGE.TCP"></send>
<return></return>
</when>
</rule>
<rule name="Résultats VENUS" disabled="false">
<constraint name="source" value="VENUS.ORU.File"></constraint>
<constraint name="docType" value="ISSAS.Sites.Bayonne.PRD.VDoc.SIR5:ORU_R01"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.VENUStoCCOM.ORUtoORU" target="CLINICOM.TCP"></send>
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.VENUStoTC.ORUtoORU" target="TRAKCARE.ORU.VENUS.TCP"></send>
<return></return>
</when>
</rule>
<rule name="MàJ prescriptions VENUS" disabled="false">
<constraint name="source" value="VENUS.ORM.File"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.DTL.VENUStoTC.ORMtoORM" target="TRAKCARE.ORM.VENUS.TCPOut"></send>
<return></return>
</when>
</rule>
<rule name="RDV TRAKCARE (Agenda) " disabled="false">
<constraint name="source" value="TRAKCARE.IN.TCP"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docCategory" value="2.4"></constraint>
<constraint name="docType" value="SIU_S12"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.PRD.DTL.TCtoCCOM.SIUtoSIU" target="CLINICOM.TCP"></send>
<return></return>
</when>
</rule>
<rule name="Résultats AxBiocean pour TRAK" disabled="false">
<constraint name="source" value="AxBiocean.ORU.FTP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.HPRIMv2HL7"></constraint>
<constraint name="docCategory" value="HPRIMV2"></constraint>
<constraint name="docType" value="ORU"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.DTL.AXBIOCEANtoTC.ORUtoORU" target="TRAKCARE.ORU.AXBIOCEAN.TCP"></send>
</when>
</rule>
<rule name="Résultats Hémadialyse pour TRAK" disabled="false">
<constraint name="source" value="Hemadialyse.ORU.FTP"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.HPRIMv2HL7"></constraint>
<constraint name="docCategory" value="HPRIMV2"></constraint>
<constraint name="docType" value="ORU"></constraint>
<when condition="1">
<send transform="ISSAS.Sites.Bayonne.DTL.HEMADIALtoTC.ORUtoORU" target="BP.MMA.TRAKCARE.HEMADIALYSE"></send>
</when>
</rule>
<rule name="Rendez-vous TRAK" disabled="false">
<constraint name="source" value="TRAKCARE.SIU.TCP"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docType" value="SIU_S12"></constraint>
<when condition="&quot;,S23,S24&quot; [ Document.{MSH:MessageType.triggerevent}">
<send transform="" target="MONDOCTEUR.SIU.OUT.TCP"></send>
</when>
<otherwise>
<send transform="ISSAS.Common.DTL.TCtoMONDOCTEUR.SIUtoSIU" target="MONDOCTEUR.SIU.OUT.TCP"></send>
<send transform="ISSAS.Common.DTL.TCtoCCOM.SIUtoSIU" target="CLINICOM.TCP"></send>
</otherwise>
</rule>
<rule name="Rendez-vous TRAK (SUI S23/S24)" disabled="false">
<constraint name="source" value="TRAKCARE.SIU.TCP"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docType" value="SIU_S24"></constraint>
<when condition="1">
<send transform="" target="DOCTOLIB.POST.HTTP"></send>
</when>
</rule>
<assign property="@DoctoLibExcludeResources" value="ISSASOBJClassMethodWithQuit3Args(&quot;ISSAS.Common.Tools.ClassTools&quot;,&quot;GetSettingFromItemName&quot;,&quot;BPLDoctolib&quot;,&quot;&quot;)"></assign>
<rule name="Rendez-vous TRAK pour DOCTOLIB" disabled="false">
<constraint name="source" value="TRAKCARE.SIU.TCP"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docType" value="SIU_S12"></constraint>
<when condition="(Document.{MSH:MessageType.MessageCode}=&quot;SIU&quot;) &amp;&amp; (Document.{MSH:MessageType.triggerevent}!=&quot;S26&quot;) &amp;&amp; (Lookup(@DoctoLibExcludeResources,Document.{RGSgrp(1).AIGgrp(1).AIG:ResourceType.Identifier})!=&quot;0&quot;)">
<send transform="ISSAS.Common.DTL.Doctolib.TCSIUtoDoctolibSIU" target="DOCTOLIB.POST.HTTP"></send>
</when>
</rule>
</ruleSet>
</ruleDefinition>
]]></Data>
</XData>
</Class>


<Class name="ISSAS.Sites.Bayonne.TRN.Prod.RouterDoctolibHL7RoutingRule">
<Description>
</Description>
<Super>Ens.Rule.Definition</Super>
<TimeChanged>65535,33718.013849</TimeChanged>
<TimeCreated>64960,40072.902533</TimeCreated>

<Parameter name="RuleAssistClass">
<Default>EnsLib.HL7.MsgRouter.RuleAssist</Default>
</Parameter>

<XData name="RuleDefinition">
<XMLNamespace>http://www.intersystems.com/rule</XMLNamespace>
<Data><![CDATA[
<ruleDefinition alias="" context="EnsLib.MsgRouter.VDocRoutingEngine" production="ISSAS.Sites.Bayonne.TRN.Prod.Production">
<variable name="AssigningAuthority"></variable>
<ruleSet name="Doctolib" effectiveBegin="" effectiveEnd="">
<rule name="Création identité (A28) pour agendas" disabled="false">
<constraint name="source" value="BPLDoctolib"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docType" value="ADT_A28"></constraint>
<when condition="Document.{EVN:EventTypeCode}=&quot;A28&quot;">
<send transform="ISSAS.Common.DTL.Doctolib.CCOMADTA28ToTCADTA28" target="TRAKCARE.SRM.DOCTOLIB.TCP"></send>
</when>
</rule>
<rule name="Modification identité (A08) pour agendas" disabled="false">
<constraint name="source" value="BPLDoctolib"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docType" value="ADT_A08"></constraint>
<when condition="Document.{MSH:MessageType}=&quot;SIU^A08&quot;">
<send transform="ISSAS.Common.DTL.Doctolib.A08toTCA31" target="TRAKCARE.SRM.DOCTOLIB.TCP"></send>
</when>
</rule>
<rule name="Fusion identité (A40) pour Doctolib" disabled="false">
<constraint name="source" value="BPLDoctolib"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docType" value="ADT_A40"></constraint>
<when condition="Document.{EVN:EventTypeCode}=&quot;A40&quot;">
<send transform="ISSAS.Common.DTL.Doctolib.ADTtoA40Direct" target="DOCTOLIB.ADT.HTTP"></send>
</when>
</rule>
<rule name="Création pré-admission / pré-consultation (A05) pour agendas" disabled="false">
<constraint name="source" value="BPLDoctolib"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docType" value="ADT_A05"></constraint>
<when condition="Document.{EVN:EventTypeCode}=&quot;A05&quot;">
<send transform="" target="&quot;&quot;"></send>
</when>
</rule>
<rule name="RDV (SIU_SXX) pour agendas" disabled="false">
<constraint name="source" value="BPLDoctolib"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docType" value="SIU_SXX"></constraint>
<when condition="(Document.{MSH:MessageType.MessageCode}=&quot;SIU&quot;) &amp;&amp; (Document.{MSH:MessageType.TriggerEvent} != &quot;S26&quot;) ">
<send transform="ISSAS.Common.DTL.Doctolib.TCSIUtoCCOMSIU" target="CLINICOM.TCP,HealthConnect.Clinicom.TCP"></send>
</when>
</rule>
<assign property="@AssigningAuthority" value="ISSASOBJClassMethodWithQuit1Arg(&quot;ISSAS.Common.DTL.Doctolib.DoctolibUtils&quot;,&quot;GetClinicomAssigningAuthority&quot;,&quot;2.5&quot;)"></assign>
<rule name="Rendez-vous DOCTOLIB pour TRAK" disabled="false">
<constraint name="source" value="BPLDoctolib"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docType" value="SIU_S12"></constraint>
<when condition="(Document.{PIDgrp(1).PID:PatientIdentifierList(1).AssigningAuthority}=@AssigningAuthority) &amp;&amp; (&quot;,S12,S15,&quot; [ (&quot;,&quot; _ Document.{MSH:MessageType.TriggerEvent} _ &quot;,&quot;))">
<send transform="ISSAS.Common.DTL.Doctolib.SIUtoSRM" target="TRAKCARE.SRM.DOCTOLIB.TCP"></send>
</when>
<when condition="(Document.{PIDgrp(1).PID:PatientIdentifierList(1).AssigningAuthority}=@AssigningAuthority) &amp;&amp; (&quot;,S13,S14,&quot; [ (&quot;,&quot; _ Document.{MSH:MessageType.TriggerEvent} _ &quot;,&quot;))">
<send transform="ISSAS.Common.DTL.Doctolib.SIUtoSRMUPD1" target="TRAKCARE.SRM.DOCTOLIB.TCP"></send>
<send transform="ISSAS.Common.DTL.Doctolib.SIUtoSRMUPD2" target="TRAKCARE.SRM.DOCTOLIB.TCP"></send>
</when>
<when condition="(Document.{PIDgrp(1).PID:PatientIdentifierList(1).AssigningAuthority}=@AssigningAuthority) &amp;&amp; (&quot;,S17,&quot; [ (&quot;,&quot;_Document.{MSH:MessageType.TriggerEvent}_&quot;,&quot;))">
<send transform="ISSAS.Common.DTL.Doctolib.SIUtoSRMUPD1" target="TRAKCARE.SRM.DOCTOLIB.TCP"></send>
</when>
</rule>
<rule name="Envoi du numéro d&apos;épisode créé par SIU_S14 pour Doctolib" disabled="false">
<constraint name="source" value="BPLDoctolib"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docType" value="SIU_SXX"></constraint>
<when condition="(Document.{MSH:MessageType} = &quot;SIU^S14&quot;) &amp;&amp; (Document.{MSH:SendingApplication.NamespaceID} != &quot;Doctolib&quot;)">
<send transform="ISSAS.Common.DTL.Doctolib.SIU14toDLSIU14" target="DOCTOLIB.ADT.HTTP"></send>
</when>
</rule>
</ruleSet>
</ruleDefinition>
]]></Data>
</XData>
</Class>


<Class name="KITRY.Absences.BatchOut">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Absences'
on 2021-03-08 at 14:36:29.836 [2021-03-08 13:36:29.836 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65811,52589.890388</TimeChanged>
<TimeCreated>65811,52584.196075</TimeCreated>

<Parameter name="XMLNAME">
<Default>KITRY_Absences_BatchOut</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>KITRY.Absences.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>KITRY_Absences_BatchOut</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Absences.BatchOutD</DataLocation>
<DefaultData>BatchOutDefaultData</DefaultData>
<IdLocation>^KITRY.Absences.BatchOutD</IdLocation>
<IndexLocation>^KITRY.Absences.BatchOutI</IndexLocation>
<StreamLocation>^KITRY.Absences.BatchOutS</StreamLocation>
<Data name="BatchOutDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KITRY.Absences">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Absences'
on 2021-03-08 at 14:36:29.848 [2021-03-08 13:36:29.848 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65811,52589.850218</TimeChanged>
<TimeCreated>65811,52570.337882</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>KITRY.Absences.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Matricule = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeAbsenceQualifiée = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléAbsenceQualifiée = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateDébutAbsence = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateFinAbsenceCalculée = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateAT = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NuméroAT = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.TypeArrêt = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.SuppressionArrêt = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.Matricule, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeAbsenceQualifiée, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléAbsenceQualifiée, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateDébutAbsence, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateFinAbsenceCalculée, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateAT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NuméroAT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.TypeArrêt, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.SuppressionArrêt, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("KITRY.Absences.BatchOut")=""
	Set pClasses("KITRY.Absences.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="KITRY.Absences" type="delimited" char_encoding="UTF-8" targetClassname="KITRY.Absences.Record" batchClass="KITRY.Absences.BatchOut" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Matricule" datatype="%String">
  </Field>
  <Field name="CodeAbsenceQualifiée" datatype="%String">
  </Field>
  <Field name="LibelléAbsenceQualifiée" datatype="%String">
  </Field>
  <Field name="DateDébutAbsence" datatype="%String">
  </Field>
  <Field name="DateFinAbsenceCalculée" datatype="%String">
  </Field>
  <Field name="DateAT" datatype="%String">
  </Field>
  <Field name="NuméroAT" datatype="%String">
  </Field>
  <Field name="TypeArrêt" datatype="%String">
  </Field>
  <Field name="SuppressionArrêt" datatype="%String">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="KITRY.Absences.Record">
<Description>
RECORDMAP: Generated from RecordMap 'KITRY.Absences'
on 2021-03-08 at 14:36:29.824 [2021-03-08 13:36:29.824 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65811,52589.908008</TimeChanged>
<TimeCreated>65811,52589.824631</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Matricule">
<Type>%String</Type>
</Property>

<Property name="CodeAbsenceQualifiée">
<Type>%String</Type>
</Property>

<Property name="LibelléAbsenceQualifiée">
<Type>%String</Type>
</Property>

<Property name="DateDébutAbsence">
<Type>%String</Type>
</Property>

<Property name="DateFinAbsenceCalculée">
<Type>%String</Type>
</Property>

<Property name="DateAT">
<Type>%String</Type>
</Property>

<Property name="NuméroAT">
<Type>%String</Type>
</Property>

<Property name="TypeArrêt">
<Type>%String</Type>
</Property>

<Property name="SuppressionArrêt">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>KITRY.Absences.BatchOut</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Absences.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^KITRY.Absences.RecordD</IdLocation>
<IndexLocation>^KITRY.Absences.RecordI</IndexLocation>
<StreamLocation>^KITRY.Absences.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Matricule</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>LibelléAbsenceQualifiée</Value>
</Value>
<Value name="5">
<Value>DateDébutAbsence</Value>
</Value>
<Value name="6">
<Value>DateFinAbsenceCalculée</Value>
</Value>
<Value name="7">
<Value>DateAT</Value>
</Value>
<Value name="8">
<Value>NuméroAT</Value>
</Value>
<Value name="9">
<Value>TypeArrêt</Value>
</Value>
<Value name="10">
<Value>SuppressionArrêt</Value>
</Value>
<Value name="11">
<Value>%ParentBatch</Value>
</Value>
<Value name="12">
<Value>CodeAbsenceQualifiée</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KITRY.Accidents.BatchOut">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Accidents'
on 2021-03-08 at 15:48:57.904 [2021-03-08 14:48:57.904 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65811,56937.905142</TimeChanged>
<TimeCreated>65807,50130.154135</TimeCreated>

<Parameter name="XMLNAME">
<Default>KITRY_Accidents_BatchOut</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>KITRY.Accidents.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>KITRY_Accidents_BatchOut</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Accidents.BatchOutD</DataLocation>
<DefaultData>BatchOutDefaultData</DefaultData>
<IdLocation>^KITRY.Accidents.BatchOutD</IdLocation>
<IndexLocation>^KITRY.Accidents.BatchOutI</IndexLocation>
<StreamLocation>^KITRY.Accidents.BatchOutS</StreamLocation>
<Data name="BatchOutDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KITRY.Accidents">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Accidents'
on 2021-03-08 at 15:48:57.915 [2021-03-08 14:48:57.915 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65811,56937.916674</TimeChanged>
<TimeCreated>65807,50108.947448</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>KITRY.Accidents.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Matricule = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateAT = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.HeureAT = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeTypeAT = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléTypeAT = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Circonstances = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateDéclaration = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeNat1 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléNat1 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeNat2 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléNat2 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeNat3 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléNat3 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeElemMat1 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibElemMat1 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeElemMat2 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibElemMat2 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeElemMat3 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibElemMat3 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NumAccidentInterne = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeSiège1 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléSiège1 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeSiège2 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléSiège2 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeSiège3 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléSiège3 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeLésion1 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeLésion2 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeLésion3 = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.Matricule, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateAT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.HeureAT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeTypeAT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléTypeAT, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Circonstances, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateDéclaration, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeNat1, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléNat1, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeNat2, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléNat2, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeNat3, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléNat3, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeElemMat1, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibElemMat1, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeElemMat2, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibElemMat2, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeElemMat3, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibElemMat3, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NumAccidentInterne, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeSiège1, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléSiège1, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeSiège2, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléSiège2, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeSiège3, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléSiège3, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeLésion1, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeLésion2, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeLésion3, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("KITRY.Accidents.BatchOut")=""
	Set pClasses("KITRY.Accidents.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="KITRY.Accidents" type="delimited" char_encoding="UTF-8" targetClassname="KITRY.Accidents.Record" batchClass="KITRY.Accidents.BatchOut" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Matricule" datatype="%String">
  </Field>
  <Field name="DateAT" datatype="%String">
  </Field>
  <Field name="HeureAT" datatype="%String">
  </Field>
  <Field name="CodeTypeAT" datatype="%String">
  </Field>
  <Field name="LibelléTypeAT" datatype="%String">
  </Field>
  <Field name="Circonstances" required="0" ignored="0" datatype="%String" params="MAXLEN=200" repeating="0">
  </Field>
  <Field name="DateDéclaration" datatype="%String">
  </Field>
  <Field name="CodeNat1" datatype="%String">
  </Field>
  <Field name="LibelléNat1" datatype="%String">
  </Field>
  <Field name="CodeNat2" datatype="%String">
  </Field>
  <Field name="LibelléNat2" datatype="%String">
  </Field>
  <Field name="CodeNat3" datatype="%String">
  </Field>
  <Field name="LibelléNat3" datatype="%String">
  </Field>
  <Field name="CodeElemMat1" datatype="%String">
  </Field>
  <Field name="LibElemMat1" datatype="%String">
  </Field>
  <Field name="CodeElemMat2" datatype="%String">
  </Field>
  <Field name="LibElemMat2" datatype="%String">
  </Field>
  <Field name="CodeElemMat3" datatype="%String">
  </Field>
  <Field name="LibElemMat3" datatype="%String">
  </Field>
  <Field name="NumAccidentInterne" datatype="%String">
  </Field>
  <Field name="CodeSiège1" datatype="%String">
  </Field>
  <Field name="LibelléSiège1" datatype="%String">
  </Field>
  <Field name="CodeSiège2" datatype="%String">
  </Field>
  <Field name="LibelléSiège2" datatype="%String">
  </Field>
  <Field name="CodeSiège3" datatype="%String">
  </Field>
  <Field name="LibelléSiège3" datatype="%String">
  </Field>
  <Field name="CodeLésion1" datatype="%String">
  </Field>
  <Field name="CodeLésion2" datatype="%String">
  </Field>
  <Field name="CodeLésion3" datatype="%String">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="KITRY.Accidents.Record">
<Description>
RECORDMAP: Generated from RecordMap 'KITRY.Accidents'
on 2021-03-08 at 15:48:57.872 [2021-03-08 14:48:57.872 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65811,56937.903556</TimeChanged>
<TimeCreated>65811,56937.872382</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Matricule">
<Type>%String</Type>
</Property>

<Property name="DateAT">
<Type>%String</Type>
</Property>

<Property name="HeureAT">
<Type>%String</Type>
</Property>

<Property name="CodeTypeAT">
<Type>%String</Type>
</Property>

<Property name="LibelléTypeAT">
<Type>%String</Type>
</Property>

<Property name="Circonstances">
<Type>%String</Type>
<Parameter name="MAXLEN" value="200"/>
</Property>

<Property name="DateDéclaration">
<Type>%String</Type>
</Property>

<Property name="CodeNat1">
<Type>%String</Type>
</Property>

<Property name="LibelléNat1">
<Type>%String</Type>
</Property>

<Property name="CodeNat2">
<Type>%String</Type>
</Property>

<Property name="LibelléNat2">
<Type>%String</Type>
</Property>

<Property name="CodeNat3">
<Type>%String</Type>
</Property>

<Property name="LibelléNat3">
<Type>%String</Type>
</Property>

<Property name="CodeElemMat1">
<Type>%String</Type>
</Property>

<Property name="LibElemMat1">
<Type>%String</Type>
</Property>

<Property name="CodeElemMat2">
<Type>%String</Type>
</Property>

<Property name="LibElemMat2">
<Type>%String</Type>
</Property>

<Property name="CodeElemMat3">
<Type>%String</Type>
</Property>

<Property name="LibElemMat3">
<Type>%String</Type>
</Property>

<Property name="NumAccidentInterne">
<Type>%String</Type>
</Property>

<Property name="CodeSiège1">
<Type>%String</Type>
</Property>

<Property name="LibelléSiège1">
<Type>%String</Type>
</Property>

<Property name="CodeSiège2">
<Type>%String</Type>
</Property>

<Property name="LibelléSiège2">
<Type>%String</Type>
</Property>

<Property name="CodeSiège3">
<Type>%String</Type>
</Property>

<Property name="LibelléSiège3">
<Type>%String</Type>
</Property>

<Property name="CodeLésion1">
<Type>%String</Type>
</Property>

<Property name="CodeLésion2">
<Type>%String</Type>
</Property>

<Property name="CodeLésion3">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>KITRY.Accidents.BatchOut</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Accidents.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^KITRY.Accidents.RecordD</IdLocation>
<IndexLocation>^KITRY.Accidents.RecordI</IndexLocation>
<StreamLocation>^KITRY.Accidents.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Matricule</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>HeureAT</Value>
</Value>
<Value name="5">
<Value>CodeTypeAT</Value>
</Value>
<Value name="6">
<Value>LibelléTypeAT</Value>
</Value>
<Value name="7">
<Value>Circonstances</Value>
</Value>
<Value name="8">
<Value>DateDéclaration</Value>
</Value>
<Value name="9">
<Value>CodeNat1</Value>
</Value>
<Value name="10">
<Value>LibelléNat1</Value>
</Value>
<Value name="11">
<Value>CodeNat2</Value>
</Value>
<Value name="12">
<Value>LibelléNat2</Value>
</Value>
<Value name="13">
<Value>CodeNat3</Value>
</Value>
<Value name="14">
<Value>LibelléNat3</Value>
</Value>
<Value name="15">
<Value>NumAccidentInterne</Value>
</Value>
<Value name="16">
<Value>CodeElemMat1</Value>
</Value>
<Value name="17">
<Value>LibElemMat1</Value>
</Value>
<Value name="18">
<Value>CodeElemMat2</Value>
</Value>
<Value name="19">
<Value>LibElemMat2</Value>
</Value>
<Value name="20">
<Value>CodeElemMat3</Value>
</Value>
<Value name="21">
<Value>LibElemMat3</Value>
</Value>
<Value name="22">
<Value>CodeSiège1</Value>
</Value>
<Value name="23">
<Value>LibelléSiège1</Value>
</Value>
<Value name="24">
<Value>CodeSiège2</Value>
</Value>
<Value name="25">
<Value>LibelléSiège2</Value>
</Value>
<Value name="26">
<Value>CodeSiège3</Value>
</Value>
<Value name="27">
<Value>LibelléSiège3</Value>
</Value>
<Value name="28">
<Value>CodeLésion1</Value>
</Value>
<Value name="29">
<Value>CodeLésion2</Value>
</Value>
<Value name="30">
<Value>CodeLésion3</Value>
</Value>
<Value name="31">
<Value>%ParentBatch</Value>
</Value>
<Value name="32">
<Value>DateAT</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KITRY.Affectations.BatchOut">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Affectations'
on 2021-03-03 at 10:28:08.247 [2021-03-03 09:28:08.247 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65806,37688.247381</TimeChanged>
<TimeCreated>65805,63693.459346</TimeCreated>

<Parameter name="XMLNAME">
<Default>KITRY_Affectations_BatchOut</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>KITRY.Affectations.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>KITRY_Affectations_BatchOut</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Affectations.BatchOutD</DataLocation>
<DefaultData>BatchOutDefaultData</DefaultData>
<IdLocation>^KITRY.Affectations.BatchOutD</IdLocation>
<IndexLocation>^KITRY.Affectations.BatchOutI</IndexLocation>
<StreamLocation>^KITRY.Affectations.BatchOutS</StreamLocation>
<Data name="BatchOutDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KITRY.Affectations">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Affectations'
on 2021-03-03 at 10:28:08.255 [2021-03-03 09:28:08.255 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65806,37688.256618</TimeChanged>
<TimeCreated>65801,34803.835801</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>KITRY.Affectations.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Matricule = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Racine = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.UF = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.TypeUF = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateDébut = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateFin = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Pourcentage = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.Matricule, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Racine, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.UF, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.TypeUF, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateDébut, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateFin, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Pourcentage, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("KITRY.Affectations.BatchOut")=""
	Set pClasses("KITRY.Affectations.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="KITRY.Affectations" type="delimited" char_encoding="UTF-8" targetClassname="KITRY.Affectations.Record" batchClass="KITRY.Affectations.BatchOut" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Matricule" datatype="%String">
  </Field>
  <Field name="Racine" datatype="%String">
  </Field>
  <Field name="UF" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="TypeUF" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="DateDébut" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="DateFin" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Pourcentage" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="KITRY.Affectations.Record">
<Description>
RECORDMAP: Generated from RecordMap 'KITRY.Affectations'
on 2021-03-03 at 10:28:08.236 [2021-03-03 09:28:08.236 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65806,37688.245968</TimeChanged>
<TimeCreated>65806,37688.236958</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Matricule">
<Type>%String</Type>
</Property>

<Property name="Racine">
<Type>%String</Type>
</Property>

<Property name="UF">
<Type>%String</Type>
</Property>

<Property name="TypeUF">
<Type>%String</Type>
</Property>

<Property name="DateDébut">
<Type>%String</Type>
</Property>

<Property name="DateFin">
<Type>%String</Type>
</Property>

<Property name="Pourcentage">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>KITRY.Affectations.BatchOut</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Affectations.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^KITRY.Affectations.RecordD</IdLocation>
<IndexLocation>^KITRY.Affectations.RecordI</IndexLocation>
<StreamLocation>^KITRY.Affectations.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Matricule</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>UF</Value>
</Value>
<Value name="5">
<Value>TypeUF</Value>
</Value>
<Value name="6">
<Value>DateDébut</Value>
</Value>
<Value name="7">
<Value>DateFin</Value>
</Value>
<Value name="8">
<Value>Poucentage</Value>
</Value>
<Value name="9">
<Value>Racine</Value>
</Value>
<Value name="10">
<Value>Pourcentage</Value>
</Value>
<Value name="11">
<Value>%ParentBatch</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KITRY.Arborescence.BatchOut">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Arborescence'
on 2021-03-02 at 17:22:42.239 [2021-03-02 16:22:42.239 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65805,62562.355076</TimeChanged>
<TimeCreated>65805,62554.973032</TimeCreated>

<Parameter name="XMLNAME">
<Default>KITRY_Arborescence_BatchOut</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>KITRY.Arborescence.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>KITRY_Arborescence_BatchOut</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Arborescence.BatchOutD</DataLocation>
<DefaultData>BatchOutDefaultData</DefaultData>
<IdLocation>^KITRY.Arborescence.BatchOutD</IdLocation>
<IndexLocation>^KITRY.Arborescence.BatchOutI</IndexLocation>
<StreamLocation>^KITRY.Arborescence.BatchOutS</StreamLocation>
<Data name="BatchOutDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KITRY.Arborescence">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Arborescence'
on 2021-03-02 at 17:22:42.248 [2021-03-02 16:22:42.248 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65805,62562.24947</TimeChanged>
<TimeCreated>65800,51061.178804</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>KITRY.Arborescence.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Etablissement = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.UF = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléUF = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateDébutUF = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateFinUF = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.EtablissementGéo = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléEtabGéo = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Pôle = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléPôle = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.Etablissement, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.UF, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléUF, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateDébutUF, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateFinUF, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.EtablissementGéo, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléEtabGéo, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Pôle, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléPôle, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("KITRY.Arborescence.BatchOut")=""
	Set pClasses("KITRY.Arborescence.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="KITRY.Arborescence" type="delimited" char_encoding="UTF-8" targetClassname="KITRY.Arborescence.Record" batchClass="KITRY.Arborescence.BatchOut" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Etablissement" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="UF" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléUF" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="DateDébutUF" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="DateFinUF" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="EtablissementGéo" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléEtabGéo" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Pôle" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléPôle" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="KITRY.Arborescence.Record">
<Description>
RECORDMAP: Generated from RecordMap 'KITRY.Arborescence'
on 2021-03-02 at 17:22:42.226 [2021-03-02 16:22:42.226 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65805,62562.237824</TimeChanged>
<TimeCreated>65805,62562.226192</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Etablissement">
<Type>%String</Type>
</Property>

<Property name="UF">
<Type>%String</Type>
</Property>

<Property name="LibelléUF">
<Type>%String</Type>
</Property>

<Property name="DateDébutUF">
<Type>%String</Type>
</Property>

<Property name="DateFinUF">
<Type>%String</Type>
</Property>

<Property name="EtablissementGéo">
<Type>%String</Type>
</Property>

<Property name="LibelléEtabGéo">
<Type>%String</Type>
</Property>

<Property name="Pôle">
<Type>%String</Type>
</Property>

<Property name="LibelléPôle">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>KITRY.Arborescence.BatchOut</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Arborescence.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^KITRY.Arborescence.RecordD</IdLocation>
<IndexLocation>^KITRY.Arborescence.RecordI</IndexLocation>
<StreamLocation>^KITRY.Arborescence.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Etablissement</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>LibelléUF</Value>
</Value>
<Value name="5">
<Value>DateDébutUF</Value>
</Value>
<Value name="6">
<Value>DateFinUF</Value>
</Value>
<Value name="7">
<Value>EtablissementGéo</Value>
</Value>
<Value name="8">
<Value>LibelléEtabGéo</Value>
</Value>
<Value name="9">
<Value>Pôle</Value>
</Value>
<Value name="10">
<Value>LibelléPôle</Value>
</Value>
<Value name="11">
<Value>UF</Value>
</Value>
<Value name="12">
<Value>%ParentBatch</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KITRY.Enfants.BatchOut">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Enfants'
on 2021-03-05 at 13:43:22.685 [2021-03-05 12:43:22.685 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65808,49402.686009</TimeChanged>
<TimeCreated>65808,48472.15035</TimeCreated>

<Parameter name="XMLNAME">
<Default>KITRY_Enfants_BatchOut</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>KITRY.Enfants.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>KITRY_Enfants_BatchOut</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Enfants.BatchOutD</DataLocation>
<DefaultData>BatchOutDefaultData</DefaultData>
<IdLocation>^KITRY.Enfants.BatchOutD</IdLocation>
<IndexLocation>^KITRY.Enfants.BatchOutI</IndexLocation>
<StreamLocation>^KITRY.Enfants.BatchOutS</StreamLocation>
<Data name="BatchOutDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KITRY.Enfants">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Enfants'
on 2021-03-05 at 13:43:22.692 [2021-03-05 12:43:22.692 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65808,49402.693681</TimeChanged>
<TimeCreated>65808,48447.353394</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>KITRY.Enfants.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Matricule = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NomPrénomEnfant = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateNaissanceEnfant = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.SexeEnfant = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateDécèsEnfant = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeACharge = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléACharge = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.Matricule, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NomPrénomEnfant, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateNaissanceEnfant, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.SexeEnfant, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateDécèsEnfant, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeACharge, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléACharge, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("KITRY.Enfants.BatchOut")=""
	Set pClasses("KITRY.Enfants.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="KITRY.Enfants" type="delimited" char_encoding="UTF-8" targetClassname="KITRY.Enfants.Record" batchClass="KITRY.Enfants.BatchOut" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Matricule" datatype="%String">
  </Field>
  <Field name="NomPrénomEnfant" required="0" ignored="0" datatype="%String" params="MAXLEN=100" repeating="0">
  </Field>
  <Field name="DateNaissanceEnfant" datatype="%String">
  </Field>
  <Field name="SexeEnfant" datatype="%String">
  </Field>
  <Field name="DateDécèsEnfant" datatype="%String">
  </Field>
  <Field name="CodeACharge" datatype="%String">
  </Field>
  <Field name="LibelléACharge" datatype="%String">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="KITRY.Enfants.Record">
<Description>
RECORDMAP: Generated from RecordMap 'KITRY.Enfants'
on 2021-03-05 at 13:43:22.670 [2021-03-05 12:43:22.670 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65808,49402.684865</TimeChanged>
<TimeCreated>65808,49402.670903</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Matricule">
<Type>%String</Type>
</Property>

<Property name="NomPrénomEnfant">
<Type>%String</Type>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="DateNaissanceEnfant">
<Type>%String</Type>
</Property>

<Property name="SexeEnfant">
<Type>%String</Type>
</Property>

<Property name="DateDécèsEnfant">
<Type>%String</Type>
</Property>

<Property name="CodeACharge">
<Type>%String</Type>
</Property>

<Property name="LibelléACharge">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>KITRY.Enfants.BatchOut</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Enfants.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^KITRY.Enfants.RecordD</IdLocation>
<IndexLocation>^KITRY.Enfants.RecordI</IndexLocation>
<StreamLocation>^KITRY.Enfants.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Matricule</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>DateNaissanceEnfant</Value>
</Value>
<Value name="5">
<Value>SexeEnfant</Value>
</Value>
<Value name="6">
<Value>DateDécèsEnfant</Value>
</Value>
<Value name="7">
<Value>CodeACharge</Value>
</Value>
<Value name="8">
<Value>LibelléACharge</Value>
</Value>
<Value name="9">
<Value>%ParentBatch</Value>
</Value>
<Value name="10">
<Value>NomPrénomEnfant</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KITRY.Formations.BatchOut">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Formations'
on 2021-03-05 at 09:58:02.780 [2021-03-05 08:58:02.780 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65808,35882.780636</TimeChanged>
<TimeCreated>65808,29445.773677</TimeCreated>

<Parameter name="XMLNAME">
<Default>KITRY_Formations_BatchOut</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>KITRY.Formations.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>KITRY_Formations_BatchOut</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Formations.BatchOutD</DataLocation>
<DefaultData>BatchOutDefaultData</DefaultData>
<IdLocation>^KITRY.Formations.BatchOutD</IdLocation>
<IndexLocation>^KITRY.Formations.BatchOutI</IndexLocation>
<StreamLocation>^KITRY.Formations.BatchOutS</StreamLocation>
<Data name="BatchOutDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KITRY.Formations">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Formations'
on 2021-03-05 at 09:58:02.787 [2021-03-05 08:58:02.787 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65808,35882.788752</TimeChanged>
<TimeCreated>65808,29428.78486</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>KITRY.Formations.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Matricule = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeFormation = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.IntituléFormation = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateDébut = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateFin = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeRésultat = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléRésultat = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Commentaire = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.Matricule, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeFormation, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.IntituléFormation, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateDébut, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateFin, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeRésultat, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléRésultat, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Commentaire, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("KITRY.Formations.BatchOut")=""
	Set pClasses("KITRY.Formations.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="KITRY.Formations" type="delimited" char_encoding="UTF-8" targetClassname="KITRY.Formations.Record" batchClass="KITRY.Formations.BatchOut" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Matricule" datatype="%String">
  </Field>
  <Field name="CodeFormation" datatype="%String">
  </Field>
  <Field name="IntituléFormation" required="0" ignored="0" datatype="%String" params="MAXLEN=100" repeating="0">
  </Field>
  <Field name="DateDébut" datatype="%String">
  </Field>
  <Field name="DateFin" datatype="%String">
  </Field>
  <Field name="CodeRésultat" datatype="%String">
  </Field>
  <Field name="LibelléRésultat" datatype="%String">
  </Field>
  <Field name="Commentaire" required="0" ignored="0" datatype="%String" params="MAXLEN=100" repeating="0">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="KITRY.Formations.Record">
<Description>
RECORDMAP: Generated from RecordMap 'KITRY.Formations'
on 2021-03-05 at 09:58:02.770 [2021-03-05 08:58:02.770 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65808,35882.779432</TimeChanged>
<TimeCreated>65808,35882.770874</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Matricule">
<Type>%String</Type>
</Property>

<Property name="CodeFormation">
<Type>%String</Type>
</Property>

<Property name="IntituléFormation">
<Type>%String</Type>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="DateDébut">
<Type>%String</Type>
</Property>

<Property name="DateFin">
<Type>%String</Type>
</Property>

<Property name="CodeRésultat">
<Type>%String</Type>
</Property>

<Property name="LibelléRésultat">
<Type>%String</Type>
</Property>

<Property name="Commentaire">
<Type>%String</Type>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="%ParentBatch">
<Type>KITRY.Formations.BatchOut</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Formations.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^KITRY.Formations.RecordD</IdLocation>
<IndexLocation>^KITRY.Formations.RecordI</IndexLocation>
<StreamLocation>^KITRY.Formations.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Matricule</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>IntituléFormation</Value>
</Value>
<Value name="5">
<Value>DateDébut</Value>
</Value>
<Value name="6">
<Value>DateFin</Value>
</Value>
<Value name="7">
<Value>CodeRésultat</Value>
</Value>
<Value name="8">
<Value>LibelléRésultat</Value>
</Value>
<Value name="9">
<Value>Commentaire</Value>
</Value>
<Value name="10">
<Value>%ParentBatch</Value>
</Value>
<Value name="11">
<Value>CodeFormation</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KITRY.Handicap.BatchOut">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Handicap'
on 2021-03-04 at 13:30:23.575 [2021-03-04 12:30:23.575 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65807,48623.576118</TimeChanged>
<TimeCreated>65807,48136.073289</TimeCreated>

<Parameter name="XMLNAME">
<Default>KITRY_Handicap_BatchOut</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>KITRY.Handicap.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>KITRY_Handicap_BatchOut</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Handicap.BatchOutD</DataLocation>
<DefaultData>BatchOutDefaultData</DefaultData>
<IdLocation>^KITRY.Handicap.BatchOutD</IdLocation>
<IndexLocation>^KITRY.Handicap.BatchOutI</IndexLocation>
<StreamLocation>^KITRY.Handicap.BatchOutS</StreamLocation>
<Data name="BatchOutDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KITRY.Handicap">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Handicap'
on 2021-03-04 at 13:30:23.583 [2021-03-04 12:30:23.583 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65807,48623.584138</TimeChanged>
<TimeCreated>65807,48101.435964</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>KITRY.Handicap.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Matricule = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.RQTH = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CatégorieInvalidité = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.TauxInvalidité = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeHandicap = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléHandicap = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateDébutRQTH = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateFinRQTH = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.Matricule, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.RQTH, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CatégorieInvalidité, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.TauxInvalidité, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeHandicap, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléHandicap, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateDébutRQTH, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateFinRQTH, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("KITRY.Handicap.BatchOut")=""
	Set pClasses("KITRY.Handicap.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="KITRY.Handicap" type="delimited" char_encoding="UTF-8" targetClassname="KITRY.Handicap.Record" batchClass="KITRY.Handicap.BatchOut" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Matricule" datatype="%String">
  </Field>
  <Field name="RQTH" datatype="%String">
  </Field>
  <Field name="CatégorieInvalidité" datatype="%String">
  </Field>
  <Field name="TauxInvalidité" datatype="%String">
  </Field>
  <Field name="CodeHandicap" datatype="%String">
  </Field>
  <Field name="LibelléHandicap" datatype="%String">
  </Field>
  <Field name="DateDébutRQTH" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="DateFinRQTH" datatype="%String">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="KITRY.Handicap.Record">
<Description>
RECORDMAP: Generated from RecordMap 'KITRY.Handicap'
on 2021-03-04 at 13:30:23.566 [2021-03-04 12:30:23.566 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65807,48623.638137</TimeChanged>
<TimeCreated>65807,48623.566483</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Matricule">
<Type>%String</Type>
</Property>

<Property name="RQTH">
<Type>%String</Type>
</Property>

<Property name="CatégorieInvalidité">
<Type>%String</Type>
</Property>

<Property name="TauxInvalidité">
<Type>%String</Type>
</Property>

<Property name="CodeHandicap">
<Type>%String</Type>
</Property>

<Property name="LibelléHandicap">
<Type>%String</Type>
</Property>

<Property name="DateDébutRQTH">
<Type>%String</Type>
</Property>

<Property name="DateFinRQTH">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>KITRY.Handicap.BatchOut</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Handicap.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^KITRY.Handicap.RecordD</IdLocation>
<IndexLocation>^KITRY.Handicap.RecordI</IndexLocation>
<StreamLocation>^KITRY.Handicap.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Matricule</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>CatégorieInvalidité</Value>
</Value>
<Value name="5">
<Value>TauxInvalidité</Value>
</Value>
<Value name="6">
<Value>CodeHandicap</Value>
</Value>
<Value name="7">
<Value>LibelléHandicap</Value>
</Value>
<Value name="8">
<Value>DateDébutRQHT</Value>
</Value>
<Value name="9">
<Value>DateFinRQTH</Value>
</Value>
<Value name="10">
<Value>%ParentBatch</Value>
</Value>
<Value name="11">
<Value>RQTH</Value>
</Value>
<Value name="12">
<Value>DateDébutRQTH</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KITRY.Personnes.BatchOut">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Personnes'
on 2021-03-11 at 16:16:51.813 [2021-03-11 15:16:51.813 UTC]
by user KSC</Description>
<Super>%Library.Persistent,EnsLib.RecordMap.SimpleBatch</Super>
<TimeChanged>65814,58611.81351</TimeChanged>
<TimeCreated>65806,55462.894566</TimeCreated>

<Parameter name="XMLNAME">
<Default>KITRY_Personnes_BatchOut</Default>
</Parameter>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Parameter name="BatchHeader">
</Parameter>

<Parameter name="HeaderTerm">
</Parameter>

<Parameter name="BatchTrailer">
</Parameter>

<Parameter name="TrailerTerm">
</Parameter>

<Parameter name="IgnoreLeadingData">
<Default>0</Default>
</Parameter>

<Property name="Records">
<Type>KITRY.Personnes.Record</Type>
<Cardinality>many</Cardinality>
<Inverse>%ParentBatch</Inverse>
<Relationship>1</Relationship>
</Property>

<Trigger name="OnDelete">
<Code>	Set %ok = ..deleteRecords({ID})
</Code>
<Event>DELETE</Event>
</Trigger>

<Parameter name="XMLTYPE">
<Default>KITRY_Personnes_BatchOut</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Personnes.BatchOutD</DataLocation>
<DefaultData>BatchOutDefaultData</DefaultData>
<IdLocation>^KITRY.Personnes.BatchOutD</IdLocation>
<IndexLocation>^KITRY.Personnes.BatchOutI</IndexLocation>
<StreamLocation>^KITRY.Personnes.BatchOutS</StreamLocation>
<Data name="BatchOutDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>%Source</Value>
</Value>
<Value name="3">
<Value>BatchHeader</Value>
</Value>
<Value name="4">
<Value>BatchTrailer</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KITRY.Personnes">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'KITRY.Personnes'
on 2021-03-11 at 16:16:51.832 [2021-03-11 15:16:51.832 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65814,58611.835976</TimeChanged>
<TimeCreated>65805,52312.538398</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>KITRY.Personnes.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, $char(34))
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Matricule = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NomUsage = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NomFamille = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Prénom = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Prenom2 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateNaissance = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeSexe = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NumINSEE = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NumINSEEProv = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Civilité = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeEtatCivil = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléEtatCivil = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Nationalité = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LieuNaissance = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.PaysNaissance = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NombreEnfants = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Adresse = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.ComplémentAdresse = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodePostal = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Commune = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.TéléphoneFixe = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.TéléphoneGSM = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.MailPerso = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.MailPro = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.TéléphonePro = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateEntréeEtab = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeMétier = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléMétier = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléEmploi = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeTempsTravail = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléTempsTravail = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateDébutContrat = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeTypeDeContrat = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeContrat = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelleContrat = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DateSortie = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeMotifSortie = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléMotifSortie = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.MatriculeManager = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Grade = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléGrade = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeCGOS = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelleCGOS = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeCAF = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelleCAF = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeTypeContrat = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelleTypeContrat = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Code5 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Libelle5 = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: ..Escape(pObject.Matricule, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NomUsage, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NomFamille, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Prénom, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Prenom2, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateNaissance, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeSexe, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NumINSEE, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NumINSEEProv, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Civilité, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeEtatCivil, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléEtatCivil, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Nationalité, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LieuNaissance, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.PaysNaissance, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.NombreEnfants, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Adresse, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.ComplémentAdresse, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodePostal, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Commune, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.TéléphoneFixe, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.TéléphoneGSM, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.MailPerso, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.MailPro, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.TéléphonePro, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateEntréeEtab, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeMétier, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléMétier, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléEmploi, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeTempsTravail, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléTempsTravail, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateDébutContrat, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeTypeDeContrat, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeContrat, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelleContrat, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.DateSortie, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeMotifSortie, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléMotifSortie, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.MatriculeManager, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Grade, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelléGrade, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeCGOS, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelleCGOS, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeCAF, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelleCAF, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.CodeTypeContrat, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.LibelleTypeContrat, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Code5, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: ..Escape(pObject.Libelle5, $lb($char(59)),"all",$char(34)),1: $char(34)_$char(34)),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("KITRY.Personnes.BatchOut")=""
	Set pClasses("KITRY.Personnes.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="KITRY.Personnes" type="delimited" char_encoding="UTF-8" targetClassname="KITRY.Personnes.Record" batchClass="KITRY.Personnes.BatchOut" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" escaping="all" escapeSequence="&quot;" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Matricule" datatype="%String">
  </Field>
  <Field name="NomUsage" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="NomFamille" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Prénom" datatype="%String">
  </Field>
  <Field name="Prenom2" datatype="%String">
  </Field>
  <Field name="DateNaissance" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="CodeSexe" datatype="%String">
  </Field>
  <Field name="NumINSEE" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="NumINSEEProv" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Civilité" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="CodeEtatCivil" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléEtatCivil" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Nationalité" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LieuNaissance" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="PaysNaissance" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="NombreEnfants" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Adresse" datatype="%String">
  </Field>
  <Field name="ComplémentAdresse" required="0" ignored="0" datatype="%String" params="MAXLEN=100" repeating="0">
  </Field>
  <Field name="CodePostal" datatype="%String">
  </Field>
  <Field name="Commune" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="TéléphoneFixe" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="TéléphoneGSM" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="MailPerso" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="MailPro" datatype="%String">
  </Field>
  <Field name="TéléphonePro" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="DateEntréeEtab" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="CodeMétier" datatype="%String">
  </Field>
  <Field name="LibelléMétier" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléEmploi" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="CodeTempsTravail" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléTempsTravail" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="DateDébutContrat" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="CodeTypeDeContrat" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="CodeContrat" datatype="%String">
  </Field>
  <Field name="LibelleContrat" datatype="%String">
  </Field>
  <Field name="DateSortie" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="CodeMotifSortie" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="LibelléMotifSortie" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="MatriculeManager" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Grade" datatype="%String">
  </Field>
  <Field name="LibelléGrade" datatype="%String">
  </Field>
  <Field name="CodeCGOS" datatype="%String">
  </Field>
  <Field name="LibelleCGOS" datatype="%String">
  </Field>
  <Field name="CodeCAF" datatype="%String">
  </Field>
  <Field name="LibelleCAF" datatype="%String">
  </Field>
  <Field name="CodeTypeContrat" datatype="%String">
  </Field>
  <Field name="LibelleTypeContrat" datatype="%String">
  </Field>
  <Field name="Code5" datatype="%String">
  </Field>
  <Field name="Libelle5" datatype="%String">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="KITRY.Personnes.Record">
<Description>
RECORDMAP: Generated from RecordMap 'KITRY.Personnes'
on 2021-03-11 at 16:16:51.750 [2021-03-11 15:16:51.750 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65814,58611.810641</TimeChanged>
<TimeCreated>65814,58611.750466</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Matricule">
<Type>%String</Type>
</Property>

<Property name="NomUsage">
<Type>%String</Type>
</Property>

<Property name="NomFamille">
<Type>%String</Type>
</Property>

<Property name="Prénom">
<Type>%String</Type>
</Property>

<Property name="Prenom2">
<Type>%String</Type>
</Property>

<Property name="DateNaissance">
<Type>%String</Type>
</Property>

<Property name="CodeSexe">
<Type>%String</Type>
</Property>

<Property name="NumINSEE">
<Type>%String</Type>
</Property>

<Property name="NumINSEEProv">
<Type>%String</Type>
</Property>

<Property name="Civilité">
<Type>%String</Type>
</Property>

<Property name="CodeEtatCivil">
<Type>%String</Type>
</Property>

<Property name="LibelléEtatCivil">
<Type>%String</Type>
</Property>

<Property name="Nationalité">
<Type>%String</Type>
</Property>

<Property name="LieuNaissance">
<Type>%String</Type>
</Property>

<Property name="PaysNaissance">
<Type>%String</Type>
</Property>

<Property name="NombreEnfants">
<Type>%String</Type>
</Property>

<Property name="Adresse">
<Type>%String</Type>
</Property>

<Property name="ComplémentAdresse">
<Type>%String</Type>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="CodePostal">
<Type>%String</Type>
</Property>

<Property name="Commune">
<Type>%String</Type>
</Property>

<Property name="TéléphoneFixe">
<Type>%String</Type>
</Property>

<Property name="TéléphoneGSM">
<Type>%String</Type>
</Property>

<Property name="MailPerso">
<Type>%String</Type>
</Property>

<Property name="MailPro">
<Type>%String</Type>
</Property>

<Property name="TéléphonePro">
<Type>%String</Type>
</Property>

<Property name="DateEntréeEtab">
<Type>%String</Type>
</Property>

<Property name="CodeMétier">
<Type>%String</Type>
</Property>

<Property name="LibelléMétier">
<Type>%String</Type>
</Property>

<Property name="LibelléEmploi">
<Type>%String</Type>
</Property>

<Property name="CodeTempsTravail">
<Type>%String</Type>
</Property>

<Property name="LibelléTempsTravail">
<Type>%String</Type>
</Property>

<Property name="DateDébutContrat">
<Type>%String</Type>
</Property>

<Property name="CodeTypeDeContrat">
<Type>%String</Type>
</Property>

<Property name="CodeContrat">
<Type>%String</Type>
</Property>

<Property name="LibelleContrat">
<Type>%String</Type>
</Property>

<Property name="DateSortie">
<Type>%String</Type>
</Property>

<Property name="CodeMotifSortie">
<Type>%String</Type>
</Property>

<Property name="LibelléMotifSortie">
<Type>%String</Type>
</Property>

<Property name="MatriculeManager">
<Type>%String</Type>
</Property>

<Property name="Grade">
<Type>%String</Type>
</Property>

<Property name="LibelléGrade">
<Type>%String</Type>
</Property>

<Property name="CodeCGOS">
<Type>%String</Type>
</Property>

<Property name="LibelleCGOS">
<Type>%String</Type>
</Property>

<Property name="CodeCAF">
<Type>%String</Type>
</Property>

<Property name="LibelleCAF">
<Type>%String</Type>
</Property>

<Property name="CodeTypeContrat">
<Type>%String</Type>
</Property>

<Property name="LibelleTypeContrat">
<Type>%String</Type>
</Property>

<Property name="Code5">
<Type>%String</Type>
</Property>

<Property name="Libelle5">
<Type>%String</Type>
</Property>

<Property name="%ParentBatch">
<Type>KITRY.Personnes.BatchOut</Type>
<Cardinality>one</Cardinality>
<Inverse>Records</Inverse>
<Relationship>1</Relationship>
</Property>

<Index name="%ParentBatchIdx">
<Properties>%ParentBatch</Properties>
</Index>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KITRY.Personnes.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^KITRY.Personnes.RecordD</IdLocation>
<IndexLocation>^KITRY.Personnes.RecordI</IndexLocation>
<StreamLocation>^KITRY.Personnes.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Matricule</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>Nomdefamille</Value>
</Value>
<Value name="5">
<Value>Prénom</Value>
</Value>
<Value name="6">
<Value>Prenom2</Value>
</Value>
<Value name="7">
<Value>Datedenaissance</Value>
</Value>
<Value name="8">
<Value>CodeSexe</Value>
</Value>
<Value name="9">
<Value>NINSEEComplet</Value>
</Value>
<Value name="10">
<Value>NIR</Value>
</Value>
<Value name="11">
<Value>CodeTitre</Value>
</Value>
<Value name="12">
<Value>CodeSituationFamiliale</Value>
</Value>
<Value name="13">
<Value>LibelSituationFamiliale</Value>
</Value>
<Value name="14">
<Value>LibelléNationalitéactuelle</Value>
</Value>
<Value name="15">
<Value>CommunedeNaissance</Value>
</Value>
<Value name="16">
<Value>LibelléPaysdeNaissance</Value>
</Value>
<Value name="17">
<Value>NbretotaldenfantsJ</Value>
</Value>
<Value name="18">
<Value>Adresse</Value>
</Value>
<Value name="19">
<Value>ComplémentadresseNouv</Value>
</Value>
<Value name="20">
<Value>CodePostal</Value>
</Value>
<Value name="21">
<Value>LibellédelaCommune</Value>
</Value>
<Value name="22">
<Value>NdeTéléphone1</Value>
</Value>
<Value name="23">
<Value>NdeTéléphone2</Value>
</Value>
<Value name="24">
<Value>Mail</Value>
</Value>
<Value name="25">
<Value>MailPro</Value>
</Value>
<Value name="26">
<Value>TelPro</Value>
</Value>
<Value name="27">
<Value>Date1èreEntréedansHôpitalJ</Value>
</Value>
<Value name="28">
<Value>CodeMétier</Value>
</Value>
<Value name="29">
<Value>LibelléduMétierJ</Value>
</Value>
<Value name="30">
<Value>LibelléEmploiJ</Value>
</Value>
<Value name="31">
<Value>TempsPartielNumérateurJ</Value>
</Value>
<Value name="32">
<Value>LibelléMotifTpsPartielJ</Value>
</Value>
<Value name="33">
<Value>DateEffetContratJ</Value>
</Value>
<Value name="34">
<Value>TypeContrat</Value>
</Value>
<Value name="35">
<Value>CodeContrat</Value>
</Value>
<Value name="36">
<Value>LibelleContrat</Value>
</Value>
<Value name="37">
<Value>DateDernierDépart</Value>
</Value>
<Value name="38">
<Value>DernierModeSortie</Value>
</Value>
<Value name="39">
<Value>LibelléDernierDépart</Value>
</Value>
<Value name="40">
<Value>MatManager</Value>
</Value>
<Value name="41">
<Value>Grade</Value>
</Value>
<Value name="42">
<Value>LibelléGrade</Value>
</Value>
<Value name="43">
<Value>CodeCGOS</Value>
</Value>
<Value name="44">
<Value>LibelleCGOS</Value>
</Value>
<Value name="45">
<Value>CodeCAF</Value>
</Value>
<Value name="46">
<Value>LibelleCAF</Value>
</Value>
<Value name="47">
<Value>CodeTypeContrat</Value>
</Value>
<Value name="48">
<Value>LibelleTypeContrat</Value>
</Value>
<Value name="49">
<Value>Code5</Value>
</Value>
<Value name="50">
<Value>Libelle5</Value>
</Value>
<Value name="51">
<Value>Nomdusage</Value>
</Value>
<Value name="52">
<Value>NomUsage</Value>
</Value>
<Value name="53">
<Value>NomFamille</Value>
</Value>
<Value name="54">
<Value>DateNaissance</Value>
</Value>
<Value name="55">
<Value>NumINSEE</Value>
</Value>
<Value name="56">
<Value>NumINSEEProv</Value>
</Value>
<Value name="57">
<Value>Civilité</Value>
</Value>
<Value name="58">
<Value>CodeEtatCivil</Value>
</Value>
<Value name="59">
<Value>LibelléEtatCivil</Value>
</Value>
<Value name="60">
<Value>Nationalité</Value>
</Value>
<Value name="61">
<Value>LieuNaissance</Value>
</Value>
<Value name="62">
<Value>PaysNaissance</Value>
</Value>
<Value name="63">
<Value>NombreEnfants</Value>
</Value>
<Value name="64">
<Value>ComplémentAdresse</Value>
</Value>
<Value name="65">
<Value>Commune</Value>
</Value>
<Value name="66">
<Value>TéléphoneFixe</Value>
</Value>
<Value name="67">
<Value>TéléphoneGSM</Value>
</Value>
<Value name="68">
<Value>MailPerso</Value>
</Value>
<Value name="69">
<Value>TéléphonePro</Value>
</Value>
<Value name="70">
<Value>DateEntréeEtab</Value>
</Value>
<Value name="71">
<Value>LibelléMétier</Value>
</Value>
<Value name="72">
<Value>LibelléEmploi</Value>
</Value>
<Value name="73">
<Value>CodeTempsTravail</Value>
</Value>
<Value name="74">
<Value>LibelléTempsTravail</Value>
</Value>
<Value name="75">
<Value>DateDébutContrat</Value>
</Value>
<Value name="76">
<Value>CodeTypeDeContrat</Value>
</Value>
<Value name="77">
<Value>DateSortie</Value>
</Value>
<Value name="78">
<Value>CodeMotifSortie</Value>
</Value>
<Value name="79">
<Value>LibelléMotifSortie</Value>
</Value>
<Value name="80">
<Value>MatriculeManager</Value>
</Value>
<Value name="81">
<Value>%ParentBatch</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KSC.DTL.Alert">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65569,32864.192965</TimeChanged>
<TimeCreated>65569,31192.911065</TimeCreated>
<DependsOn>Ens.StreamContainer,Ens.AlertRequest</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='Ens.StreamContainer' targetClass='Ens.AlertRequest' create='new' language='objectscript' >
<assign value='source.OriginalFilename' property='target.AlertText' action='set' />
</transform>
]]></Data>
</XData>
</Class>


<Class name="KSC.DTL.Doctolib">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65539,60158.913292</TimeChanged>
<TimeCreated>65539,44026.417542</TimeCreated>
<DependsOn>ISSAS.Common.Message.ClinicomHL7,Ens.AlertRequest</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='ISSAS.Common.Message.ClinicomHL7' targetClass='Ens.AlertRequest' sourceDocType='2.5:SRM_S01' create='new' language='objectscript' >
<assign value='source.{PIDgrp(1).PID:PatientName().GivenName}_" "_source.{PIDgrp(1).PID:PatientName().FamilyName}_", dont l&apos;IPP est "_source.{PIDgrp(1).PID:PatientIdentifierList().IDNumber}_", doit venir en RdV le "_##class(ISSAS.Common.Tools.ClassDate).CvtCCOMToFRENCH(source.{ARQ:RequestedStartDateTimeRange()},1)' property='target.AlertText' action='set' />
</transform>
]]></Data>
</XData>
</Class>


<Class name="KSC.FileToMail">
<Description>
</Description>
<Super>Ens.Rule.Definition</Super>
<TimeChanged>65569,32874.645088</TimeChanged>
<TimeCreated>65569,31738.383206</TimeCreated>

<Parameter name="RuleAssistClass">
<Default>EnsLib.MsgRouter.VDocRuleAssist</Default>
</Parameter>

<XData name="RuleDefinition">
<XMLNamespace>http://www.intersystems.com/rule</XMLNamespace>
<Data><![CDATA[
<ruleDefinition alias="" context="EnsLib.MsgRouter.VDocRoutingEngine" production="KSC.PROD.Formation">
<ruleSet name="" effectiveBegin="" effectiveEnd="">
<rule name="">
<constraint name="source" value="FileToMail"></constraint>
<when condition="1">
<send transform="KSC.DTL.Alert" target="Mail.KSC"></send>
<return></return>
</when>
</rule>
</ruleSet>
</ruleDefinition>
]]></Data>
</XData>
</Class>


<Class name="KSC.FromVenus1">
<Description>
</Description>
<Super>Ens.Rule.Definition</Super>
<TimeChanged>65275,45294.721591</TimeChanged>
<TimeCreated>65275,43243.388363</TimeCreated>

<Parameter name="RuleAssistClass">
<Default>EnsLib.HL7.MsgRouter.RuleAssist</Default>
</Parameter>

<XData name="RuleDefinition">
<XMLNamespace>http://www.intersystems.com/rule</XMLNamespace>
<Data><![CDATA[
<ruleDefinition alias="KSC.FromVenus" context="EnsLib.HL7.MsgRouter.RoutingEngine" production="KSC.PROD.Formation">
<ruleSet name="" effectiveBegin="" effectiveEnd="">
<rule name="From Venus to TrakCare">
<constraint name="docCategory" value="2.5.1"></constraint>
<constraint name="docName" value="ADT_A01"></constraint>
<when condition="Document.{MSH:SendingApplication.NamespaceID}=&quot;VENUS&quot;">
<send transform="" target="ToTrakCare"></send>
<return></return>
</when>
</rule>
</ruleSet>
</ruleDefinition>
]]></Data>
</XData>
</Class>


<Class name="KSC.MessageDPT.Record">
<Description>
RECORDMAP: Generated from RecordMap 'User.MessageDPT'
on 2019-11-20 at 15:20:17.100 [2019-11-20 14:20:17.100 UTC]
by user KSC</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base</Super>
<TimeChanged>65337,55217.264064</TimeChanged>
<TimeCreated>65337,55217.100653</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Code">
<Type>%String</Type>
</Property>

<Property name="Nom">
<Type>%String</Type>
</Property>

<Property name="Info">
<Type>%String</Type>
</Property>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^KSC.MessageDPT.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^KSC.MessageDPT.RecordD</IdLocation>
<IndexLocation>^KSC.MessageDPT.RecordI</IndexLocation>
<StreamLocation>^KSC.MessageDPT.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="RecordDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Code</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>Info</Value>
</Value>
<Value name="5">
<Value>Nom</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="KSC.PROD.Formation">
<Super>Ens.Production</Super>
<TimeChanged>65815,39517.2158</TimeChanged>
<TimeCreated>65273,55519.959961</TimeCreated>

<XData name="ProductionDefinition">
<Data><![CDATA[
<Production Name="KSC.PROD.Formation" TestingEnabled="true" LogGeneralTraceEvents="true">
  <Description></Description>
  <ActorPoolSize>2</ActorPoolSize>
  <Item Name="TransfertBORNESIn" Category="Bornes" ClassName="EnsLib.File.PassthroughService" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="FilePath">C:\data\kristian\in</Setting>
    <Setting Target="Host" Name="TargetConfigNames">BornesQMATICOut</Setting>
    <Setting Target="Host" Name="AlertOnError">1</Setting>
    <Setting Target="Adapter" Name="FileSpec">*.doc</Setting>
  </Item>
  <Item Name="BornesQMATICOut" Category="Bornes" ClassName="EnsLib.File.PassthroughOperation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="Filename">%f</Setting>
    <Setting Target="Adapter" Name="FilePath">C:\data\kristian\out\</Setting>
    <Setting Target="Host" Name="AlertOnError">1</Setting>
  </Item>
  <Item Name="EnsClinicomTRNIn" Category="" ClassName="EnsLib.HL7.Service.TCPService" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Port">39001</Setting>
    <Setting Target="Host" Name="TargetConfigNames">RouteurCCOM.KSC,RouteurDoctolib.KSC</Setting>
    <Setting Target="Host" Name="MessageSchemaCategory">2.5</Setting>
    <Setting Target="Host" Name="AlertOnError">1</Setting>
    <Setting Target="Host" Name="Framing">MLLP</Setting>
  </Item>
  <Item Name="RouteurCCOM.KSC" Category="" ClassName="EnsLib.MsgRouter.VDocRoutingEngine" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="BusinessRuleName">RouteurCCOM.KSCRoutingRule</Setting>
    <Setting Target="Host" Name="RuleLogging">r</Setting>
  </Item>
  <Item Name="Ens.Alert" Category="" ClassName="EnsLib.MsgRouter.RoutingEngine" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="InactivityTimeout">0</Setting>
    <Setting Target="Host" Name="TargetConfigNames">Alertes.EMAIL</Setting>
  </Item>
  <Item Name="Mail.Alert" Category="" ClassName="EnsLib.EMail.AlertOperation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="SMTPPort">25</Setting>
    <Setting Target="Adapter" Name="SMTPServer">172.17.0.210</Setting>
    <Setting Target="Adapter" Name="From">HealthConnectTRN@chcb.local</Setting>
    <Setting Target="Adapter" Name="Recipient">kschlecht@ch-cotebasque.fr;psabathie@ch-cotebasque.fr</Setting>
  </Item>
  <Item Name="FromVenus" Category="" ClassName="EnsLib.HL7.Service.FileService" PoolSize="1" Enabled="false" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="MessageSchemaCategory">2.5.1</Setting>
    <Setting Target="Host" Name="TargetConfigNames">VenusRouteur</Setting>
    <Setting Target="Adapter" Name="FilePath">C:\data\kristian\in\</Setting>
    <Setting Target="Adapter" Name="FileSpec">*.hl7</Setting>
  </Item>
  <Item Name="ToTrakCare" Category="" ClassName="EnsLib.HL7.Operation.FileOperation" PoolSize="1" Enabled="false" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="FilePath">C:\data\kristian\out\</Setting>
    <Setting Target="Host" Name="Filename">%f_%Q%!+(_a)</Setting>
  </Item>
  <Item Name="VenusRouteur" Category="" ClassName="EnsLib.HL7.MsgRouter.RoutingEngine" PoolSize="1" Enabled="false" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="BusinessRuleName">KSC.FromVenus1</Setting>
  </Item>
  <Item Name="FromDEPT" Category="" ClassName="EnsLib.RecordMap.Service.FileService" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="RecordMap">MessageDPT</Setting>
    <Setting Target="Adapter" Name="FilePath">C:\data\kristian\csv\</Setting>
    <Setting Target="Adapter" Name="FileSpec">*.csv</Setting>
    <Setting Target="Adapter" Name="WorkPath">C:\data\kristian\csv\workpath\</Setting>
    <Setting Target="Host" Name="TargetConfigNames">RouteurDEPT</Setting>
  </Item>
  <Item Name="RouteurDEPT" Category="" ClassName="EnsLib.MsgRouter.RoutingEngine" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="BusinessRuleName">KSC.Regles.RouteurDEPT</Setting>
  </Item>
  <Item Name="ToDEPTOut" Category="" ClassName="EnsLib.RecordMap.Operation.FileOperation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="RecordMap">MessageDPT</Setting>
    <Setting Target="Adapter" Name="FilePath">C:\data\kristian\csv\out\</Setting>
    <Setting Target="Host" Name="Filename">NEW-%f</Setting>
  </Item>
  <Item Name="Titan.Files.ADT" Category="" ClassName="EnsLib.HL7.Operation.FileOperation" PoolSize="1" Enabled="false" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="Filename">Titan%q.hl7</Setting>
    <Setting Target="Adapter" Name="FilePath">\\srv-titanght\interfaces$\TRN\</Setting>
    <Setting Target="Host" Name="DefCharEncoding">Native</Setting>
  </Item>
  <Item Name="TITAN.EPS-Garazi.ADT" Category="" ClassName="EnsLib.HL7.Operation.FileOperation" PoolSize="1" Enabled="false" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="Filename">EPSGarazi%q.hl7</Setting>
    <Setting Target="Adapter" Name="FilePath">\\srv-titanght\interfaces$\TRN\</Setting>
    <Setting Target="Host" Name="DefCharEncoding">Native</Setting>
  </Item>
  <Item Name="RouterCCOMSource" Category="RAD,LABO" ClassName="EnsLib.MsgRouter.VDocRoutingEngine" PoolSize="1" Enabled="false" Foreground="false" Comment="Clinicom -&gt; Trakcare et autres" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="Validation"></Setting>
    <Setting Target="Host" Name="BusinessRuleName">ISSAS.Sites.Bayonne.PRD.Prod.RouterCCOMSourceRoutingRule</Setting>
  </Item>
  <Item Name="TCP.Ensemble.CwsTRN.StdIn" Category="" ClassName="ISSAS.Common.BS.MTS.TCPService" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Port">39002</Setting>
    <Setting Target="Host" Name="TargetConfigNames">RouteurCCOM.KSC</Setting>
    <Setting Target="Host" Name="MSHSendingApp">CLINICOM</Setting>
    <Setting Target="Host" Name="MSHSendingFacility">SHS</Setting>
    <Setting Target="Adapter" Name="QSize">0</Setting>
    <Setting Target="Host" Name="DaysToKeepMessages">120</Setting>
    <Setting Target="Host" Name="EnableSearchTableWarning">1</Setting>
    <Setting Target="Host" Name="SearchTableClass">ISSAS.Common.SearchTable.Clinicom</Setting>
  </Item>
  <Item Name="TCP.Ensemble.Doctolib.SIU" Category="" ClassName="ISSAS.Common.BS.MTS.TCPService" PoolSize="1" Enabled="false" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Port">39003</Setting>
    <Setting Target="Host" Name="TargetConfigNames">RouteurCCOM.KSC</Setting>
    <Setting Target="Host" Name="MSHSendingApp">CLINICOM</Setting>
    <Setting Target="Host" Name="MSHSendingFacility">SHS</Setting>
    <Setting Target="Adapter" Name="QSize">0</Setting>
    <Setting Target="Host" Name="DaysToKeepMessages">120</Setting>
    <Setting Target="Host" Name="MSHDocType">ClinicomReceiver</Setting>
  </Item>
  <Item Name="Routeur.CCOM.Source" Category="" ClassName="EnsLib.MsgRouter.VDocRoutingEngine" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
    <Setting Target="Host" Name="Validation"></Setting>
    <Setting Target="Host" Name="BusinessRuleName">ISSAS.Sites.Bayonne.TRN.Prod.RouterCCOMSourceRoutingRule</Setting>
    <Setting Target="Host" Name="InactivityTimeout">0</Setting>
  </Item>
  <Item Name="VENUS.ADT.File" Category="" ClassName="ISSAS.Common.BO.HL7.FileOperation" PoolSize="1" Enabled="false" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="FilePath">\\SRV-VENUSINT\Interfaces\\ADT</Setting>
    <Setting Target="Host" Name="FileNameFormat">ADT%cpt04%.HL7</Setting>
    <Setting Target="Host" Name="SendFileOk">0</Setting>
    <Setting Target="Host" Name="MSHReceivingApp">VENUS</Setting>
    <Setting Target="Host" Name="MSHReceivingFacility">NICESOFT</Setting>
    <Setting Target="Adapter" Name="Overwrite">0</Setting>
    <Setting Target="Host" Name="MSHVersionId">2.5</Setting>
    <Setting Target="Host" Name="SearchTableClass">ISSAS.Common.SearchTable.HL7v25IHE</Setting>
    <Setting Target="Host" Name="DaysToKeepMessages">120</Setting>
    <Setting Target="Host" Name="InactivityTimeout">0</Setting>
  </Item>
  <Item Name="TitanQ.ADT.Files" Category="" ClassName="ISSAS.Common.BO.HL7.FileOperation" PoolSize="1" Enabled="false" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="FilePath">\\srv-titanght\interfaces$\TRN\</Setting>
    <Setting Target="Host" Name="FileNameFormat">ADT%cpt05%.HL7</Setting>
    <Setting Target="Host" Name="SendFileOk">1</Setting>
    <Setting Target="Host" Name="MSHReceivingApp">TITAN</Setting>
    <Setting Target="Host" Name="MSHReceivingFacility">MALTA</Setting>
    <Setting Target="Adapter" Name="Overwrite">0</Setting>
    <Setting Target="Host" Name="MSHVersionId">2.5</Setting>
    <Setting Target="Host" Name="SearchTableClass">ISSAS.Common.SearchTable.HL7v25IHE</Setting>
    <Setting Target="Host" Name="DaysToKeepMessages">120</Setting>
    <Setting Target="Host" Name="InactivityTimeout">0</Setting>
    <Setting Target="Host" Name="EnableSearchTableWarning">1</Setting>
    <Setting Target="Host" Name="ReplyCodeActions">E=R</Setting>
    <Setting Target="Host" Name="SendSuperSession">1</Setting>
  </Item>
  <Item Name="CLINICOM.TCP" Category="" ClassName="ISSAS.Common.BO.MTS.TCPOperation" PoolSize="1" Enabled="false" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Port">8083</Setting>
    <Setting Target="Adapter" Name="IPAddress">!</Setting>
    <Setting Target="Host" Name="DaysToKeepMessages">120</Setting>
    <Setting Target="Host" Name="InactivityTimeout">0</Setting>
  </Item>
  <Item Name="RouterDoctolibHL7" Category="RDV" ClassName="EnsLib.HL7.MsgRouter.RoutingEngine" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="Validation"></Setting>
    <Setting Target="Host" Name="BusinessRuleName">ISSAS.Sites.Bayonne.TRN.Prod.RouterDoctolibHL7RoutingRule</Setting>
    <Setting Target="Host" Name="InactivityTimeout">0</Setting>
  </Item>
  <Item Name="Routeur.CCOM.Cible" Category="Health Connect CHCB" ClassName="EnsLib.MsgRouter.VDocRoutingEngine" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="Validation"></Setting>
    <Setting Target="Host" Name="BusinessRuleName">ISSAS.Sites.Bayonne.TRN.Prod.RouterCCOMTargetRoutingRule</Setting>
    <Setting Target="Host" Name="InactivityTimeout">0</Setting>
  </Item>
  <Item Name="TCP.Ensemble.Doctolib.SIUIn" Category="" ClassName="ISSAS.Common.BS.MTS.TCPServiceKSC" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Port">39003</Setting>
    <Setting Target="Adapter" Name="QSize">0</Setting>
    <Setting Target="Host" Name="TargetConfigNames">RouteurCCOM.KSC</Setting>
  </Item>
  <Item Name="Mail.KSC" Category="" ClassName="EnsLib.EMail.AlertOperation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="From">HealthConnectTRN@ch-cotebasque.fr</Setting>
    <Setting Target="Adapter" Name="Recipient">kschlecht@ch-cotebasque.fr</Setting>
    <Setting Target="Adapter" Name="SMTPPort">25</Setting>
    <Setting Target="Adapter" Name="SMTPServer">172.17.0.210</Setting>
  </Item>
  <Item Name="RouteurDoctolib.KSC" Category="" ClassName="EnsLib.MsgRouter.VDocRoutingEngine" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="BusinessRuleName">RouteurDoctolib.KSCRoutingRule</Setting>
  </Item>
  <Item Name="FileToMail" Category="" ClassName="EnsLib.File.PassthroughService" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="FilePath">C:\data\kristian\in</Setting>
    <Setting Target="Host" Name="TargetConfigNames">Router.ToMail</Setting>
    <Setting Target="Host" Name="AlertOnError">1</Setting>
    <Setting Target="Adapter" Name="FileSpec">*.txt</Setting>
  </Item>
  <Item Name="Router.ToMail" Category="" ClassName="EnsLib.MsgRouter.VDocRoutingEngine" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="BusinessRuleName">KSC.FileToMail</Setting>
  </Item>
  <Item Name="FTP.CHCB.Arborescence.FromAGIRH" Category="" ClassName="EnsLib.RecordMap.Service.BatchFTPService" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="@Kitry">
    <Setting Target="Adapter" Name="Credentials">MIPIH</Setting>
    <Setting Target="Adapter" Name="FTPServer">172.17.0.119</Setting>
    <Setting Target="Adapter" Name="FilePath">MIPIH/BO/KITRY</Setting>
    <Setting Target="Adapter" Name="FileSpec">CHCB_Arbo*.txt</Setting>
    <Setting Target="Host" Name="TargetConfigNames">Router.Kitry</Setting>
    <Setting Target="Adapter" Name="ServerListStyle">MSDOS</Setting>
    <Setting Target="Adapter" Name="UseFileStream">0</Setting>
    <Setting Target="Host" Name="RecordMap">AGIRH.Arborescence</Setting>
    <Setting Target="Host" Name="BatchClass">AGIRH.Arborescence.BatchIn</Setting>
  </Item>
  <Item Name="Router.Kitry" Category="" ClassName="EnsLib.MsgRouter.RoutingEngine" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="BusinessRuleName">Router.KitryRoutingRule</Setting>
  </Item>
  <Item Name="FTP.CHCB.Arborescence.ToKITRY" Category="" ClassName="EnsLib.RecordMap.Operation.BatchFTPOperation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Credentials">KITRY</Setting>
    <Setting Target="Adapter" Name="FTPPort">22</Setting>
    <Setting Target="Adapter" Name="FTPServer">80.94.184.35</Setting>
    <Setting Target="Host" Name="Filename">ARBORESCENCE_SL.CSV</Setting>
    <Setting Target="Adapter" Name="Protocol">SFTP</Setting>
    <Setting Target="Adapter" Name="StayConnected">60</Setting>
    <Setting Target="Host" Name="RecordMap">KITRY.Arborescence</Setting>
    <Setting Target="Adapter" Name="Overwrite">0</Setting>
    <Setting Target="Host" Name="SendSuperSession">0</Setting>
    <Setting Target="Adapter" Name="SFTPAppendMode">Client</Setting>
    <Setting Target="Adapter" Name="Charset">Binary</Setting>
    <Setting Target="Adapter" Name="SFTPFileAccessMode">0600</Setting>
    <Setting Target="Adapter" Name="SSLConfig"></Setting>
    <Setting Target="Host" Name="DefaultBatchClass">KITRY.Arborescence.BatchOut</Setting>
  </Item>
  <Item Name="FTP.CHCB.Affectation.FromAGIRH" Category="" ClassName="EnsLib.RecordMap.Service.BatchFTPService" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="@Kitry">
    <Setting Target="Adapter" Name="Credentials">MIPIH</Setting>
    <Setting Target="Adapter" Name="FTPServer">172.17.0.119</Setting>
    <Setting Target="Adapter" Name="FilePath">MIPIH/BO/KITRY</Setting>
    <Setting Target="Adapter" Name="FileSpec">CHCB_Affec*.txt</Setting>
    <Setting Target="Host" Name="RecordMap">AGIRH.Affectations</Setting>
    <Setting Target="Host" Name="TargetConfigNames">Router.Kitry</Setting>
    <Setting Target="Adapter" Name="ServerListStyle">MSDOS</Setting>
    <Setting Target="Adapter" Name="UseFileStream">0</Setting>
    <Setting Target="Host" Name="BatchClass">AGIRH.Affectations.BatchIn</Setting>
  </Item>
  <Item Name="FTP.CHCB.Affectations.ToKITRY" Category="" ClassName="EnsLib.RecordMap.Operation.BatchFTPOperation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Credentials">KITRY</Setting>
    <Setting Target="Adapter" Name="FTPPort">22</Setting>
    <Setting Target="Adapter" Name="FTPServer">80.94.184.35</Setting>
    <Setting Target="Host" Name="Filename">AFFECTATIONS_SL.CSV</Setting>
    <Setting Target="Adapter" Name="Protocol">SFTP</Setting>
    <Setting Target="Adapter" Name="StayConnected">60</Setting>
    <Setting Target="Host" Name="RecordMap">KITRY.Affectations</Setting>
    <Setting Target="Adapter" Name="Overwrite">0</Setting>
    <Setting Target="Host" Name="SendSuperSession">0</Setting>
    <Setting Target="Adapter" Name="SFTPAppendMode">Client</Setting>
    <Setting Target="Adapter" Name="Charset">Binary</Setting>
    <Setting Target="Adapter" Name="SFTPFileAccessMode">0600</Setting>
    <Setting Target="Host" Name="DefaultBatchClass">KITRY.Affectations.BatchOut</Setting>
  </Item>
  <Item Name="FTP.CHCB.Personnes.FromAGIRH" Category="" ClassName="EnsLib.RecordMap.Service.BatchFTPService" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="@Kitry">
    <Setting Target="Adapter" Name="Credentials">MIPIH</Setting>
    <Setting Target="Adapter" Name="FTPServer">172.17.0.119</Setting>
    <Setting Target="Adapter" Name="FilePath">MIPIH/BO/KITRY</Setting>
    <Setting Target="Adapter" Name="FileSpec">CHCB_Perso*.txt</Setting>
    <Setting Target="Host" Name="RecordMap">AGIRH.Personnes</Setting>
    <Setting Target="Host" Name="TargetConfigNames">Router.Kitry</Setting>
    <Setting Target="Adapter" Name="ServerListStyle">MSDOS</Setting>
    <Setting Target="Adapter" Name="UseFileStream">0</Setting>
    <Setting Target="Host" Name="BatchClass">AGIRH.Personnes.BatchIn</Setting>
  </Item>
  <Item Name="FTP.CHCB.Personnes.ToKITRY" Category="" ClassName="EnsLib.RecordMap.Operation.BatchFTPOperation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Credentials">KITRY</Setting>
    <Setting Target="Adapter" Name="FTPPort">22</Setting>
    <Setting Target="Adapter" Name="FTPServer">80.94.184.35</Setting>
    <Setting Target="Host" Name="Filename">PERSONNES_SL.CSV</Setting>
    <Setting Target="Adapter" Name="Protocol">SFTP</Setting>
    <Setting Target="Adapter" Name="StayConnected">60</Setting>
    <Setting Target="Host" Name="RecordMap">KITRY.Personnes</Setting>
    <Setting Target="Adapter" Name="Overwrite">0</Setting>
    <Setting Target="Host" Name="SendSuperSession">0</Setting>
    <Setting Target="Adapter" Name="SFTPAppendMode">Client</Setting>
    <Setting Target="Adapter" Name="Charset">Binary</Setting>
    <Setting Target="Adapter" Name="SFTPFileAccessMode">0600</Setting>
    <Setting Target="Adapter" Name="SSLConfig"></Setting>
    <Setting Target="Host" Name="DefaultBatchClass">KITRY.Personnes.BatchOut</Setting>
  </Item>
  <Item Name="FTP.CHCB.Handicap.FromAGIRH" Category="" ClassName="EnsLib.RecordMap.Service.BatchFTPService" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="@Kitry">
    <Setting Target="Adapter" Name="Credentials">MIPIH</Setting>
    <Setting Target="Adapter" Name="FTPServer">172.17.0.119</Setting>
    <Setting Target="Adapter" Name="FilePath">MIPIH/BO/KITRY</Setting>
    <Setting Target="Adapter" Name="FileSpec">CHCB_Handi*.txt</Setting>
    <Setting Target="Host" Name="RecordMap">AGIRH.Handicap</Setting>
    <Setting Target="Host" Name="TargetConfigNames">Router.Kitry</Setting>
    <Setting Target="Adapter" Name="ServerListStyle">MSDOS</Setting>
    <Setting Target="Adapter" Name="UseFileStream">0</Setting>
    <Setting Target="Host" Name="BatchClass">AGIRH.Handicap.BatchIn</Setting>
  </Item>
  <Item Name="FTP.CHCB.Handicap.ToKITRY" Category="" ClassName="EnsLib.RecordMap.Operation.BatchFTPOperation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Credentials">KITRY</Setting>
    <Setting Target="Adapter" Name="FTPPort">22</Setting>
    <Setting Target="Adapter" Name="FTPServer">80.94.184.35</Setting>
    <Setting Target="Host" Name="Filename">HANDICAP_SL.CSV</Setting>
    <Setting Target="Adapter" Name="Protocol">SFTP</Setting>
    <Setting Target="Adapter" Name="StayConnected">60</Setting>
    <Setting Target="Host" Name="RecordMap">KITRY.Handicap</Setting>
    <Setting Target="Adapter" Name="Overwrite">0</Setting>
    <Setting Target="Host" Name="SendSuperSession">0</Setting>
    <Setting Target="Adapter" Name="SFTPAppendMode">Client</Setting>
    <Setting Target="Adapter" Name="Charset">Binary</Setting>
    <Setting Target="Adapter" Name="SFTPFileAccessMode">0600</Setting>
    <Setting Target="Host" Name="DefaultBatchClass">KITRY.Handicap.BatchOut</Setting>
  </Item>
  <Item Name="FTP.CHCB.Accidents.FromAGIRH" Category="" ClassName="EnsLib.RecordMap.Service.BatchFTPService" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="@Kitry">
    <Setting Target="Adapter" Name="Credentials">MIPIH</Setting>
    <Setting Target="Adapter" Name="FTPServer">172.17.0.119</Setting>
    <Setting Target="Adapter" Name="FilePath">MIPIH/BO/KITRY</Setting>
    <Setting Target="Adapter" Name="FileSpec">CHCB_Accid*.txt</Setting>
    <Setting Target="Host" Name="RecordMap">AGIRH.Accidents</Setting>
    <Setting Target="Host" Name="TargetConfigNames">Router.Kitry</Setting>
    <Setting Target="Adapter" Name="ServerListStyle">MSDOS</Setting>
    <Setting Target="Adapter" Name="UseFileStream">0</Setting>
    <Setting Target="Host" Name="BatchClass">AGIRH.Accidents.BatchIn</Setting>
  </Item>
  <Item Name="FTP.CHCB.Accidents.ToKITRY" Category="" ClassName="EnsLib.RecordMap.Operation.BatchFTPOperation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Credentials">KITRY</Setting>
    <Setting Target="Adapter" Name="FTPPort">22</Setting>
    <Setting Target="Adapter" Name="FTPServer">80.94.184.35</Setting>
    <Setting Target="Host" Name="Filename">ACCIDENTS_SL.CSV</Setting>
    <Setting Target="Adapter" Name="Protocol">SFTP</Setting>
    <Setting Target="Adapter" Name="StayConnected">60</Setting>
    <Setting Target="Host" Name="RecordMap">KITRY.Accidents</Setting>
    <Setting Target="Adapter" Name="Overwrite">0</Setting>
    <Setting Target="Host" Name="SendSuperSession">0</Setting>
    <Setting Target="Adapter" Name="SFTPAppendMode">Client</Setting>
    <Setting Target="Adapter" Name="Charset">Binary</Setting>
    <Setting Target="Adapter" Name="SFTPFileAccessMode">0600</Setting>
    <Setting Target="Host" Name="DefaultBatchClass">KITRY.Accidents.BatchOut</Setting>
  </Item>
  <Item Name="FTP.CHCB.Formations.FromAGIRH" Category="" ClassName="EnsLib.RecordMap.Service.BatchFTPService" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="@Kitry">
    <Setting Target="Adapter" Name="Credentials">MIPIH</Setting>
    <Setting Target="Adapter" Name="FTPServer">172.17.0.119</Setting>
    <Setting Target="Adapter" Name="FilePath">MIPIH/BO/KITRY</Setting>
    <Setting Target="Adapter" Name="FileSpec">CHCB_Form*.txt</Setting>
    <Setting Target="Host" Name="RecordMap">AGIRH.Formations</Setting>
    <Setting Target="Host" Name="TargetConfigNames">Router.Kitry</Setting>
    <Setting Target="Adapter" Name="ServerListStyle">MSDOS</Setting>
    <Setting Target="Adapter" Name="UseFileStream">0</Setting>
    <Setting Target="Host" Name="BatchClass">AGIRH.Formations.BatchIn</Setting>
  </Item>
  <Item Name="FTP.CHCB.Formations.ToKITRY" Category="" ClassName="EnsLib.RecordMap.Operation.BatchFTPOperation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Credentials">KITRY</Setting>
    <Setting Target="Adapter" Name="FTPPort">22</Setting>
    <Setting Target="Adapter" Name="FTPServer">80.94.184.35</Setting>
    <Setting Target="Host" Name="Filename">FORMATIONS_SL.CSV</Setting>
    <Setting Target="Adapter" Name="Protocol">SFTP</Setting>
    <Setting Target="Adapter" Name="StayConnected">60</Setting>
    <Setting Target="Host" Name="RecordMap">KITRY.Formations</Setting>
    <Setting Target="Adapter" Name="Overwrite">0</Setting>
    <Setting Target="Host" Name="SendSuperSession">0</Setting>
    <Setting Target="Adapter" Name="SFTPAppendMode">Client</Setting>
    <Setting Target="Adapter" Name="Charset">Binary</Setting>
    <Setting Target="Adapter" Name="SFTPFileAccessMode">0600</Setting>
    <Setting Target="Host" Name="DefaultBatchClass">KITRY.Formations.BatchOut</Setting>
  </Item>
  <Item Name="FTP.CHCB.Enfants.FromAGIRH" Category="" ClassName="EnsLib.RecordMap.Service.BatchFTPService" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="@Kitry">
    <Setting Target="Adapter" Name="Credentials">MIPIH</Setting>
    <Setting Target="Adapter" Name="FTPServer">172.17.0.119</Setting>
    <Setting Target="Adapter" Name="FilePath">MIPIH/BO/KITRY</Setting>
    <Setting Target="Adapter" Name="FileSpec">CHCB_Enf*.txt</Setting>
    <Setting Target="Host" Name="RecordMap">AGIRH.Enfants</Setting>
    <Setting Target="Host" Name="TargetConfigNames">Router.Kitry</Setting>
    <Setting Target="Adapter" Name="ServerListStyle">MSDOS</Setting>
    <Setting Target="Adapter" Name="UseFileStream">0</Setting>
    <Setting Target="Host" Name="BatchClass">AGIRH.Enfants.BatchIn</Setting>
  </Item>
  <Item Name="FTP.CHCB.Enfants.ToKITRY" Category="" ClassName="EnsLib.RecordMap.Operation.BatchFTPOperation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Credentials">KITRY</Setting>
    <Setting Target="Adapter" Name="FTPPort">22</Setting>
    <Setting Target="Adapter" Name="FTPServer">80.94.184.35</Setting>
    <Setting Target="Host" Name="Filename">ENFANTS_SL.CSV</Setting>
    <Setting Target="Adapter" Name="Protocol">SFTP</Setting>
    <Setting Target="Adapter" Name="StayConnected">60</Setting>
    <Setting Target="Host" Name="RecordMap">KITRY.Enfants</Setting>
    <Setting Target="Adapter" Name="Overwrite">0</Setting>
    <Setting Target="Host" Name="SendSuperSession">0</Setting>
    <Setting Target="Adapter" Name="SFTPAppendMode">Client</Setting>
    <Setting Target="Adapter" Name="Charset">Binary</Setting>
    <Setting Target="Adapter" Name="SFTPFileAccessMode">0600</Setting>
    <Setting Target="Host" Name="DefaultBatchClass">KITRY.Enfants.BatchOut</Setting>
  </Item>
  <Item Name="FTP.CHCB.Absences.FromAGIRH" Category="" ClassName="EnsLib.RecordMap.Service.BatchFTPService" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Credentials">MIPIH</Setting>
    <Setting Target="Adapter" Name="FTPServer">172.17.0.119</Setting>
    <Setting Target="Adapter" Name="FilePath">MIPIH/BO/KITRY</Setting>
    <Setting Target="Adapter" Name="FileSpec">Abs*.txt</Setting>
    <Setting Target="Host" Name="RecordMap">AGIRH.Absences</Setting>
    <Setting Target="Host" Name="TargetConfigNames">Router.Kitry</Setting>
    <Setting Target="Adapter" Name="ServerListStyle">MSDOS</Setting>
    <Setting Target="Adapter" Name="UseFileStream">0</Setting>
    <Setting Target="Host" Name="BatchClass">AGIRH.Absences.BatchIn</Setting>
  </Item>
  <Item Name="FTP.CHCB.Absences.ToKITRY" Category="" ClassName="EnsLib.RecordMap.Operation.BatchFTPOperation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Credentials">KITRY</Setting>
    <Setting Target="Adapter" Name="FTPPort">22</Setting>
    <Setting Target="Adapter" Name="FTPServer">80.94.184.35</Setting>
    <Setting Target="Host" Name="Filename">ABSENCES_SL.CSV</Setting>
    <Setting Target="Adapter" Name="Protocol">SFTP</Setting>
    <Setting Target="Adapter" Name="StayConnected">60</Setting>
    <Setting Target="Host" Name="RecordMap">KITRY.Absences</Setting>
    <Setting Target="Adapter" Name="Overwrite">0</Setting>
    <Setting Target="Host" Name="SendSuperSession">0</Setting>
    <Setting Target="Adapter" Name="SFTPAppendMode">Client</Setting>
    <Setting Target="Adapter" Name="Charset">Binary</Setting>
    <Setting Target="Adapter" Name="SFTPFileAccessMode">0600</Setting>
    <Setting Target="Host" Name="DefaultBatchClass">KITRY.Absences.BatchOut</Setting>
  </Item>
  <Item Name="GTT.CHCB.Nomenclature.FromMIPIH" Category="" ClassName="EnsLib.RecordMap.Service.BatchFTPService" PoolSize="1" Enabled="false" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="Credentials">MIPIH</Setting>
    <Setting Target="Adapter" Name="FTPServer">172.20.0.27</Setting>
    <Setting Target="Adapter" Name="FilePath">depot_CHRONOS/V2</Setting>
    <Setting Target="Adapter" Name="FileSpec">Nomen*.txt</Setting>
    <Setting Target="Host" Name="RecordMap">AGIRH.Nomenclature</Setting>
    <Setting Target="Host" Name="TargetConfigNames">Router.GTT</Setting>
    <Setting Target="Adapter" Name="ServerListStyle">Unix</Setting>
    <Setting Target="Adapter" Name="UseFileStream">0</Setting>
    <Setting Target="Host" Name="BatchClass">AGIRH.Nomenclature.BatchIn</Setting>
    <Setting Target="Adapter" Name="StayConnected">0</Setting>
  </Item>
  <Item Name="GTT.CHCB.Nomenclature.ToCHRONOS" Category="" ClassName="EnsLib.RecordMap.Operation.BatchFTPOperation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="Filename">TableRefKSC.csv</Setting>
    <Setting Target="Adapter" Name="FTPServer">172.17.0.120</Setting>
    <Setting Target="Adapter" Name="Credentials">MIPIH</Setting>
    <Setting Target="Host" Name="DefaultBatchClass">CHRONOS.Nomenclature.BatchOut</Setting>
    <Setting Target="Host" Name="RecordMap">CHRONOS.Nomenclature</Setting>
  </Item>
  <Item Name="Router.GTT" Category="" ClassName="EnsLib.MsgRouter.RoutingEngine" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="BusinessRuleName">Router.GTTRoutingRule</Setting>
  </Item>
</Production>
]]></Data>
</XData>
</Class>


<Class name="KSC.Regles.RouteurDEPT">
<Description>
</Description>
<Super>Ens.Rule.Definition</Super>
<TimeChanged>65337,59162.303851</TimeChanged>
<TimeCreated>65337,56117.927106</TimeCreated>

<Parameter name="RuleAssistClass">
<Default>EnsLib.MsgRouter.RuleAssist</Default>
</Parameter>

<XData name="RuleDefinition">
<XMLNamespace>http://www.intersystems.com/rule</XMLNamespace>
<Data><![CDATA[
<ruleDefinition alias="" context="EnsLib.MsgRouter.RoutingEngine" production="KSC.PROD.Formation">
<ruleSet name="" effectiveBegin="" effectiveEnd="">
<rule name="Departement contient A/a">
<constraint name="source" value="FromDEPT"></constraint>
<constraint name="msgClass" value="KSC.MessageDPT.Record"></constraint>
<when condition="ToUpper(Document.Nom) Contains &quot;AL&quot;">
<send transform="" target="ToDEPTOut"></send>
<return></return>
</when>
</rule>
</ruleSet>
</ruleDefinition>
]]></Data>
</XData>
</Class>


<Class name="User.MessageDPT">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'User.MessageDPT'
on 2019-11-20 at 15:20:17.127 [2019-11-20 14:20:17.127 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65337,55217.130579</TimeChanged>
<TimeCreated>65337,54091.443705</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>KSC.MessageDPT.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, "")
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Code = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Nom = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Info = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: pObject.Code,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Nom,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Info,1: ""),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("KSC.MessageDPT.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="User.MessageDPT" type="delimited" char_encoding="UTF-8" targetClassname="KSC.MessageDPT.Record" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Code" datatype="%String">
  </Field>
  <Field name="Nom" datatype="%String">
  </Field>
  <Field name="Info" datatype="%String">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="Router.GTTRoutingRule">
<Description>
</Description>
<Super>Ens.Rule.Definition</Super>
<TimeChanged>65814,35003.550826</TimeChanged>
<TimeCreated>65814,33707.149794</TimeCreated>

<Parameter name="RuleAssistClass">
<Default>EnsLib.MsgRouter.RuleAssist</Default>
</Parameter>

<XData name="RuleDefinition">
<XMLNamespace>http://www.intersystems.com/rule</XMLNamespace>
<Data><![CDATA[
<ruleDefinition alias="" context="EnsLib.MsgRouter.RoutingEngine" production="KSC.PROD.Formation">
<ruleSet name="" effectiveBegin="" effectiveEnd="">
<rule name="Nomenclature du CHCB">
<constraint name="source" value="GTT.CHCB.Nomenclature.FromMIPIH"></constraint>
<constraint name="msgClass" value="AGIRH.Nomenclature.BatchIn"></constraint>
<when condition="1">
<send transform="AGIRHtoCHRONOS.Nomenclature" target="GTT.CHCB.Nomenclature.ToCHRONOS"></send>
<return></return>
</when>
</rule>
</ruleSet>
</ruleDefinition>
]]></Data>
</XData>
</Class>


<Class name="Router.KitryRoutingRule">
<Description>
</Description>
<Super>Ens.Rule.Definition</Super>
<TimeChanged>65811,53122.355489</TimeChanged>
<TimeCreated>65800,55048.991687</TimeCreated>

<Parameter name="RuleAssistClass">
<Default>EnsLib.MsgRouter.RuleAssist</Default>
</Parameter>

<XData name="RuleDefinition">
<XMLNamespace>http://www.intersystems.com/rule</XMLNamespace>
<Data><![CDATA[
<ruleDefinition alias="" context="EnsLib.MsgRouter.RoutingEngine" production="KSC.PROD.Formation">
<ruleSet name="" effectiveBegin="" effectiveEnd="">
<rule name="Arborescence CHCB">
<constraint name="source" value="FTP.CHCB.Arborescence.FromAGIRH"></constraint>
<constraint name="msgClass" value="AGIRH.Arborescence.BatchIn"></constraint>
<when condition="1">
<send transform="AGIRHtoKITRY.Arborescence" target="FTP.CHCB.Arborescence.ToKITRY"></send>
<return></return>
</when>
</rule>
<rule name="Affectations CHCB" disabled="false">
<constraint name="source" value="FTP.CHCB.Affectation.FromAGIRH"></constraint>
<constraint name="msgClass" value="AGIRH.Affectations.BatchIn"></constraint>
<when condition="1">
<send transform="AGIRHtoKITRY.Affectations" target="FTP.CHCB.Affectations.ToKITRY"></send>
<return></return>
</when>
</rule>
<rule name="Personnes CHCB" disabled="false">
<constraint name="source" value="FTP.CHCB.Personnes.FromAGIRH"></constraint>
<constraint name="msgClass" value="AGIRH.Personnes.BatchIn"></constraint>
<when condition="1">
<send transform="AGIRHtoKITRY.Personnes" target="FTP.CHCB.Personnes.ToKITRY"></send>
<return></return>
</when>
</rule>
<rule name="Handicap CHCB" disabled="false">
<constraint name="source" value="FTP.CHCB.Handicap.FromAGIRH"></constraint>
<constraint name="msgClass" value="AGIRH.Handicap.BatchIn"></constraint>
<when condition="1">
<send transform="AGIRHtoKITRY.Handicap" target="FTP.CHCB.Handicap.ToKITRY"></send>
<return></return>
</when>
</rule>
<rule name="Accidents CHCB" disabled="false">
<constraint name="source" value="FTP.CHCB.Accidents.FromAGIRH"></constraint>
<constraint name="msgClass" value="AGIRH.Accidents.BatchIn"></constraint>
<when condition="1">
<send transform="AGIRHtoKITRY.Accidents" target="FTP.CHCB.Accidents.ToKITRY"></send>
<return></return>
</when>
</rule>
<rule name="Formations CHCB" disabled="false">
<constraint name="source" value="FTP.CHCB.Formations.FromAGIRH"></constraint>
<constraint name="msgClass" value="AGIRH.Formations.BatchIn"></constraint>
<when condition="1">
<send transform="AGIRHtoKITRY.Formations" target="FTP.CHCB.Formations.ToKITRY"></send>
<return></return>
</when>
</rule>
<rule name="Enfants CHcB" disabled="false">
<constraint name="source" value="FTP.CHCB.Enfants.FromAGIRH"></constraint>
<constraint name="msgClass" value="AGIRH.Enfants.BatchIn"></constraint>
<when condition="1">
<send transform="AGIRHtoKITRY.Enfants" target="FTP.CHCB.Enfants.ToKITRY"></send>
<return></return>
</when>
</rule>
<rule name="Absences CHCB" disabled="false">
<constraint name="source" value="FTP.CHCB.Absences.FromAGIRH"></constraint>
<constraint name="msgClass" value="AGIRH.Absences.BatchIn"></constraint>
<when condition="1">
<send transform="AGIRHtoKITRY.Absences" target="FTP.CHCB.Absences.ToKITRY"></send>
<return></return>
</when>
</rule>
</ruleSet>
</ruleDefinition>
]]></Data>
</XData>
</Class>


<Class name="RouteurCCOM.KSCRoutingRule">
<Description>
</Description>
<Super>Ens.Rule.Definition</Super>
<TimeChanged>65786,29080.437717</TimeChanged>
<TimeCreated>65274,49728.502949</TimeCreated>

<Parameter name="RuleAssistClass">
<Default>EnsLib.MsgRouter.VDocRuleAssist</Default>
</Parameter>

<XData name="RuleDefinition">
<XMLNamespace>http://www.intersystems.com/rule</XMLNamespace>
<Data><![CDATA[
<ruleDefinition alias="" context="EnsLib.MsgRouter.VDocRoutingEngine" production="KSC.PROD.Formation">
<ruleSet name="" effectiveBegin="" effectiveEnd="">
<rule name="PB (Identite Std CWS)" disabled="false">
<constraint name="source" value="TCP.Ensemble.CwsTRN.StdIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docName" value="PB"></constraint>
<when condition="1">
<send transform="ISSAS.Common.DTL.CCOMtoTITAN25.PBtoADT" target="TitanQ.ADT.Files"></send>
<return></return>
</when>
</rule>
<rule name="AD (Admission Std CWS)" disabled="false">
<constraint name="source" value="TCP.Ensemble.CwsTRN.StdIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docName" value="AD"></constraint>
<when condition="Lookup(Document.{AD3:AD301Hopital.CodeEtablissement},&quot;CCOM_HL7_EHPAD&quot;)=&quot;&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoTITAN25.ADtoADT" target="TitanQ.ADT.Files"></send>
<return></return>
</when>
</rule>
<rule name="DS (Sortie Std CWS)" disabled="false">
<constraint name="source" value="TCP.Ensemble.CwsTRN.StdIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docName" value="DS"></constraint>
<when condition="Lookup(Document.{DS:DS02Hopital.CodeEtablissement},&quot;CCOM_HL7_EHPAD&quot;)=&quot;&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoTITAN25.DStoADT" target="TitanQ.ADT.Files"></send>
<return></return>
</when>
</rule>
<rule name="RI (Retour Std CWS)" disabled="false">
<constraint name="source" value="TCP.Ensemble.CwsTRN.StdIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docName" value="RI"></constraint>
<when condition="Document.{RI:RI02CodeHopital}=&quot;GARA&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoTITAN25.RItoADT" target="TitanQ.ADT.Files"></send>
<return></return>
</when>
</rule>
<rule name="SD (Départ Std CWS)" disabled="false">
<constraint name="source" value="TCP.Ensemble.CwsTRN.StdIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docName" value="SD"></constraint>
<when condition="Document.{SD:SD02CodeHopital}=&quot;GARA&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoTITAN25.SDtoADT" target="TitanQ.ADT.Files"></send>
<return></return>
</when>
</rule>
<rule name="TR (Mutation Std CWS)" disabled="false">
<constraint name="source" value="TCP.Ensemble.CwsTRN.StdIn"></constraint>
<constraint name="msgClass" value="ISSAS.Common.Message.ClinicomHL7"></constraint>
<constraint name="docCategory" value="Clinicom"></constraint>
<constraint name="docName" value="TR"></constraint>
<when condition="Lookup(Document.{TR:TR02CodeHopital.CodeEtablissement},&quot;CCOM_HL7_EHPAD&quot;)=&quot;&quot;">
<send transform="ISSAS.Common.DTL.CCOMtoTITAN25.TRtoADT" target="TitanQ.ADT.Files"></send>
<return></return>
</when>
</rule>
<rule name="AD (Admission Hosp)" disabled="true">
<constraint name="source" value="EnsClinicomTRNIn"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docCategory" value="2.5"></constraint>
<constraint name="docName" value="ADT_A01,ADT_A06"></constraint>
<when condition="1">
<send transform="" target="Titan.Files.ADT"></send>
<return></return>
</when>
</rule>
<rule name="PA (Pré Admission)" disabled="true">
<constraint name="source" value="EnsClinicomTRNIn"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docCategory" value="2.5"></constraint>
<constraint name="docName" value="ADT_A05,ADT_A11"></constraint>
<when condition="1">
<send transform="" target="Titan.Files.ADT"></send>
<return></return>
</when>
</rule>
<rule name="PB (Données patient)" disabled="true">
<constraint name="source" value="EnsClinicomTRNIn"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docCategory" value="2.5"></constraint>
<constraint name="docName" value="ADT_A28,ADT_A29,ADT_A31"></constraint>
<when condition="1">
<send transform="" target="Titan.Files.ADT"></send>
<return></return>
</when>
</rule>
<rule name="PM (Fusion identité)" disabled="true">
<constraint name="source" value="EnsClinicomTRNIn"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docCategory" value="2.5"></constraint>
<constraint name="docName" value="ADT_A40,ADT_A44"></constraint>
<when condition="1">
<send transform="" target="Titan.Files.ADT"></send>
<return></return>
</when>
</rule>
</ruleSet>
</ruleDefinition>
]]></Data>
</XData>
</Class>


<Class name="RouteurDoctolib.KSCRoutingRule">
<Description>
</Description>
<Super>Ens.Rule.Definition</Super>
<TimeChanged>65706,36229.700079</TimeChanged>
<TimeCreated>65539,36865.615195</TimeCreated>

<Parameter name="RuleAssistClass">
<Default>EnsLib.MsgRouter.VDocRuleAssist</Default>
</Parameter>

<XData name="RuleDefinition">
<XMLNamespace>http://www.intersystems.com/rule</XMLNamespace>
<Data><![CDATA[
<ruleDefinition alias="" context="EnsLib.MsgRouter.VDocRoutingEngine" production="KSC.PROD.Formation">
<ruleSet name="" effectiveBegin="" effectiveEnd="">
<rule name="RdV from DOCTOLIB" disabled="true">
<constraint name="source" value="EnsClinicomTRNIn"></constraint>
<constraint name="msgClass" value="EnsLib.HL7.Message"></constraint>
<constraint name="docCategory" value="2.5"></constraint>
<constraint name="docName" value="SRM_S01,SRM_S02,SRM_S03,SRM_S04,SRM_S05,SRM_S06,SRM_S07,SRM_S08,SRM_S09,SRM_S10,SRM_S11"></constraint>
<when condition="1">
<send transform="KSC.DTL.Doctolib" target="Mail.KSC"></send>
<return></return>
</when>
</rule>
</ruleSet>
</ruleDefinition>
]]></Data>
</XData>
</Class>


<Class name="User.MessageDPT">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'User.MessageDPT'
on 2019-11-20 at 15:20:17.127 [2019-11-20 14:20:17.127 UTC]
by user KSC</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65337,55217.130579</TimeChanged>
<TimeCreated>65337,54091.443705</TimeCreated>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Parameter name="OBJECTNAME">
<Default>KSC.MessageDPT.Record</Default>
</Parameter>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(13,10), tRecLabel, .pLookAhead, "")
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Code = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Nom = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Info = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: pObject.Code,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Nom,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Info,1: ""),0)
	Do pStream.Write($char(13,10), 0, .tStatus)
	If $$$ISERR(tStatus) Quit tStatus
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("KSC.MessageDPT.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec/>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="User.MessageDPT" type="delimited" char_encoding="UTF-8" targetClassname="KSC.MessageDPT.Record" complexBatchManaged="0" padFromLeft="0" recordTerminator="\x0d\x0a" allowEarlyTerminator="0">
  <Separators>
    <Separator>;</Separator>
  </Separators>
  <Field name="Code" datatype="%String">
  </Field>
  <Field name="Nom" datatype="%String">
  </Field>
  <Field name="Info" datatype="%String">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Document name="Clinicom.HL7">
<Category name="Clinicom">

<MessageGroup name='AC' description='Partie Commune Acte'/>
<MessageGroup name='AD' description='Admission'/>
<MessageGroup name='ADT' description='Admission Discharge Transfer'/>
<MessageGroup name='AP' description='Rendez-vous Agenda'/>
<MessageGroup name='AS' description='Annulation Episode'/>
<MessageGroup name='BS' description='Permutation Lit'/>
<MessageGroup name='CA' description='CompteRendu Administration Pharmaceutique'/>
<MessageGroup name='CC' description='Codification Actes CCAM NGAP'/>
<MessageGroup name='CD' description='Consultation Acte'/>
<MessageGroup name='CM' description='Cession Medicament'/>
<MessageGroup name='CSI' description='CONSORE PMSI'/>
<MessageGroup name='CT' description='Creation Acte'/>
<MessageGroup name='CU' description='Utilisateur'/>
<MessageGroup name='DB' description='Document Bureautique'/>
<MessageGroup name='DL' description='Medecins Patient'/>
<MessageGroup name='DM' description='FDB Medecin Exterieur'/>
<MessageGroup name='DMP' description='Export Documents'/>
<MessageGroup name='DO' description='Donnees Complementaires'/>
<MessageGroup name='DOC' description='Document Bureautique'/>
<MessageGroup name='DP' description='Demographie Patient Etendue'/>
<MessageGroup name='DR' description='Donnees Medecin'/>
<MessageGroup name='DS' description='Sortie Patient'/>
<MessageGroup name='ECR' description='Ecriture Comptable'/>
<MessageGroup name='ER' description='Erreurs Integration'/>
<MessageGroup name='HM' description='FDB Medecins Correspondants'/>
<MessageGroup name='IA' description='Indisponibilite Agenda'/>
<MessageGroup name='IN' description='Debiteur'/>
<MessageGroup name='MDG' description='Mode Degrade'/>
<MessageGroup name='MP' description='Modes Placement Psy'/>
<MessageGroup name='ND' description='Sortie Nouveau Ne'/>
<MessageGroup name='NR' description='Enregistrement Nouveau Ne'/>
<MessageGroup name='OD' description='Cloture Episode Externe'/>
<MessageGroup name='OP' description='Pre Consultation'/>
<MessageGroup name='OR' description='Enregistrement Episode Externe'/>
<MessageGroup name='ORM' description='Prescription'/>
<MessageGroup name='PA' description='Pre Admission'/>
<MessageGroup name='PB' description='Demographie Patient'/>
<MessageGroup name='PD' description='Preparation Sortie'/>
<MessageGroup name='PH' description='Prescription Pharmaceutique'/>
<MessageGroup name='PL' description='Cloture Pre Admission'/>
<MessageGroup name='PM' description='Fusion Patient'/>
<MessageGroup name='PP' description='Patient Present'/>
<MessageGroup name='PT' description='Preparation Mutation'/>
<MessageGroup name='PU' description='Preparation Admission'/>
<MessageGroup name='RI' description='Retour Permission'/>
<MessageGroup name='RSP' description='Reponse Requete Patient'/>
<MessageGroup name='SD' description='Permission Patient'/>
<MessageGroup name='SI' description='Recueil PMSI'/>
<MessageGroup name='SOR' description='Discharge ASTM'/>
<MessageGroup name='SU' description='Sortie Urgence'/>
<MessageGroup name='TL' description='Gestion Ligne Telephonique'/>
<MessageGroup name='TR' description='Mutation Ou Seance'/>
<MessageGroup name='UC' description='Unite de consultation'/>
<MessageGroup name='UF' description='Unite Fonctionnelle'/>
<MessageGroup name='UR' description='Enregistrement Episode Urgence'/>
<MessageGroup name='US' description='Unite de Soins'/>

<MessageEvent name='AC' description='Partie Commune Acte'/>
<MessageEvent name='AD' description='Admission'/>
<MessageEvent name='ADT' description='Admission Discharge Transfer'/>
<MessageEvent name='AP' description='Rendez-vous Agenda'/>
<MessageEvent name='AS' description='Annulation Episode'/>
<MessageEvent name='BS' description='Permutation Lit'/>
<MessageEvent name='CA' description='CompteRendu Administration Pharmaceutique'/>
<MessageEvent name='CC' description='Codification Actes CCAM NGAP'/>
<MessageEvent name='CD' description='Consultation Acte'/>
<MessageEvent name='CM' description='Cession Medicament'/>
<MessageEvent name='CSI' description='CONSORE PMSI'/>
<MessageEvent name='CT' description='Creation Acte'/>
<MessageEvent name='CU' description='Utilisateur'/>
<MessageEvent name='DB' description='Document Bureautique'/>
<MessageEvent name='DL' description='Medecins Patient'/>
<MessageEvent name='DM' description='FDB Medecin Exterieur'/>
<MessageEvent name='DMP' description='Export Documents'/>
<MessageEvent name='DO' description='Donnees Complementaires'/>
<MessageEvent name='DOC' description='Document Bureautique'/>
<MessageEvent name='DP' description='Demographie Patient Etendue'/>
<MessageEvent name='DR' description='Donnees Medecin'/>
<MessageEvent name='DS' description='Sortie Patient'/>
<MessageEvent name='ECR' description='Ecriture Comptable'/>
<MessageEvent name='ER' description='Erreurs Integration'/>
<MessageEvent name='HM' description='FDB Medecins Correspondants'/>
<MessageEvent name='IA' description='Indisponibilite Agenda'/>
<MessageEvent name='IN' description='Debiteur'/>
<MessageEvent name='MDG' description='Mode Degrade'/>
<MessageEvent name='MP' description='Modes Placement Psy'/>
<MessageEvent name='ND' description='Sortie Nouveau Ne'/>
<MessageEvent name='NR' description='Enregistrement Nouveau Ne'/>
<MessageEvent name='OD' description='Cloture Episode Externe'/>
<MessageEvent name='OP' description='Pre Consultation'/>
<MessageEvent name='OR' description='Enregistrement Episode Externe'/>
<MessageEvent name='ORM' description='Prescription'/>
<MessageEvent name='PA' description='Pre Admission'/>
<MessageEvent name='PB' description='Demographie Patient'/>
<MessageEvent name='PD' description='Preparation Sortie'/>
<MessageEvent name='PH' description='Prescription Pharmaceutique'/>
<MessageEvent name='PL' description='Cloture Pre Admission'/>
<MessageEvent name='PM' description='Fusion Patient'/>
<MessageEvent name='PP' description='Patient Present'/>
<MessageEvent name='PT' description='Preparation Mutation'/>
<MessageEvent name='PU' description='Preparation Admission'/>
<MessageEvent name='RI' description='Retour Permission'/>
<MessageEvent name='RSP' description='Reponse Requete Patient'/>
<MessageEvent name='SD' description='Permission Patient'/>
<MessageEvent name='SI' description='Recueil PMSI'/>
<MessageEvent name='SOR' description='Discharge ASTM'/>
<MessageEvent name='SU' description='Sortie Urgence'/>
<MessageEvent name='TL' description='Gestion Ligne Telephonique'/>
<MessageEvent name='TR' description='Mutation Ou Seance'/>
<MessageEvent name='UC' description='Unite de consultation'/>
<MessageEvent name='UF' description='Unite Fonctionnelle'/>
<MessageEvent name='UR' description='Enregistrement Episode Urgence'/>
<MessageEvent name='US' description='Unite de Soins'/>

<MessageType name='AC' structure='AC'/>
<MessageType name='AD' structure='AD'/>
<MessageType name='ADT' structure='ADT'/>
<MessageType name='AP' structure='AP1'/>
<MessageType name='AS' structure='AS'/>
<MessageType name='BS' structure='BS'/>
<MessageType name='CA' structure='CA'/>
<MessageType name='CC' structure='CC'/>
<MessageType name='CD' structure='CD'/>
<MessageType name='CM' structure='CM'/>
<MessageType name='CSI' structure='CSI'/>
<MessageType name='CT' structure='CT'/>
<MessageType name='CU' structure='CU'/>
<MessageType name='DB' structure='DB'/>
<MessageType name='DL' structure='DL'/>
<MessageType name='DM' structure='DM'/>
<MessageType name='DMP' structure='DMP'/>
<MessageType name='DO' structure='DO'/>
<MessageType name='DOC' structure='DOC'/>
<MessageType name='DP' structure='DP'/>
<MessageType name='DR' structure='DR'/>
<MessageType name='DS' structure='DS'/>
<MessageType name='ECR' structure='ECR'/>
<MessageType name='ER' structure='ER'/>
<MessageType name='HM' structure='HM'/>
<MessageType name='IA' structure='IA'/>
<MessageType name='IN' structure='IN'/>
<MessageType name='MDG' structure='MDG'/>
<MessageType name='MP' structure='MP'/>
<MessageType name='ND' structure='ND'/>
<MessageType name='NR' structure='NR'/>
<MessageType name='OD' structure='OD'/>
<MessageType name='OP' structure='OP'/>
<MessageType name='OR' structure='OR'/>
<MessageType name='ORM' structure='ORM'/>
<MessageType name='PA' structure='PA'/>
<MessageType name='PB' structure='PB'/>
<MessageType name='PD' structure='PD'/>
<MessageType name='PH' structure='PH'/>
<MessageType name='PL' structure='PL'/>
<MessageType name='PM' structure='PM'/>
<MessageType name='PP' structure='PP'/>
<MessageType name='PT' structure='PT'/>
<MessageType name='PU' structure='PU'/>
<MessageType name='RI' structure='RI'/>
<MessageType name='RSP' structure='RSP'/>
<MessageType name='SD' structure='SD'/>
<MessageType name='SI' structure='SI'/>
<MessageType name='SOR' structure='SOR'/>
<MessageType name='SU' structure='SU'/>
<MessageType name='TL' structure='TL'/>
<MessageType name='TR' structure='TR'/>
<MessageType name='UC' structure='UC'/>
<MessageType name='UF' structure='UF'/>
<MessageType name='UR' structure='UR'/>
<MessageType name='US' structure='US'/>

<MessageStructure name='AC' definition='MSH~AC' description='Partie Commune Acte'/>
<MessageStructure name='AD' definition='MSH~AD~AD2~AD3~AD4~AD5~AD6~AD7' description='Admission'/>
<MessageStructure name='ADT' definition='MSH~H~P~L' description='Admission Discharge Transfer'/>
<MessageStructure name='AP1' definition='MSH~AP1~AP2' description='Rendez-vous Agenda'/>
<MessageStructure name='AS' definition='MSH~AS' description='Annulation Episode'/>
<MessageStructure name='BS' definition='MSH~BS' description='Permutation Lit'/>
<MessageStructure name='CA' definition='MSH~CA~CA2~CA3~{~CA4~{~CA5~}~}' description='Compte Rendu Administration Pharmaceutique'/>
<MessageStructure name='CC' definition='MSH~CC~[~{~CC2~}~]~[~{~CC3~}~]~[~{~CC4~}~]' description='Codification Actes CCAM NGAP'/>
<MessageStructure name='CD' definition='MSH~CD' description='Consultation Acte'/>
<MessageStructure name='CM' definition='MSH~CM~CM2' description='Cession Medicament'/>
<MessageStructure name='CSI' definition='MSH~CSI~{~RSS~{~RUM~[~{~DIG~}~]~[~{~ACT~}~]~}~}' description='PMSI CONSORE'/>
<MessageStructure name='CT' definition='MSH~CT' description='Creation Acte'/>
<MessageStructure name='CU' definition='MSH~CU' description='Utilisateur'/>
<MessageStructure name='DB' definition='MSH~DB' description='Document Bureautique'/>
<MessageStructure name='DL' definition='MSH~DL~{~DL1~DL2~DL3~}' description='Liste Medecins Patient'/>
<MessageStructure name='DM' definition='MSH~DM~DM2' description='FDB Medecin Exterieur'/>
<MessageStructure name='DMP' definition='MSH~DMP~XD2~XD3~XD4' description='Export Documents'/>
<MessageStructure name='DO' definition='MSH~DO~[~{~DO2~}~]~[~{~DOI~}~]' description='Donnees Complementaires'/>
<MessageStructure name='DOC' definition='MSH~DOC~XD2~XD3~DOC2~XD4' description='Document Bureautique'/>
<MessageStructure name='DP' definition='MSH~DP~DP2~DP3~DP4~DP5~DP6~DP7' description='Donnees Patient'/>
<MessageStructure name='DR' definition='MSH~DR~DR2~DR3' description='Donnees Medecin'/>
<MessageStructure name='DS' definition='MSH~DS' description='Sortie Patient'/>
<MessageStructure name='ECR' definition='MSH~{~ECR~}' description='Ecriture Comptable'/>
<MessageStructure name='ER' definition='MSH~ER~ER2~[~{~ER3~}~]' description='Erreurs Integration'/>
<MessageStructure name='HM' definition='MSH~HM~HM2' description='FDB Medecins Correspondants'/>
<MessageStructure name='IA' definition='MSH~IA' description='Indisponibilite Agenda'/>
<MessageStructure name='IN' definition='MSH~IN~IN2~IN3' description='Debiteur'/>
<MessageStructure name='MDG' definition='MSH~MD EXPORT~MD US~[~{~MD PAT_CIV~MD PAT_CURRENT~MD PAT_ADM~[~MD PAT_TEL~]~[~{~MD PAT_ANTEC~}~]~[~{~MD ADMROUTE~{~MD PRESCR_MD~}~}~]~[~[~MD OM_GEN~]~[~MD OM_ACC~]~[~{~MD OM_ATCTL~}~]~[~{~MD OM_ALLTL~}~]~[~{~MD OM_AVIS~[~{~MD OM_AVDTL~}~]~[~{~MD OM_AVRTL~}~]~}~]~[~{~MD OM_PEC~}~]~[~MD OM_GEMSA~]~[~MD OM_CCMU~]~[~{~MD OM_EXAMD~{~[~MD OM_EXTL~]~}~}~]~[~{~MD OM_EXAMC~{~[~MD OM_EXCTL~]~}~}~]~[~MD OM_EXCLE~]~[~{~MD OM_HDLM~}~]~[~MD OM_IAO~]~[~{~MD OM_IAOTL~}~]~[~{~MD OM_IAOSPTL~}~]~[~{~MD OM_INFOD~[~{~MD OM_INFTL~}~]~}~]~[~{~MD OM_INTER~}~]~[~{~MD OM_MDV~}~]~[~{~MD OM_MOTIF~}~]~[~{~MD OM_SYNTH~}~]~[~{~MD OM_PBSUSP~}~]~[~{~MD OM_TTHAB~}~]~[~{~MD OM_TTOUT~[~{~MD OM_TTOTL~}~]~}~]~[~{~MD OM_ATCD~}~]~[~MD OM_GROSS~]~[~{~MD OM_ALLER~}~]~MD OM_CORP~[~MD OM_PPH~[~{~MD OM_PPD~}~]~]~[~{~MD OM_CCAM~}~]~[~{~MD OM_DIAG~}~]~]~[~{~MD PAN~}~]~[~{~MD TC CIBLE~[~{~MD TC DON~}~]~[~{~MD TC ACT~}~]~[~{~MD TC RES~}~]~}~]~}~]' description='Mode Degrade'/>
<MessageStructure name='MP' definition='MSH~MP~MP2' description='Modes Placement Psy'/>
<MessageStructure name='ND' definition='MSH~ND' description='Sortie Nouveau Ne'/>
<MessageStructure name='NR' definition='MSH~NR~NR2~NR3~NR4' description='Enregistrement Nouveau Ne'/>
<MessageStructure name='OD' definition='MSH~OD' description='Cloture Episode Externe'/>
<MessageStructure name='OP' definition='MSH~OP~OP2~OP3' description='Pre Consultation'/>
<MessageStructure name='OR' definition='MSH~OR~OR2~OR3~OR4~OR5' description='Enregistrement Episode Externe'/>
<MessageStructure name='ORM' definition='MSH~H~P~{~OBR~[~C~]~[~A~]~}~[~L~]' description='Prescription'/>
<MessageStructure name='PA' definition='MSH~PA~PA2~PA3~PA4~PA5~PA6~PA7' description='Pre Admission'/>
<MessageStructure name='PB' definition='MSH~PB~PB2~[~PB3~]~[~{~PB4~}~]~[~{~PB5~}~]' description='Demographie Patient'/>
<MessageStructure name='PD' definition='MSH~PD' description='Preparation Sortie'/>
<MessageStructure name='PH' definition='MSH~PH~PH2~PH3~[~{~PH4~}~]~{~PH5~[~{~PH6~}~]~[~{~PH7~}~]~[~{~PH8~}~]~}' description='Prescription Pharmaceutique'/>
<MessageStructure name='PL' definition='MSH~PL' description='Cloture Pre Admission'/>
<MessageStructure name='PM' definition='MSH~PM' description='Fusion Patient'/>
<MessageStructure name='PP' definition='MSH~{~PP~}' description='Patient Present'/>
<MessageStructure name='PT' definition='MSH~PT' description='Preparation Mutation'/>
<MessageStructure name='PU' definition='MSH~PU' description='Preparation Admission'/>
<MessageStructure name='RI' definition='MSH~RI' description='Retour Permission'/>
<MessageStructure name='RSP' definition='{~MSH~}~MSA~QAK~QPD~[~{~PID~[~{~PV1~}~]~}~]~DSC' description='Reponse Requete Patient'/>
<MessageStructure name='SD' definition='MSH~SD' description='Permission Patient'/>
<MessageStructure name='SI' definition='MSH~SI~SI2~{~SI3~[~{~SI4~}~]~}' description='Recueil PMSI'/>
<MessageStructure name='SOR' definition='MSH~H~P~L' description='Discharge ASTM'/>
<MessageStructure name='SU' definition='MSH~SU' description='Sortie Urgence'/>
<MessageStructure name='TL' definition='MSH~TL' description='Gestion Ligne Telephonique'/>
<MessageStructure name='TR' definition='MSH~TR' description='Mutation Ou Seance'/>
<MessageStructure name='UC' definition='MSH~UC' description='Unite de soins'/>
<MessageStructure name='UF' definition='MSH~UF' description='Unite Fonctionnelle'/>
<MessageStructure name='UR' definition='MSH~UR~UR2~UR3~UR4~UR5' description='Enregistrement Episode Urgence'/>
<MessageStructure name='US' definition='MSH~US' description='Unite de Soins'/>

<SegmentStructure name='A' description='Commentaire'>
    <SegmentSubStructure piece='1' description='A_01 Commentaire' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='AC' description='Acte'>
    <SegmentSubStructure piece='1' description='AC_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='AC_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='AC_03 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='AC_04 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='AC_05 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='AC_06 Numero Absolu Episode' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='AC_07 Num Interne Acte' max_length='3' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='AC_08 Code UF Demandeuse' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='AC_09 Code UF Realisatrice' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='AC_10 Date Heure Realisation' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='AC_11 Code Medecin Realisation' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='AC_12 Acte De Seance' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='AC_13 Seance Facturable' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='AC_14 Fin De Cotation' max_length='1' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ACT' description='PMSI CONSORE - Acte'>
    <SegmentSubStructure piece='1' description='ACT_01 Code Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='ACT_02 Phase' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='ACT_03 Activité' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='ACT_04 Quantite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='ACT_05 Date Heure Acte' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='AD' description='Admission1'>
    <SegmentSubStructure piece='1' description='AD_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='AD_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='AD_03 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='AD_04 Nom Usuel' datatype='CCOM_Nom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='AD_05 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='AD_06 Qualite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='AD_07 Nom De Naissance' datatype='CCOM_Nom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='AD_08 Localite De Naissance' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='AD_09 Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='AD_10 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='AD_11 No Rue Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='AD_12 Code Postal Adresse' max_length='8' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='AD2' description='Admission2'>
    <SegmentSubStructure piece='1' description='AD2_01 Localite Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='AD2_02 Telephone Domicile' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='AD2_03 Nationalite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='AD2_04 Pays De Naissance' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='AD2_05 Departement De Naissance' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='AD2_06 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='AD2_07 Pays Adresse' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='AD2_08 Telephone Professionnel' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='AD2_09 Medecin Envoyeur' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='AD2_10 Medecin Referent' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='AD2_11 Autres Prenoms' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='AD2_12 Telephone Portable' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='AD2_13 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='AD2_14 Informations Identite' datatype='CCOM_InfosIdentite' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='AD2_15 Numero SS Dernier Episode' max_length='15' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='AD2_16 Employeur' datatype='CCOM_Employeur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='AD2_17 Confidentialite Medicale' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='AD3' description='Admission3'>
    <SegmentSubStructure piece='1' description='AD3_01 Hopital' datatype='CCOM_Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='AD3_02 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='AD3_03 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='AD3_04 Numero Episode Precedent' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='AD3_05 Code US' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='AD3_06 Code UF' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='AD3_07 Lit' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='AD3_08 Chambre' max_length='5' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='AD3_09 Situation Familiale' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='AD3_10 Nombre Enfants' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='AD3_11 Categorie Socioprofessionnelle' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='AD3_12 Mode Transport' datatype='CCOM_Code' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='AD3_13 Mode Entree' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='AD3_14 Etablissement Origine' datatype='CCOM_Etab' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='AD3_15 Type Accident' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='AD3_16 Supplement Chambre Seule' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='AD3_17 Confidentialite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='AD3_18 Telephone Chambre' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='AD3_19 Medecin Responsable' datatype='CCOM_Medecin' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='AD3_20 Date Heure Admission' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='AD3_21 Commentaire Admission Medicale' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='AD3_22 Indicateur Episode Recurrent' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='AD3_23 Profession' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='AD3_24 Transcode US' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='AD3_25 Telephone Adresse Temporaire' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='AD3_26 Acte Prive' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='AD3_27 Transcode Medecin' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='AD3_28 Type Admission' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='29' description='AD3_29 Indicateur UF Hebergee' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='30' description='AD3_30 Date Heure Episode Urgence' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='31' description='AD3_31 Utilisateur' datatype='CCOM_Utilisateur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='32' description='AD3_32 Type Placement Psy' max_length='10' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='33' description='AD3_33 Indicateur Visites Autorisees' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='34' description='AD3_34 Date Heure Decision Medicale' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='35' description='AD3_35 Date Hospitalisation Precedente' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='36' description='AD3_36 Informations Accident' datatype='CCOM_Accident' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='37' description='AD3_37 Nb Jour Hospitalisation Precedente' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='38' description='AD3_38 Ambulance' datatype='CCOM_Ambulance' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='AD4' description='Admission4'>
    <SegmentSubStructure piece='1' description='AD4_01 Adresse Temporaire' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='AD4_02 Complement' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='AD4_03 Pays' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='AD4_04 Code Postal' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='AD4_05 Localite' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='AD4_06 Nom Du Pere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='AD4_07 Prenom Du Pere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='AD4_08 Pere Decede' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='AD4_09 Nom De La Mere' max_length='35' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='AD5' description='Admission5'>
    <SegmentSubStructure piece='1' description='AD5_01 Prenom De La Mere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='AD5_02 Mere Decedee' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='AD5_03 Motif Entree' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='AD5_04 Commentaire Admission' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='AD5_05 Medecin Traitant' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='AD5_06 Code Medecin Correspondant 1' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='AD5_07 Code Medecin Correspondant 2' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='AD5_08 Code Medecin Correspondant 3' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='AD5_09 Code Medecin Correspondant 4' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='AD5_10 Code Medecin Correspondant 5' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='AD5_11 Code Medecin Correspondant 6' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='AD5_12 Code Medecin Correspondant 7' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='AD5_13 Code Medecin Correspondant 8' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='AD5_14 Code Medecin Correspondant 9' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='AD5_15 Code Medecin Correspondant 10' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='AD5_16 Code Medecin Correspondant 11' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='AD5_17 Code Medecin Correspondant 12' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='AD5_18 Code Medecin Correspondant 13' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='AD5_19 Code Medecin Correspondant 14' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='AD5_20 Code Medecin Correspondant 15' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='AD5_21 Code Medecin Correspondant 16' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='AD5_22 Code Medecin Correspondant 17' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='AD5_23 Code Medecin Correspondant 18' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='AD5_24 Code Medecin Correspondant 19' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='AD5_25 Code Medecin Correspondant 20' max_length='7' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='AD6' description='Admission6'>
    <SegmentSubStructure piece='1' description='AD6_01 PaP1 Nom Usuel' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='AD6_02 PaP1 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='AD6_03 PaP1 Lien De Parente' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='AD6_04 PaP1 Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='AD6_05 PaP1 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='AD6_06 PaP1 Pays' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='AD6_07 PaP1 Code Postal' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='AD6_08 PaP1 Localite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='AD6_09 PaP1 Telephone Domicile' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='AD6_10 PaP1 Telephone Professionnel' max_length='20' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='AD7' description='Admission7'>
    <SegmentSubStructure piece='1' description='AD7_01 PaP2 Nom Usuel' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='AD7_02 PaP2 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='AD7_03 PaP2 Lien De Parente' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='AD7_04 PaP2 Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='AD7_05 PaP2 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='AD7_06 PaP2 Pays' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='AD7_07 PaP2 Code Postal' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='AD7_08 PaP2 Localite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='AD7_09 PaP2 Telephone Domicile' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='AD7_10 PaP2 Telephone Professionnel' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='AD7_11 Indicateur Dernier Mouvement' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='AD7_12 Date Previsionnelle Sortie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='AD7_13 From WebService' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='AD7_14 Code Decision Medicale' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='AD7_15 WebService App' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='AP1' description='RDV Agenda - Patient'>
    <SegmentSubStructure piece='1' description='AP1_01 IPP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='AP1_02 Nom Usuel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='AP1_03 Nom De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='AP1_04 Prenom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='AP1_05 Date De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='AP1_06 Sexe' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='AP1_07 Adresse' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='AP1_08 Complement Adresse' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='AP1_09 Code Postal' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='AP1_10 Localite' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='AP1_11 Pays' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='AP1_12 Telephone 1' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='AP1_13 Telephone 2' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='AP1_14 Telephone Mobile' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='AP2' description='RDV Agenda - RDV'>
    <SegmentSubStructure piece='1' description='AP2_01 Mode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='AP2_02 Code Agenda' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='AP2_03 Code Etablissement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='AP2_04 Date RDV' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='AP2_05 Heure RDV' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='AP2_06 Heure Fin RDV' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='AP2_07 Code Prestation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='AP2_08 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='AP2_09 Code UC' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='AP2_10 Code UF' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='AP2_11 Code ressource' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='AP2_12 Module producteur' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='AP2_13 Identifiant Unique RDV' max_length='99' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='AS' description='Annulation Episode'>
    <SegmentSubStructure piece='1' description='AS_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='AS_02 Code Hopital' datatype='CCOM_Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='AS_03 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='AS_04 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='AS_05 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='AS_06 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='AS_07 Motif Annulation' max_length='30' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='AS_08 IPP Interne Mere' max_length='9' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='AS_09 Numero Episode Interne Mere' max_length='9' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='AS_10 IPP Mere' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='AS_11 Numero Episode Mere' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='AS_12 Date Heure Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='AS_13 Code US Ou Consultation' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='AS_14 Code UF' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='AS_15 Nom Usuel' datatype='CCOM_Nom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='AS_16 Prenom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='AS_17 Nom De Naissance' datatype='CCOM_Nom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='AS_18 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='AS_19 Date De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='AS_20 Identifiants RDV PreEpisode' datatype='CCOM_IdRDVPreEpisode' symbol='+' max_length='100' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='21' description='AS_21 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='AS_22 Utilisateur' datatype='CCOM_Utilisateur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='AS_23 From WebService' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='AS_24 WebService App' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='BS' description='Permutation Lit'>
    <SegmentSubStructure piece='1' description='BS_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='BS_02 Code Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='BS_03 IPP Interne Patient 1' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='BS_04 Num Episode Interne Patient 1' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='BS_05 IPP Patient 1' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='BS_06 Num Episode Patient 1' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='BS_07 IPP Interne Patient 2' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='BS_08 Num Episode Interne Patient 2' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='BS_09 IPP Patient 2' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='BS_10 Num Episode Patient 2' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='BS_11 Date  Heure Permutation' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='BS_12 Code US' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='BS_13 Code UF' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='BS_14 Indicateur UF Hebergee' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='BS_15 Transcode US' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='BS_16 Chambre Patient 1' max_length='5' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='BS_17 Lit Patient 1' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='BS_18 Chambre Patient 2' max_length='5' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='BS_19 Lit Patient 2' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='BS_20 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='BS_21 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='BS_22 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='C' description='Champs Complementaires'>
    <SegmentSubStructure piece='1' description='C_01 Numero De Sequence' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='C_02 Type' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='C_03 Champs Complementaires' datatype='CCOM_ORM_CC' max_length='999' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CA' description='CR Administration Pharma 1'>
    <SegmentSubStructure piece='1' description='CA_01 IPP' max_length='255' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CA_02 Nom Usuel' max_length='32' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CA_03 Nom De Naissance' max_length='32' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CA_04 Prenom' max_length='32' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CA_05 Date De Naissance' max_length='14' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CA_06 Date Lunaire' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CA_07 Sexe' max_length='16' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CA2' description='CR Administration Pharma 2'>
    <SegmentSubStructure piece='1' description='CA2_01 Numero Episode' max_length='255' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CA3' description='CR Administration Pharma 3'>
    <SegmentSubStructure piece='1' description='CA3_01 Idp Administrateur' datatype='CCOM_IdpAdmin' max_length='1459' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CA3_02 Type Compte Rendu' datatype='CCOM_TypeCRAdmin' max_length='9999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CA4' description='CR Administration Pharma 4'>
    <SegmentSubStructure piece='1' description='CA4_01 Date Heure Debut Prevue' max_length='16' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CA4_02 Date Heure Fin Prevue' max_length='14' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CA4_03 Date Heure Debut Effective' max_length='14' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CA4_04 Date Heure Fin Effective' max_length='32' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CA4_05 Id Element Prescrit' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CA4_06 Commentaire' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CA5' description='CR Administration Pharma 5'>
    <SegmentSubStructure piece='1' description='CA5_01 Type Composant' max_length='16' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CA5_02 Code Composant' max_length='16' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CA5_03 Libelle Composant' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CA5_04 Lot' max_length='255' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CA5_05 Quantite Prevue' datatype='CCOM_Valeur' max_length='32' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CA5_06 Quantite Administre' datatype='CCOM_Valeur' max_length='32' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CA5_07 Statut' max_length='16' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='CA5_08 Provenance' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='CA5_09 Commentaire' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CC' description='Actes Donnees Generales'>
    <SegmentSubStructure piece='1' description='CC_01 Mode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CC_02 IPP Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CC_03 Numero Episode Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CC_04 IPP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CC_05 Numero Episode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CC_06 Numero Absolu Episode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CC_07 Numero Interne Seance Actes' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='CC_08 Code UF Demandeuse' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='CC_09 Code UF Realisation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='CC_10 Date Heure Realisation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='CC_11 Realisateur Principal' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='CC_12 Type Code Propre' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='CC_13 Code Propre' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='CC_14 Table Code Propre' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='CC_15 Nom Usuel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='CC_16 Prenom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='CC_17 Nom De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='CC_18 Date De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='CC_19 Sexe' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='CC_20 Indicateur Identite Provisoire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='CC_21 Date Heure Debut Episode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='CC_22 Module Producteur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='CC_23 Origine Source' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='CC_24 Code Hopital' datatype='CCOM_Hopital' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='CC_25 Type Episode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='CC_26 Identifiant Unique Seance' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CC2' description='Acte CCAM'>
    <SegmentSubStructure piece='1' description='CC2_01 Num Interne Codification' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CC2_02 Code Acte CCAM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CC2_03 Nombre De Realisations De L Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CC2_04 Table Codage' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CC2_05 Code Phase De Traitement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CC2_06 Code Activite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CC2_07 Code UF Realisation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='CC2_08 Realisateur' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='CC2_09 Code Extension Documentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='CC2_10 Code Association' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='CC2_11 Code Remboursement Exceptionnel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='CC2_12 Acte Prive' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='CC2_13 Modificateur 1' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='CC2_14 Modificateur 2' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='CC2_15 Modificateur 3' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='CC2_16 Modificateur 4' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='CC2_17 Acte Gratuit' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='CC2_18 Identifiant Unique Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='CC2_19 Numero Dent' max_length='999' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='20' description='CC2_20 Code Extension PMSI' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CC3' description='Acte CDAM'>
    <SegmentSubStructure piece='1' description='CC3_01 Num Interne Codification' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CC3_02 Code Acte CDAM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CC3_03 Nombre De Realisations De L Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CC3_04 Table De Codage' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CC4' description='Acte NGAP'>
    <SegmentSubStructure piece='1' description='CC4_01 Num Interne Codification' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CC4_02 Lettrecle NGAP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CC4_03 Coefficient' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CC4_04 Nombre Actes Activite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CC4_05 Acte Prive' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CC4_06 Acte Gratuit' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CC4_07 Pourcentage De Facturation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='CC4_08 Tarif Global Affecte A L Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='CC4_09 Taux De Prise En Charge Du Debiteur 1' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='CC4_10 Supplement Nuit' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='CC4_11 Supplement Jour Ferie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='CC4_12 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='CC4_13 Quantite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='CC4_14 Identifiant Unique Acte' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CD' description='Acte Consultation'>
    <SegmentSubStructure piece='1' description='CD_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CD_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CD_03 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CD_04 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CD_05 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CD_06 Numero Absolu Episode' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CD_07 Numero Interne Acte' max_length='3' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='CD_08 Numero Interne Codification' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='CD_09 Code CDAM' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='CD_10 Nombre Multiplicateur Acte' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='CD_11 Table CDAM' max_length='8' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CM' description='Cession Medicament'>
    <SegmentSubStructure piece='1' description='CM_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CM_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CM_03 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CM_04 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CM_05 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CM_06 Numero Absolu Episode' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CM_07 Code UF Demandeuse' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='CM_08 Date Heure Realisation' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='CM_09 Code UF Realisation' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='CM_10 Code Medecin Responsable' max_length='7' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='CM_11 Transcode Medecin Responsable' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='CM_12 Type Medecin' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='CM_13 Numero Prescription' max_length='5' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CM2' description='Cession Medicament'>
    <SegmentSubStructure piece='1' description='CM2_01 Num Ordonnancier' max_length='7' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CM2_02 Code Du Medicament' max_length='10' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CM2_03 Transcode Du Code Medicament' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CM2_04 Quantite' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CM2_05 Code Unite Distribution' max_length='8' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CM2_06 Code UCD' max_length='7' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CM2_07 Numero Ligne Cotation' max_length='3' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CSI' description='PMSI CONSORE - Entete'>
    <SegmentSubStructure piece='1' description='CSI_01 Nom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CSI_02 Prenom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CSI_03 Adresse' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CSI_04 Complement adresse' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CSI_05 Code postal' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CSI_06 Commune' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CSI_07 Code INSEE' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='CSI_08 IPP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='CSI_09 Date Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='CSI_10 Sexe' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CT' description='Creation Acte'>
    <SegmentSubStructure piece='1' description='CT_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CT_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CT_03 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CT_04 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CT_05 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CT_06 Numero Absolu Episode' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CT_07 Numero Interne Acte' max_length='3' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='CT_08 Numero Interne Cotation' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='CT_09 Lettre Clef' max_length='5' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='CT_10 Coefficient' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='CT_11 Pourcentage Facturabilite' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='CT_12 Tarif Global Affecte A L Acte' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='CT_13 Taux Prise En Charge Debiteur 1' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='CT_14 Nombres Actes Activite' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='CT_15 Acte Prive' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='CT_16 Supplement Nuit' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='CT_17 Supplement Jour Ferie' max_length='1' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CU' description='Utilisateur'>
    <SegmentSubStructure piece='1' description='CU_01 Champ1' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CU_02 Champ2' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CU_03 Champ3' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CU_04 Champ4' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CU_05 Champ5' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CU_06 Champ6' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CU_07 Champ7' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='CU_08 Champ8' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='CU_09 Champ9' max_length='99' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DB' description='Document Bureautique'>
    <SegmentSubStructure piece='1' description='DB_01 Fichier Source' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DB_02 URL Cible' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DB_03 IPP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DB_04 Numero Episode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DB_05 App Source Server' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DIG' description='PMSI CONSORE - Diagnostic'>
    <SegmentSubStructure piece='1' description='DIG_01 Type Diagnostic' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DIG_02 Code Diagnostic' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DL' description='Medecins Patient'>
    <SegmentSubStructure piece='1' description='DL_01 Mode' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DL_02 IPP Interne' max_length='9' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DL_03 IPP' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DL_04 Numero Episode Interne' max_length='9' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DL_05 Numero Episode' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DL_06 Indicateur Dernier Episode' max_length='1' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DL1' description='Medecins Patient'>
    <SegmentSubStructure piece='1' description='DL1_01 Type Medecin' max_length='5' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DL1_02 Code Clinicom' max_length='7' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DL2' description='Medecins Patient'>
    <SegmentSubStructure piece='1' description='DL2_01 Nom Usuel' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DL2_02 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DL2_03 Qualite' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DL2_04 No Rue Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DL2_05 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DL2_06 Localite Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DL2_07 Code Postal Adresse' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DL2_08 Complement Geographique Adresse' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DL2_09 Complement Distribution Adresse' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DL3' description='Medecins Patient'>
    <SegmentSubStructure piece='1' description='DL3_01 Titre' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DL3_02 Pays Adresse' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DL3_03 Telephone1' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DL3_04 Telephone2' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DL3_05 No Fax' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DL3_06 Specialite' max_length='30' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DL3_07 No Inscription A L Ordre' max_length='9' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DL3_08 Code Externe' max_length='7' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DM' description='FDB Medecin Exterieur'>
    <SegmentSubStructure piece='1' description='DM_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DM_02 Code Clinicom' max_length='7' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DM_03 Nom Usuel' max_length='35' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DM_04 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DM_05 Qualite' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DM_06 No Rue Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DM_07 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DM_08 Localite Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DM_09 Code Postal Adresse' max_length='8' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DM2' description='FDB Medecin Exterieur'>
    <SegmentSubStructure piece='1' description='DM2_01 Titre' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DM2_02 Pays Adresse' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DM2_03 Telephone1' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DM2_04 Telephone2' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DM2_05 No Fax' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DM2_06 Specialite' max_length='30' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DM2_07 No Inscription A L Ordre' max_length='9' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DM2_08 Transcode Medecin' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DM2_09 Adresse Email' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='DM2_10 Code ADELI' max_length='9' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='DM2_11 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='DM2_12 No RPPS' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='DM2_13 Complement Geographique' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='DM2_14 Complement Distribution' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DMP' description='Export DMP'>
    <SegmentSubStructure piece='1' description='DMP_01 NIS Identifiant Patient' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DMP_02 Nom Usuel' datatype='CCOM_Nom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DMP_03 Prenom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DMP_04 Autres Prenoms' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DMP_05 Nom De Naissance' datatype='CCOM_Nom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DMP_06 Sexe' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DMP_07 Date De Naissance' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DMP_08 Identifiant Systeme Source' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DMP_09 Anciens IPP' symbol='+' max_length='999' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='10' description='DMP_10 INSC' datatype='CCOM_ID' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='DMP_11 NIR OD' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='DMP_12 NIR Individu' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='DMP_13 Rang Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='DMP_14 NIR DMP' datatype='CCOM_INSI' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DO' description='Donnees Complementaires'>
    <SegmentSubStructure piece='1' description='DO_01 Mode' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DO_02 IPP Interne' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DO_03 Episode Interne' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DO_04 IPP' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DO_05 Episode' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DO_06 Date Heure Donnees' max_length='99' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DO2' description='Donnees Complementaires 2'>
    <SegmentSubStructure piece='1' description='DO2_01 Item' datatype='CCOM_Code' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DO2_02 Valeur' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DO2_03 Autre Episode' max_length='99' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DOC' description='Document Bureautique - Patient'>
    <SegmentSubStructure piece='1' description='DOC_01 NIS Identifiant Patient' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DOC_02 Nom Usuel' datatype='CCOM_Nom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DOC_03 Prenom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DOC_04 Autres Prenoms' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DOC_05 Nom De Naissance' datatype='CCOM_Nom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DOC_06 Sexe' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DOC_07 Date De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DOC_08 Identifiant Systeme Source' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DOC_09 Anciens IPP' symbol='+' max_length='999' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='10' description='DOC_10 INSC' datatype='CCOM_ID' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DOC2' description='Document Bureautique - Demande Associée'>
    <SegmentSubStructure piece='1' description='DOC2_01 Numéro Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DOC2_02 Type Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DOC2_03 Date/Heure Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DOC2_04 UF Demandeuse' datatype='CCOM_DMP_UF' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DOC2_05 UF Réalisation' datatype='CCOM_DMP_UF' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DOC2_06 Médecin demandeur' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DOC2_07 Date/Heure Résultat' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DOC2_08 Examen' datatype='CCOM_BUR_Examen' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DOI' description='Donnees Complementaires 2'>
    <SegmentSubStructure piece='1' description='DOI_01 Item' datatype='CCOM_Code' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DOI_02 Valeur' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DOI_03 Autre Episode' max_length='99' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DP' description='Donnees Etendues Patient 1'>
    <SegmentSubStructure piece='1' description='DP_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DP_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DP_03 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DP_04 Nom Usuel' max_length='35' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DP_05 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DP_06 Qualite' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DP_07 Nom De Naissance' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DP_08 Localite De Naissance' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DP_09 Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='DP_10 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='DP_11 No Rue Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='DP_12 Code Postal Adresse' max_length='8' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DP2' description='Donnees Etendues Patient 2'>
    <SegmentSubStructure piece='1' description='DP2_01 Localite Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DP2_02 Telephone Domicile' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DP2_03 Nationalite' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DP2_04 Pays De Naissance' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DP2_05 Departement De Naissance' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DP2_06 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DP2_07 Pays Adresse' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DP2_08 Telephone Professionnel' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DP2_09 Date De Deces' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='DP2_10 Dernier Numero Episode' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='DP2_11 Autres Prenoms' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='DP2_12 Telephone Portable' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='DP2_13 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DP3' description='Donnees Etendues Patient 3'>
    <SegmentSubStructure piece='1' description='DP3_01 Adresse Temporaire' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DP3_02 Complement Adresse Temporaire' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DP3_03 Pays Adresse Temporaire' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DP3_04 Code Postal Adr Temporaire' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DP3_05 Localite Adr Temporaire' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DP3_06 Nom Du Pere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DP3_07 Prenom Du Pere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DP3_08 Pere Decede' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DP3_09 Nom De La Mere' max_length='35' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DP4' description='Donnees Etendues Patient 4'>
    <SegmentSubStructure piece='1' description='DP4_01 Prenom De La Mere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DP4_02 Mere Decedee' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DP4_03 Code Medecin Traitant' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DP4_04 Situation Familiale' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DP4_05 Nombre Enfants' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DP4_06 Categorie Socioprofessionnelle' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DP4_07 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DP4_08 Profession' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DP4_09 Telephone Adresse Temporaire' max_length='20' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DP5' description='Donnees Etendues Patient 5'>
    <SegmentSubStructure piece='1' description='DP5_01 PaP1 Nom Usuel' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DP5_02 PaP1 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DP5_03 PaP1 Lien De Parente' datatype='CCOM_Code' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DP5_04 PaP1 No Rue' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DP5_05 PaP1 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DP5_06 PaP1 Pays' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DP5_07 PaP1 Code Postal' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DP5_08 PaP1 Localite' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DP5_09 PaP1 Telephone Domicile' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='DP5_10 PaP1 Telephone Professionnel' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='DP5_11 PaP1 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='DP5_12 PaP1 Telephone Mobile' max_length='20' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DP6' description='Donnees Etendues Patient 6'>
    <SegmentSubStructure piece='1' description='DP6_01 PaP2 Nom Usuel' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DP6_02 PaP2 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DP6_03 PaP2 Lien De Parente' datatype='CCOM_Code' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DP6_04 PaP2 No Rue' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DP6_05 PaP2 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DP6_06 PaP2 Pays' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DP6_07 PaP2 Code Postal' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DP6_08 PaP2 Localite' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DP6_09 PaP2 Telephone Domicile' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='DP6_10 PaP2 Telephone Professionnel' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='DP6_11 PaP2 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='DP6_12 PaP2 Telephone Mobile' max_length='20' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DP7' description='Donnees Etendues Patient 7'>
    <SegmentSubStructure piece='1' description='DP7_01 PaP3 Nom Usuel' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DP7_02 PaP3 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DP7_03 PaP3 Lien De Parente' datatype='CCOM_Code' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DP7_04 PaP3 No Rue' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DP7_05 PaP3 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DP7_06 PaP3 Pays' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DP7_07 PaP3 Code Postal' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DP7_08 PaP3 Localite' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DP7_09 PaP3 Telephone Domicile' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='DP7_10 PaP3 Telephone Professionnel' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='DP7_11 PaP3 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='DP7_12 PaP3 Telephone Mobile' max_length='20' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DR' description='Donnees Medecin Patient 1'>
    <SegmentSubStructure piece='1' description='DR_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DR_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DR_03 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DR_04 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DR_05 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DR_06 Type Medecin' max_length='5' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DR_07 Code Clinicom' max_length='7' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DR2' description='Donnees Medecin Patient 2'>
    <SegmentSubStructure piece='1' description='DR2_01 Nom Usuel' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DR2_02 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DR2_03 Qualite' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DR2_04 No Rue Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DR2_05 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DR2_06 Localite Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DR2_07 Code Postal Adresse' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DR2_08 Complement Geographique Adresse' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DR2_09 Complement Distribution Adresse' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DR3' description='Donnees Medecin Patient 3'>
    <SegmentSubStructure piece='1' description='DR3_01 Titre' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DR3_02 Pays Adresse' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DR3_03 Telephone1' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DR3_04 Telephone2' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DR3_05 No Fax' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DR3_06 Specialite' max_length='30' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DR3_07 No Inscription A L Ordre' max_length='9' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DR3_08 Code Externe' max_length='7' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DS' description='Sortie Hospitalisé'>
    <SegmentSubStructure piece='1' description='DS_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DS_02 Hopital' datatype='CCOM_Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DS_03 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DS_04 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DS_05 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DS_06 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DS_07 Date Heure Sortie' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DS_08 GroupeSortie' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DS_09 EtablissementDestination' datatype='CCOM_Etab' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='DS_10 Mode Sortie' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='DS_11 Code FINESS' max_length='9' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='DS_12 Type Admission' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='DS_13 Code UF' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='DS_14 Code US' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='DS_15 Transcode US' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='DS_16 Indicateur UF Hebergee' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='DS_17 Identifiant Terminal' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='DS_18 Type Depart Long Sejour' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='DS_19 Nom Usuel' datatype='CCOM_Nom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='DS_20 Prenom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='DS_21 Chambre' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='DS_22 Nom De Naissance' datatype='CCOM_Nom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='DS_23 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='DS_24 Date De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='DS_25 Medecin Responsable' datatype='CCOM_Medecin' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='DS_26 Indicateur Episode Recurrent' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='DS_27 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='DS_28 Utilisateur' datatype='CCOM_Utilisateur' max_length='20' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='29' description='DS_29 From WebService' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='30' description='DS_30 WebService App' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='31' description='DS_31 Mode Transport' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='32' description='DS_32 Ambulance' datatype='CCOM_Ambulance' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DSC' description='Continuation Pointer Segment'>
    <SegmentSubStructure piece='1' description='DSC_01 Continuation Pointer' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DSC_02 Continuation Style' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ECR' description='Ecriture Comptable'>
    <SegmentSubStructure piece='1' description='ECR_01 Date' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='ECR_02 Compte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='ECR_03 Journal' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='ECR_04 Montant' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='ECR_05 Sens' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='ECR_06 Change' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='ECR_07 Numero Unique Piece' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='ECR_08 Type Piece' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='ECR_09 Libelle Ecriture' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='ECR_10 Type Ecriture' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='ECR_11 Tiers' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='ECR_12 Libelle Mouvement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='ECR_13 Section Analyse' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ER' description='Entête'>
    <SegmentSubStructure piece='1' description='ER_01 Date/Heure Message' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='ER_02 Entete Message' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='ER_03 Routine Intégration' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='ER_04 Objet Connecté' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='ER_05 Application Server' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='ER_06 Sendind Application ID' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ER2' description='Entête'>
    <SegmentSubStructure piece='1' description='ER2_01 Date/Heure Erreur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='ER2_02 Texte Erreur' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ER3' description='Entête'>
    <SegmentSubStructure piece='1' description='ER3_01 Rang Segment' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='ER3_02 Segment' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='H' description='HPRIM Header'>
    <SegmentSubStructure piece='1' description='H_01 Delimiteurs' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='H_02 Identifiant Message' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='H_03 Mot De Passe' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='H_04 Emetteur' datatype='CCOM_Code' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='H_05 Adresse Emetteur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='H_06 Type De Message' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='H_07 Telephone Emetteur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='H_08 Caracteristiques Transmission' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='H_09 Destinataire' datatype='CCOM_Code' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='H_10 Code evenement' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='H_11 Mode Traitement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='H_12 Version' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='H_13 Date Heure Message' max_length='999' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='HM' description='FDB Médecins Etablissement 1'>
    <SegmentSubStructure piece='1' description='HM_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='HM_02 Code Clinicom' max_length='7' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='HM_03 Nom Usuel' max_length='35' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='HM_04 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='HM_05 Qualite' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='HM_06 No Rue Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='HM_07 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='HM_08 Localite Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='HM_09 Code Postal Adresse' max_length='8' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='HM2' description='FDB Médecins Etablissement 1'>
    <SegmentSubStructure piece='1' description='HM2_01 Titre' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='HM2_02 Pays Adresse' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='HM2_03 Telephone1' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='HM2_04 Telephone2' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='HM2_05 No Fax' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='HM2_06 Specialite' max_length='30' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='HM2_07 No Inscription A L Ordre' max_length='9' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='HM2_08 Transcode Medecin' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='HM2_09 Adresse Email' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='HM2_10 Code ADELI' max_length='9' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='HM2_11 Matricule' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='HM2_12 No RPPS' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='HM2_13 Service' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='HM2_14 Profession' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='HM2_15 Complement Geographique' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='HM2_16 Complement Distribution' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='IA' description='Indisponibilite Agenda'>
    <SegmentSubStructure piece='1' description='IA_01 Code Action' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='IA_02 Ressource' datatype='CCOM_Ressource' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='IA_03 Motif Indisponibilite' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='IA_04 Date Heure Debut' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='IA_05 Date Heure Fin' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='IN' description='Débiteurs 1'>
    <SegmentSubStructure piece='1' description='IN_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='IN_02 Code Hopital' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='IN_03 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='IN_04 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='IN_05 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='IN_06 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='IN_07 Role Du Debiteur' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='IN_08 Code Caisse' max_length='9' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='IN_09 L Assure Estil Le Patient ?' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='IN_10 Montant Couverture De Base' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='IN_11 Couverture De Base %' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='IN_12 Montant Ticket Moderateur' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='IN_13 Ticket Moderateur  %' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='IN_14 Montant Forfait Journalier' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='IN_15 Forfait Journalier %' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='IN_16 Montant Supplement Chambreseule' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='IN_17 Supplement Chambre Seul  %' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='IN_18 Mode De Traitement Type Dhospitalisation' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='IN_19 Piece Justificative Des Droits' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='IN_20 Code Risque' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='IN_21 Exoneration Forfait Journalier' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='IN_22 Fin De Droits 100%' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='IN_23 Date Debut Droits' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='IN_24 Date Fin Droits' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='IN_25 Precedente Valeur Debut Droits' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='IN_26 Numero Assure' max_length='15' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='IN_27 Rang Beneficiaire' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='IN_28 Code Gestion' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='29' description='IN_29 Profession Assure' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='30' description='IN_30 Prise En Charge A 100% Pour Les Externes' max_length='1' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='IN2' description='Débiteurs 2'>
    <SegmentSubStructure piece='1' description='IN2_01 Nom Assure' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='IN2_02 Prenom Assure' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='IN2_03 No Rue Adresse Assure' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='IN2_04 Complement Adresse Assure' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='IN2_05 Pays Assure' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='IN2_06 Code Postal Assure' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='IN2_07 Localite Assure' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='IN2_08 Telephone Assure' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='IN2_09 Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='IN2_10 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='IN2_11 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='IN2_12 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='IN2_13 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='IN3' description='Débiteurs 3'>
    <SegmentSubStructure piece='1' description='IN3_01 Numero Accident Du Travail' max_length='9' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='IN3_02 Date Accident Du Travail' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='IN3_03 Nom Employeur' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='IN3_04 Adresse Employeur' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='IN3_05 Complement Employeur' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='IN3_06 Pays Employeur' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='IN3_07 Code Postal Employeur' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='IN3_08 Localite Employeur' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='IN3_09 Telephone' max_length='20' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='L' description='HPRIM Last'>
    <SegmentSubStructure piece='1' description='L_01 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='L_02 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='L_03 Nombre Segments P' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='L_04 Nombre Segments' max_length='999' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD ADMROUTE' description='Route'>
    <SegmentSubStructure piece='1' description='MD ADMROUTE_01 Id Route' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD ADMROUTE_02 Desc Route' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD ADMROUTE_03 Code Famille' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD ADMROUTE_04 Desc Famille' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD EXPORT' description='Entete Export'>
    <SegmentSubStructure piece='1' description='MD EXPORT_01 Version' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD EXPORT_02 Date Heure Export' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_ACC' description='Accompagnant'>
    <SegmentSubStructure piece='1' description='MD OM_ACC_01 Flag Accompagnant' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD OM_ACC_02 Commentaire Accompagnant' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD OM_ACC_03 Flag Famille Prevenue' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD OM_ACC_04 Code Du Lien De Parente Accompagnant' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MD OM_ACC_05 Flag Presence En Salle Attente' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MD OM_ACC_06 Tel Accompagnant' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_ALLER' description='Allergie'>
    <SegmentSubStructure piece='1' description='MD OM_ALLER_01 Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD OM_ALLER_02 Description' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD OM_ALLER_03 Annee' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD OM_ALLER_04 Majeur' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_ALLTL' description='Allergie'>
    <SegmentSubStructure piece='1' description='MD OM_ALLTL_01 Ligne De Texte Libre' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_ATCD' description='Antécédent'>
    <SegmentSubStructure piece='1' description='MD OM_ATCD_01 Type' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD OM_ATCD_02 Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD OM_ATCD_03 Description' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD OM_ATCD_04 Annee' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MD OM_ATCD_05 Majeur' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_ATCTL' description='Antécédents'>
    <SegmentSubStructure piece='1' description='MD OM_ATCTL_01 Ligne De Texte Libre' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_AVDTL' description='Avis'>
    <SegmentSubStructure piece='1' description='MD OM_AVDTL_01 Ligne De Texte Libre' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_AVIS' description='Avis'>
    <SegmentSubStructure piece='1' description='MD OM_AVIS_01 Date Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD OM_AVIS_02 Code Type Avis' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD OM_AVIS_03 Libelle Avis' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD OM_AVIS_04 Famille Avis' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MD OM_AVIS_05 Login Utilisateur Qui A Fait La Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MD OM_AVIS_06 Login Utilisateur Qui A Valide La Reponse' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='MD OM_AVIS_07 Date De La Reponse A La Demande' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_AVRTL' description='Avis'>
    <SegmentSubStructure piece='1' description='MD OM_AVRTL_01 Ligne De Texte Libre' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_CCAM' description='CCAM'>
</SegmentStructure>
<SegmentStructure name='MD OM_CCMU' description='CCMU'>
    <SegmentSubStructure piece='1' description='MD OM_CCMU_01 Code CCMU' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD OM_CCMU_02 Libelle CCMU' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_CORP' description='Mesures Corporelles'>
    <SegmentSubStructure piece='1' description='MD OM_CORP_01 Poids' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD OM_CORP_02 Taille' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD OM_CORP_03 Perimetre Cranien' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_DIAG' description='Diagnostic'>
</SegmentStructure>
<SegmentStructure name='MD OM_EXAMC' description='Examen Clinique'>
    <SegmentSubStructure piece='1' description='MD OM_EXAMC_01 Date Derniere Modif Exam Clinique' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD OM_EXAMC_02 Login Derniere Modif Exam Clinique' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_EXAMD' description='Demande'>
    <SegmentSubStructure piece='1' description='MD OM_EXAMD_01 ID' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD OM_EXAMD_02 Code Du Type De La Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD OM_EXAMD_03 Libelle Du Type De La Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD OM_EXAMD_04 Famille Du Type De La Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MD OM_EXAMD_05 Une Ligne De Texte Libre De La Demande' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_EXCLE' description='Examen Clinique'>
</SegmentStructure>
<SegmentStructure name='MD OM_EXCTL' description='Examen Clinique'>
    <SegmentSubStructure piece='1' description='MD OM_EXCTL_01 Ligne De Texte Libre' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_EXTL' description='Examen'>
    <SegmentSubStructure piece='1' description='MD OM_EXTL_01 Ligne De Texte Libre' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_GEMSA' description='GEMSA'>
    <SegmentSubStructure piece='1' description='MD OM_GEMSA_01 Code GEMSA' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD OM_GEMSA_02 Libelle GEMSA' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_GEN' description='OMU'>
</SegmentStructure>
<SegmentStructure name='MD OM_GROSS' description='Grossesse'>
    <SegmentSubStructure piece='1' description='MD OM_GROSS_01 Flag Grossesse' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_HDLM' description='Histoire de la maladie'>
    <SegmentSubStructure piece='1' description='MD OM_HDLM_01 Ligne De Texte Libre' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_IAO' description='IAO - Secteur'>
    <SegmentSubStructure piece='1' description='MD OM_IAO_01 Code Secteur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD OM_IAO_02 Description Secteur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD OM_IAO_03 Code Priorite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD OM_IAO_04 Description Priorite' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_IAOSPTL' description='IAO - Situation Particulière'>
    <SegmentSubStructure piece='1' description='MD OM_IAOSPTL_01 Ligne De Texte Libre' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_IAOTL' description='IAO - Commentaire'>
    <SegmentSubStructure piece='1' description='MD OM_IAOTL_01 Commentaire' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_INFOD' description='Info'>
    <SegmentSubStructure piece='1' description='MD OM_INFOD_01 Type Info' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_INFTL' description='Info'>
    <SegmentSubStructure piece='1' description='MD OM_INFTL_01 Ligne De Texte Libre' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_INTER' description='Intervenant'>
    <SegmentSubStructure piece='1' description='MD OM_INTER_01 Code Intervenant' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD OM_INTER_02 Code Type Intervenant' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD OM_INTER_03 Libelle Type Intervenant' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD OM_INTER_04 Flag Type Intervenant Correspondant Medical' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MD OM_INTER_05 Code De La Specialite Du Type Intervenant' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MD OM_INTER_06 Code De La Specialite Paramedicale Du Type Intervenant' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='MD OM_INTER_07 Code Du Type Utilisateur Du Type Intervenant' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='MD OM_INTER_08 Nom Prenom Intervenant Saisi' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_MDV' description='Mode de vie'>
    <SegmentSubStructure piece='1' description='MD OM_MDV_01 Ligne De Texte Libre' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_MOTIF' description='Motif'>
    <SegmentSubStructure piece='1' description='MD OM_MOTIF_01 Code Du Motif' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD OM_MOTIF_02 Description Du Motif' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD OM_MOTIF_03 Flag Motif Principal' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD OM_MOTIF_04 Code Priorite Du Motif' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MD OM_MOTIF_05 Code US' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MD OM_MOTIF_06 Type US' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_PBSUSP' description='PBSUSP'>
    <SegmentSubStructure piece='1' description='MD OM_PBSUSP_01 Ligne De Texte Libre' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_PEC' description='Prise en charge'>
</SegmentStructure>
<SegmentStructure name='MD OM_PPD' description='Mesures Physiologiques'>
    <SegmentSubStructure piece='1' description='MD OM_PPD_01 Login Utilisateur Qui A Saisi' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD OM_PPD_02 Date Heure Saisie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD OM_PPD_03 Col1' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD OM_PPD_04 Col2' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MD OM_PPD_05 Col3' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MD OM_PPD_06 Col4' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='MD OM_PPD_07 Col5' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='MD OM_PPD_08 Col6' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='MD OM_PPD_09 Col7' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='MD OM_PPD_10 Col8' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='MD OM_PPD_11 Col9' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='MD OM_PPD_12 Col10' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_PPH' description='Entete Mesures Physiologiques'>
    <SegmentSubStructure piece='1' description='MD OM_PPH_01 Col1' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD OM_PPH_02 Col2' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD OM_PPH_03 Col3' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD OM_PPH_04 Col4' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MD OM_PPH_05 Col5' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MD OM_PPH_06 Col6' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='MD OM_PPH_07 Col7' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='MD OM_PPH_08 Col8' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='MD OM_PPH_09 Col9' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='MD OM_PPH_10 Col10' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_SYNTH' description='Synthèse'>
    <SegmentSubStructure piece='1' description='MD OM_SYNTH_01 Ligne De Texte Libre' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_TTHAB' description='Traitement Habituel'>
    <SegmentSubStructure piece='1' description='MD OM_TTHAB_01 Ligne De Texte Libre' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_TTOTL' description='Traitement Sortie'>
    <SegmentSubStructure piece='1' description='MD OM_TTOTL_01 Ligne De Texte Libre' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD OM_TTOUT' description='Traitement Sortie'>
    <SegmentSubStructure piece='1' description='MD OM_TTOUT_01 Code Type Traitement De Sortie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD OM_TTOUT_02 Libelle Type Traitement De Sortie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD OM_TTOUT_03 Famille Type Traitement De Sortie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD OM_TTOUT_04 Ligne Texte Libre Du Traitement De Sortie' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD PAN' description='Pancarte'>
    <SegmentSubStructure piece='1' description='MD PAN_01 Code Parametre Physiologique' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD PAN_02 Description Parametre Physiologique' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD PAN_03 Unite Du Releve' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD PAN_04 Date Et Heure Du Releve' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MD PAN_05 Valeur Du Releve' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MD PAN_06 Utilisateur Ayant Effectue Le Releve' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD PAT_ADM' description='Admission'>
    <SegmentSubStructure piece='1' description='MD PAT_ADM_02 Mode Entree Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD PAT_ADM_03 Mode Entree Description' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD PAT_ADM_04 Code Etablissement Origine' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD PAT_ADM_05 Libelle Etablissement Origine' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MD PAT_ADM_06 Date Hospitalisation Precedente Format Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MD PAT_ADM_07 Date Hospitalisation Precedente Format Externe' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='MD PAT_ADM_08 Nombre De Jours Effectuees Lors De La Precedente Hospitalisation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='MD PAT_ADM_09 Coefficient K Acquis Lors De La Precedente Hospitalisation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='MD PAT_ADM_10 Indicateur De Chambre Particuliere Format Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='MD PAT_ADM_11 Indicateur De Chambre Particuliere Format Externe' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='MD PAT_ADM_12 Date Et Heure Admission Format Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='MD PAT_ADM_13 Date Et Heure Admission Format Externe' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='MD PAT_ADM_14 Commentaires Episode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='MD PAT_ADM_15 Code US Admission' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='MD PAT_ADM_16 Code UF Admission' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='MD PAT_ADM_17 Numero Episode Format Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='MD PAT_ADM_18 Numero Episode Format Externe' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='MD PAT_ADM_19 Cellule De Gestion Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='MD PAT_ADM_20 Cellule De Gestion Libelle' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='MD PAT_ADM_21 Non Exploite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='MD PAT_ADM_22 Non Exploite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='MD PAT_ADM_23 Non Exploite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='MD PAT_ADM_24 Indicateur De Confidentialite Format Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='MD PAT_ADM_25 Indicateur De Confidentialite Format Externe' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='MD PAT_ADM_26 Date Admission Format Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='MD PAT_ADM_27 Date Admission Format Externe' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='MD PAT_ADM_28 Date Du Coefficient K Acquis Anterieurement Format Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='MD PAT_ADM_29 Date Du Coefficient K Acquis Anterieurement Format Externe' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='29' description='MD PAT_ADM_30 Chambre Admission Ou Zone De Stockage Dans Le Cas Des Urgences' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='30' description='MD PAT_ADM_31 Indicateur Admission' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='31' description='MD PAT_ADM_32 Libelle UF Admission' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='32' description='MD PAT_ADM_33 Lit Admission' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='33' description='MD PAT_ADM_34 Code Type Activite Lie A UF' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='34' description='MD PAT_ADM_35 Date Accident Format Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='35' description='MD PAT_ADM_36 Chambre Courante' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='36' description='MD PAT_ADM_37 Discipline Medico Tarifaire Admission DMT' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='37' description='MD PAT_ADM_38 Libelle US Admission' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='38' description='MD PAT_ADM_39 Indicateur Preadmission' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='39' description='MD PAT_ADM_40 Type Episode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='40' description='MD PAT_ADM_41 Date Et Heure Admission Aux Urgences Format Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='41' description='MD PAT_ADM_42 Type Interne Accident' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='42' description='MD PAT_ADM_43 Dossier Externe Recurrent' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='43' description='MD PAT_ADM_44 Mode De Placement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='44' description='MD PAT_ADM_45 Libelle Placement Psy' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='45' description='MD PAT_ADM_46 Code Finess Etablissement Origine' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='46' description='MD PAT_ADM_47 Tarif Chambre Particuliere' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='47' description='MD PAT_ADM_48 Type Admission' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD PAT_ANTEC' description='Antécédents'>
    <SegmentSubStructure piece='1' description='MD PAT_ANTEC_00 Type' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD PAT_ANTEC_01 Code Antecedent' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD PAT_ANTEC_02 Description Antecedent' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD PAT_CIV' description='Démographie'>
    <SegmentSubStructure piece='1' description='MD PAT_CIV_01 Patient Implementation Identifier' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD PAT_CIV_02 Patient Current Implementation Id External' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD PAT_CIV_03 Patient Surname' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD PAT_CIV_04 Patient Forenames' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MD PAT_CIV_05 Patient Middlename' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MD PAT_CIV_06 Patient Forename Prefix In Germany' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='MD PAT_CIV_07 Patient Surname Suffix' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='MD PAT_CIV_08 Patient Date Of Birth Internal' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='MD PAT_CIV_09 Patient Date Of Birth' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='MD PAT_CIV_10 Patient Sex' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='MD PAT_CIV_11 Internal Code For Patient Sex' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='MD PAT_CIV_12 Patient Identification Comment' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='MD PAT_CIV_13 Patient Identifier Tie Breaker' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='MD PAT_CIV_14 Patient Death Indicator Internal' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='MD PAT_CIV_15 Patient Death Indicator Report Format' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='MD PAT_CIV_16 Patient Date Of Death' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='MD PAT_CIV_17 Patient Date Of Death Internal' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='MD PAT_CIV_18 Patient Surname Prefix In Germany' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='MD PAT_CIV_19 Patient Name In Report Format Long' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='MD PAT_CIV_20 Patient Name In Report Format Short' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='MD PAT_CIV_21 Patient Letter Name' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='MD PAT_CIV_22 Patient Formal Name' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='MD PAT_CIV_23 PMI New Patient Creation Date' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='MD PAT_CIV_24 PMI New Patient Creation Date External' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='MD PAT_CIV_25 Marital Status Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='MD PAT_CIV_26 Marital Status Description' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='MD PAT_CIV_27 Patient Children Number' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='MD PAT_CIV_28 Patient Birth Place' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='29' description='MD PAT_CIV_29 Patient Demographic Comments' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='30' description='MD PAT_CIV_30 Categorie Socio Professional Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='31' description='MD PAT_CIV_31 Categorie Socio Professional Externe' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='32' description='MD PAT_CIV_32 Categorie Socio Professional Description' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='33' description='MD PAT_CIV_33 Profession Description' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='34' description='MD PAT_CIV_34 No Rue De Residence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='35' description='MD PAT_CIV_35 Complement De Residence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='36' description='MD PAT_CIV_36 Localite De Residence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='37' description='MD PAT_CIV_37 Pays De Residence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='38' description='MD PAT_CIV_38 Code Postal De Residence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='39' description='MD PAT_CIV_39 Telephone Domicle' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='40' description='MD PAT_CIV_40 Telephone Professional' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='41' description='MD PAT_CIV_41 Nationalite Du Patient' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='42' description='MD PAT_CIV_42 Place De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='43' description='MD PAT_CIV_43 Nom De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='44' description='MD PAT_CIV_44 Departement De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='45' description='MD PAT_CIV_45 Age' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='46' description='MD PAT_CIV_46 Nom Conjoint' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='47' description='MD PAT_CIV_47 Prenom Conjoint' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='48' description='MD PAT_CIV_48 Description Nationalite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='49' description='MD PAT_CIV_49 FLag Presence Cesame Vital' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='50' description='MD PAT_CIV_50 No De Portable' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='51' description='MD PAT_CIV_51 Flag Identite Provisoire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='52' description='MD PAT_CIV_52 Description Departement' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD PAT_CURRENT' description='Séjour'>
    <SegmentSubStructure piece='1' description='MD PAT_CURRENT_01 Code US' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD PAT_CURRENT_02 Code UF' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD PAT_CURRENT_03 Chambre' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD PAT_CURRENT_04 Lit' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MD PAT_CURRENT_05 Date UF' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MD PAT_CURRENT_06 Date US' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='MD PAT_CURRENT_07 Desc UF' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='MD PAT_CURRENT_08 Desc US' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='MD PAT_CURRENT_09 Uf De Provenance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='MD PAT_CURRENT_10 Desc Uf De Provenance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='MD PAT_CURRENT_11 US De Provenance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='MD PAT_CURRENT_12 Desc US De Provenance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='MD PAT_CURRENT_13 Numero De Telephone De L US' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='MD PAT_CURRENT_14 Numero Telephone US Provenance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='MD PAT_CURRENT_15 Taille Patient' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='MD PAT_CURRENT_16 Poids Patient' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='MD PAT_CURRENT_17 Type Episode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='MD PAT_CURRENT_18 D/H Saisie Taille' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='MD PAT_CURRENT_19 D/H Saisie Poids' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='MD PAT_CURRENT_20 Statut Episode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='MD PAT_CURRENT_21 Med.Resp. - Code ' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='MD PAT_CURRENT_22 Med.Resp. - Nom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='MD PAT_CURRENT_23 Med.Resp. - Nom Usuel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='MD PAT_CURRENT_24 Med.Resp. - Nom Complet' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='MD PAT_CURRENT_25 Med.Resp. - Prénom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='MD PAT_CURRENT_26 Med.Resp. - Initiales' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='MD PAT_CURRENT_27 Med.Resp. - Qualité' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='MD PAT_CURRENT_28 Med.Resp. - Titre' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='29' description='MD PAT_CURRENT_29 Med.Resp. - Téléphone' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='30' description='MD PAT_CURRENT_30 Med.Resp. - Téléphone 2' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='31' description='MD PAT_CURRENT_31 Med.Resp. - Fax' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='32' description='MD PAT_CURRENT_32 Med.Resp. - Numéro Appel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='33' description='MD PAT_CURRENT_33 Med.Resp. - Inscription Ordre' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='34' description='MD PAT_CURRENT_34 Med.Resp. - Service' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='35' description='MD PAT_CURRENT_35 Med.Resp. - Code Système Autre' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='36' description='MD PAT_CURRENT_36 Med.Resp. - Code ADELI' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='37' description='MD PAT_CURRENT_37 Med.Resp. - Code RPPS' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD PAT_TEL' description='Tel'>
    <SegmentSubStructure piece='1' description='MD PAT_TEL_01' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD PRESCR_MD' description='Prescription'>
    <SegmentSubStructure piece='1' description='MD PRESCR_MD_01 Id Interne Prescription' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD PRESCR_MD_02 Description De La Prescription' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD PRESCR_MD_03 Mode Administration' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD PRESCR_MD_04 Date De Debut De Prescription' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MD PRESCR_MD_05 Date De Fin De Prescription' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MD PRESCR_MD_06 Prescripteur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='MD PRESCR_MD_07 Condition' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='MD PRESCR_MD_08 Posologie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='MD PRESCR_MD_09 Date Derniere Modification' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='MD PRESCR_MD_10 Commentaires' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='MD PRESCR_MD_11 Derniere Preparation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='MD PRESCR_MD_12 Detenu' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='MD PRESCR_MD_13 Derniere Administration' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='MD PRESCR_MD_14 Dose Derniere Administration' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='MD PRESCR_MD_15 Unite' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD TC ACT' description='Transmissions Ciblees Actions'>
    <SegmentSubStructure piece='1' description='MD TC ACT_01 Description' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD TC ACT_02 Complement Description' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD TC CIBLE' description='Transmissions Ciblees Cible'>
    <SegmentSubStructure piece='1' description='MD TC CIBLE_01 Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD TC CIBLE_02 Description' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MD TC CIBLE_03 Complement Description' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MD TC CIBLE_04 Date Heure Creation (serveur)' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MD TC CIBLE_05 Date Heure Creation (client)' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MD TC CIBLE_06 Date Heure Reconduction' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='MD TC CIBLE_07 Date Heure Derniere Modification' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='MD TC CIBLE_08 Utilisateur Createur (serveur)' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='MD TC CIBLE_09 Profil Metier Util Createur (serveur)' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='MD TC CIBLE_10 Utilisateur Createur (client)' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='MD TC CIBLE_11 Profil Metier Util Createur (client)' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='MD TC CIBLE_12 Utilisateur Reconduction' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='MD TC CIBLE_13 Profil Metier Util Reconduction' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='MD TC CIBLE_14 Utilisateur Derniere Modification' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='MD TC CIBLE_15 Profil Metier Util Derniere Modification' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='MD TC CIBLE_16 Statut' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='MD TC CIBLE_17 Cible Importee' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD TC DON' description='Transmissions Ciblees Données'>
    <SegmentSubStructure piece='1' description='MD TC DON_01 Description' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD TC DON_02 Complement Description' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD TC RES' description='Transmissions Ciblees Résultats'>
    <SegmentSubStructure piece='1' description='MD TC RES_01 Description' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD TC RES_02 Complement Description' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MD US' description='Unité de Soins'>
    <SegmentSubStructure piece='1' description='MD US_01 Code US' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MD US_02 Description US' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MP' description='Mode placement Psy 1'>
    <SegmentSubStructure piece='1' description='MP_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MP_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MP_03 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MP_04 Nom Usuel' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MP_05 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MP_06 Nom De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='MP_07 Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='MP_08 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='MP_09 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='MP_10 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='MP_11 Date Heure Admission' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='MP_12 Code US' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='MP_13 Code UF' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='MP_14 Chambre' max_length='5' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='MP_15 Lit' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='MP_16 Medecin Responsable' datatype='CCOM_Medecin' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='MP_17 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='MP_18 Placement' datatype='CCOM_Code' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='MP_19 Type Hospitalisation' datatype='CCOM_Code' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='MP_20 Date Entree Dans Le Placement' max_length='8' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='MP_21 Commentaire' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MP2' description='Mode placement Psy 2'>
    <SegmentSubStructure piece='1' description='MP2_01 Num Usuel Du Tiers Demandeur' max_length='1.35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MP2_02 Prenom' max_length='1.35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MP2_03 Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MP2_04 Lien De Parente' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MP2_05 Profession' max_length='1.35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MP2_06 Piece Identite' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='MP2_07 Date Demande' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='MP2_08 Numero Et Rue' max_length='1.6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='MP2_09 Complement Adresse' max_length='1.6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='MP2_10 Code Postal' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='MP2_11 Localite' max_length='1.25' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='MP2_12 Code Pays' max_length='1.3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='MP2_13 Telephone' max_length='1.2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='MP2_14 Telephone Professionel' max_length='1.2' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MSA' description='Message Acknowledgment Segment'>
    <SegmentSubStructure piece='1' description='MSA_01 Acknowledgment Code' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MSA_02 Message Control ID' max_length='20' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MSA_03 Text Message' max_length='80' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MSA_04 Expected Sequence Number' max_length='15' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MSA_05 Delayed Acknowledgment Type' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MSA_06 Error Condition' max_length='250' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MSH' description='Message Header Segment'>
    <SegmentSubStructure piece='1' description='MSH_01 Field Separator' symbol='!' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MSH_02 Encoding Characters' symbol='!' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MSH_03 Sending Application' max_length='180' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MSH_04 Sending Facility' max_length='180' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MSH_05 Receiving Application' max_length='180' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MSH_06 Receiving Facility' max_length='180' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='MSH_07 Date Time Of Message' max_length='26' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='MSH_08 Security' max_length='40' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='MSH_09 Message Type' symbol='!' max_length='7' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='MSH_10 Message Control ID' symbol='!' max_length='20' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='MSH_11 Processing ID' symbol='!' max_length='3' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='MSH_12 Version ID' symbol='!' max_length='8' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='MSH_13 Sequence Number' max_length='15' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='MSH_14 Continuation Pointer' max_length='180' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='MSH_15 Accept Acknowledgement Type' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='MSH_16 Application Acknowledgement Type' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='MSH_17 Country Code' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='MSH_18 Character Set' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='MSH_19 Principal Language Of Message' max_length='3' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ND' description='Sortie Nouveau-né'>
    <SegmentSubStructure piece='1' description='ND_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='ND_02 Code Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='ND_03 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='ND_04 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='ND_05 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='ND_06 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='ND_07 Date Heure Sortie' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='ND_08 Groupe Sortie' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='ND_09 Etablissement Destination' datatype='CCOM_Etab' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='ND_10 Nombre De Jours A Deduire' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='ND_11 IPP Interne Mere' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='ND_12 Numero Episode Interne Mere' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='ND_13 IPP Mere' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='ND_14 Numero Episode Mere' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='ND_15 Mode Sortie' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='ND_16 Code UF' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='ND_17 Code US' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='ND_18 Transcode US' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='ND_19 Indicateur UF Hebergee' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='ND_20 Nom Usuel' datatype='CCOM_Nom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='ND_21 Prenom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='ND_22 Chambre' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='ND_23 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='ND_24 Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='ND_25 From WebService' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='ND_26 Sexe' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='ND_27 WebService App' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='ND_28 Mode Transport' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='29' description='ND_29 Ambulance' datatype='CCOM_Ambulance' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='NR' description='Enregistrement Nouveau Né'>
    <SegmentSubStructure piece='1' description='NR_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='NR_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='NR_03 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='NR_04 Nom Usuel' datatype='CCOM_Nom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='NR_05 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='NR_06 Autres Prenoms' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='NR_07 Qualite' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='NR_08 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='NR_09 Localite De Naissance' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='NR_10 Date De Naissance' max_length='8' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='NR_11 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='NR_12 No Rue Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='NR_13 Code Postal Adresse' max_length='8' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='NR2' description='Enregistrement Nouveau Né'>
    <SegmentSubStructure piece='1' description='NR2_01 Localite Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='NR2_02 Pays Adresse' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='NR2_03 Telephone' max_length='15' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='NR2_04 Nationalite' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='NR2_05 Departement De Naissance' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='NR2_06 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='NR3' description='Enregistrement Nouveau Né'>
    <SegmentSubStructure piece='1' description='NR3_01 Code Hopital' datatype='CCOM_Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='NR3_02 Numero Episode Interne' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='NR3_03 Numero Episode' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='NR3_04 Chambre' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='NR3_05 Medecin Responsable' datatype='CCOM_Medecin' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='NR3_06 Utilisateur' datatype='CCOM_Utilisateur' max_length='20' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='NR3_07 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='NR3_08 Indicateur Dernier Mouvement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='NR3_09 From WebService' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='NR3_10 Confidentialite Medicale' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='NR3_11 WebService App' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='NR4' description='Enregistrement Nouveau Né'>
    <SegmentSubStructure piece='1' description='NR4_01 Episode Confidentiel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='NR4_02 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='NR4_03 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='NR4_04 Rang Gemellaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='NR4_05 Poids En Grammes' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='NR4_06 Age Gestationnel En Semaines' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='NR4_07 Type Accouchement' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='NR4_08 Code US' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='NR4_09 Code UF' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='NR4_10 Indicateur UF Hebergee' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='NR4_11 Date Heure Admission' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='NR4_12 Transcode US' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='NR4_13 IPP Interne Mere' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='NR4_14 Numero Episode Interne Mere' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='NR4_15 IPP Mere' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='NR4_16 Numero Episode Mere' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='NR4_17 Date Heure Naissance' max_length='12' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='OBR' description='Observation Request'>
    <SegmentSubStructure piece='1' description='OBR_01 Numero De Sequence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='OBR_02 Num Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='OBR_03 Transaction Seq #' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='OBR_04 Code Examen' datatype='CCOM_ORM_Prestation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='OBR_05 Priorite' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='OBR_06 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='OBR_07 Date Heure Prelevement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='OBR_08 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='OBR_09 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='OBR_10 Preleveur' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='OBR_11 Code Action' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='OBR_12 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='OBR_13 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='OBR_14 Date Heure Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='OBR_15 Nature Echantillon' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='OBR_16 Code Medecin Prescripteur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='OBR_17 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='OBR_18 Code UF Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='OBR_19 Discipline' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='OBR_20 Formulaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='OBR_21 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='OBR_22 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='OBR_23 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='OBR_24 Lieu Realisation' datatype='CCOM_Ressource' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='OBR_25 Numero Recipient' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='OD' description='Cloture Externe'>
    <SegmentSubStructure piece='1' description='OD_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='OD_02 Code Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='OD_03 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='OD_04 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='OD_05 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='OD_06 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='OD_07 Date Heure Cloture' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='OD_08 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='OD_09 Identifiant Unique De Mouvement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='OD_10 Nom Usuel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='OD_11 Prenom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='OD_12 Nom De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='OD_13 Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='OD_14 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='OD_15 Code Unite Consultation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='OD_16 Code UF' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='OD_17 Code Medecin Responsable' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='OD_18 From WebService' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='OD_19 WebService App' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='OD_20 Mode Transport' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='OD_21 Ambulance' datatype='CCOM_Ambulance' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='OP' description='Pré Consultation'>
    <SegmentSubStructure piece='1' description='OP_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='OP_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='OP_03 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='OP_04 Nom Usuel' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='OP_05 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='OP_06 Qualite' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='OP_07 Nom De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='OP_08 Localite De Naissance' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='OP_09 Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='OP_10 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='OP_11 No Rue Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='OP_12 Code Postal Adresse' max_length='8' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='OP2' description='Pré Consultation'>
    <SegmentSubStructure piece='1' description='OP2_01 Localite Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='OP2_02 Telephone Domicile' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='OP2_03 Nationalite' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='OP2_04 Pays De Naissance' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='OP2_05 Departement De Naissance' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='OP2_06 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='OP2_07 Pays Adresse' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='OP2_08 Telephone Professionnel' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='OP2_09 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='OP2_10 InformationsIdentite' datatype='CCOM_InfosIdentite' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='OP2_11 Numero SS Dernier Episode' max_length='15' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='OP2_12 From WebService' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='OP2_13 WebService App' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='OP3' description='Pré Consultation'>
    <SegmentSubStructure piece='1' description='OP3_01 Code Hopital' datatype='CCOM_Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='OP3_02 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='OP3_03 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='OP3_04 Code Unite Consultation' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='OP3_05 Code UF' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='OP3_06 Date Heure Enregistrement' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='OP3_07 Commentaire Enregistrement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='OP3_08 Situation Familiale' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='OP3_09 Code Medecin Responsable' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='OP3_10 Autres Prenoms' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='OP3_11 Utilisateur' datatype='CCOM_Utilisateur' max_length='20' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='OP3_12 Identifiants RDV Pre Episode' datatype='CCOM_IdRDVPreEpisode' symbol='+' max_length='100' required='O' ifrepeating='1'/>
</SegmentStructure>
<SegmentStructure name='OR' description='Enregistrement Externe'>
    <SegmentSubStructure piece='1' description='OR_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='OR_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='OR_03 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='OR_04 Nom Usuel' datatype='CCOM_Nom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='OR_05 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='OR_06 Qualite' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='OR_07 Nom De Naissance' datatype='CCOM_Nom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='OR_08 Localite De Naissance' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='OR_09 Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='OR_10 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='OR_11 No Rue Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='OR_12 Code Postal Adresse' max_length='8' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='OR2' description='Enregistrement Externe'>
    <SegmentSubStructure piece='1' description='OR2_01 Localite Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='OR2_02 Telephone Domicile' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='OR2_03 Nationalite' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='OR2_04 Pays De Naissance' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='OR2_05 Departement De Naissance' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='OR2_06 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='OR2_07 Pays Adresse' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='OR2_08 Telephone Professionnel' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='OR2_09 Telephone Portable' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='OR2_10 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='OR2_11 Informations Identite' datatype='CCOM_InfosIdentite' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='OR2_12 Numero SS Dernier Episode' max_length='15' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='OR2_13 Employeur' datatype='CCOM_Employeur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='OR2_14 Confidentialite Medicale' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='OR2_15 From WebService' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='OR2_16 Code Decision Medicale' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='OR2_17 WebService App' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='OR3' description='Enregistrement Externe'>
    <SegmentSubStructure piece='1' description='OR3_01 Code Hopital' datatype='CCOM_Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='OR3_02 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='OR3_03 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='OR3_04 Numero Episode Precedent' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='OR3_05 Code Unite Consultation' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='OR3_06 Code UF' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='OR3_07 Date Heure Enregistrement' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='OR3_08 Commentaire Enregistrement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='OR3_09 Situation Familiale' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='OR3_10 Nombre Enfants' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='OR3_11 Categorie Socioprofessionnelle' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='OR3_12 Profession' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='OR3_13 Transcode Unite Consultation' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='OR3_14 Telephone Adresse Temporaire' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='OR3_15 Medecin Responsable' datatype='CCOM_Medecin' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='OR3_16 Medecin Envoyeur' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='OR3_17 Medecin Referent' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='OR3_18 Autres Prenoms' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='OR3_19 Indicateur Episode Recurrent' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='OR3_20 Utilisateur' datatype='CCOM_Utilisateur' max_length='20' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='OR3_21 Code Parcours De Soins' max_length='3' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='OR3_22 Episode Confidentiel' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='OR3_23 Mode Transport' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='OR3_24 Informations Accident' datatype='CCOM_Accident' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='OR3_25 Date Heure Decision Medicale' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='OR3_26 Sous Type Episode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='OR3_27 Date Parcours De Soins' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='OR3_28 Ambulance' datatype='CCOM_Ambulance' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='OR4' description='Enregistrement Externe'>
    <SegmentSubStructure piece='1' description='OR4_01 Adresse Temporaire' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='OR4_02 Complement Adresse Temporaire' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='OR4_03 Pays Adresse Temporaire' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='OR4_04 Code Postal Adresse Temporaire' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='OR4_05 Localite Adresse Temporaire' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='OR4_06 Nom Du Pere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='OR4_07 Prenom Du Pere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='OR4_08 Pere Decede' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='OR4_09 Nom De La Mere' max_length='35' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='OR5' description='Enregistrement Externe'>
    <SegmentSubStructure piece='1' description='OR5_01 Prenom De La Mere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='OR5_02 Mere Decedee' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='OR5_03 Medecin Traitant' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='OR5_04 Code Medecin Correspondant 1' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='OR5_05 Code Medecin Correspondant 2' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='OR5_06 Code Medecin Correspondant 3' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='OR5_07 Code Medecin Correspondant 4' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='OR5_08 Code Medecin Correspondant 5' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='OR5_09 Code Medecin Correspondant 6' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='OR5_10 Code Medecin Correspondant 7' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='OR5_11 Code Medecin Correspondant 8' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='OR5_12 Code Medecin Correspondant 9' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='OR5_13 Code Medecin Correspondant 10' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='OR5_14 Code Medecin Correspondant 11' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='OR5_15 Code Medecin Correspondant 12' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='OR5_16 Code Medecin Correspondant 13' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='OR5_17 Code Medecin Correspondant 14' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='OR5_18 Code Medecin Correspondant 15' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='OR5_19 Code Medecin Correspondant 16' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='OR5_20 Code Medecin Correspondant 17' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='OR5_21 Code Medecin Correspondant 18' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='OR5_22 Code Medecin Correspondant 19' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='OR5_23 Code Medecin Correspondant 20' max_length='7' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='P' description='Patient'>
    <SegmentSubStructure piece='1' description='P_01 Numero De Sequence' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='P_02 IPP' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='P_03 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='P_04 Numero Episode' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='P_05 Nom Patient' datatype='CCOM_HPRIM_Nom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='P_06 Nom De Jeune Fille' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='P_07 Date De Naissance' max_length='8' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='P_08 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='P_09 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='P_10 Adresse' datatype='CCOM_HPRIM_Adresse' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='P_11 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='P_12 Telephone' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='P_13 Code Medecin Responsable' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='P_14 Numero SS' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='P_15 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='P_16 Taille' datatype='CCOM_Valeur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='P_17 Poids' datatype='CCOM_Valeur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='P_18 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='P_19 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='P_20 UF' datatype='CCOM_HPRIM_UF' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='P_21 Code Etablissement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='P_22 Lit' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='P_23 Dates' datatype='CCOM_HPRIM_Dates' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='P_24 Type Episode' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='P_25 Localisation' datatype='CCOM_HPRIM_Localisation' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='P_26 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='P_27 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='P_28 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='29' description='P_29 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='30' description='P_30 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='31' description='P_31 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='32' description='P_32 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='33' description='P_33 Date De Deces' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PA' description='Pré Admission'>
    <SegmentSubStructure piece='1' description='PA_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PA_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PA_03 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PA_04 Nom Usuel' datatype='CCOM_Nom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PA_05 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PA_06 Qualite' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PA_07 Nom De Naissance' datatype='CCOM_Nom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PA_08 Localite De Naissance' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PA_09 Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PA_10 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PA_11 No Rue Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PA_12 Code Postal Adresse' max_length='8' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PA2' description='Pré Admission'>
    <SegmentSubStructure piece='1' description='PA2_01 Localite Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PA2_02 Telephone Domicile' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PA2_03 Nationalite' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PA2_04 Pays De Naissance' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PA2_05 Departement De Naissance' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PA2_06 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PA2_07 Pays Adresse' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PA2_08 Telephone Professionnel' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PA2_09 Telephone Portable' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PA2_10 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PA2_11 Informations Identite' datatype='CCOM_InfosIdentite' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PA2_12 Numero SS Dernier Episode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PA2_13 Confidentialite Medicale' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='PA2_14 From WebService' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='PA2_15 WebService App' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PA3' description='Pré Admission'>
    <SegmentSubStructure piece='1' description='PA3_01 Code Hopital' datatype='CCOM_Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PA3_02 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PA3_03 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PA3_04 Numero Episode Precedent' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PA3_05 Code US Prevue' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PA3_06 Code UF Prevue' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PA3_07 Situation Familiale' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PA3_08 Nombre Enfants' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PA3_09 Categorie Socioprofessionnelle' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PA3_10 Mode Transport' datatype='CCOM_Code' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PA3_11 Mode Entree' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PA3_12 Etablissement Origine' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PA3_13 Type Accident' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='PA3_14 Confidentialite' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='PA3_15 Profession' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='PA3_16 Date Heure Admission Prevue' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='PA3_17 Lieu Admission Prevu' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='PA3_18 Date Heure Creation' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='PA3_19 Transcode US' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='PA3_20 Telephone Adresse Temporaire' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='PA3_21 Medecin Responsable' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='PA3_22 Medecin Envoyeur' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='PA3_23 Medecin Referent' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='PA3_24 Autres Prenoms' max_length='35' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PA4' description='Pré Admission'>
    <SegmentSubStructure piece='1' description='PA4_01 Adresse Temporaire' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PA4_02 Complement Adresse Temporaire' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PA4_03 Pays Adresse Temporaire' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PA4_04 Code Postal Adresse Temporaire' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PA4_05 Localite Adresse Temporaire' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PA4_06 Nom Du Pere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PA4_07 Prenom Du Pere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PA4_08 Pere Decede' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PA4_09 Nom De La Mere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PA4_10 Commentaire' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PA5' description='Pré Admission'>
    <SegmentSubStructure piece='1' description='PA5_01 Prenom De La Mere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PA5_02 Mere Decedee' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PA5_03 Medecin Traitant' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PA5_04 Code Medecin Correspondant 1' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PA5_05 Code Medecin Correspondant 2' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PA5_06 Code Medecin Correspondant 3' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PA5_07 Code Medecin Correspondant 4' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PA5_08 Code Medecin Correspondant 5' max_length='7' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PA6' description='Pré Admission'>
    <SegmentSubStructure piece='1' description='PA6_01 PaP1 Nom Usuel' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PA6_02 PaP1 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PA6_03 PaP1 Lien De Parente' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PA6_04 PaP1 Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PA6_05 PaP1 Complement' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PA6_06 PaP1 Pays' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PA6_07 PaP1 Code Postal' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PA6_08 PaP1 Localite' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PA6_09 PaP1 Telephone Domicile' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PA6_10 PaP1 Telephone Professionnel' max_length='20' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PA7' description='Pré Admission'>
    <SegmentSubStructure piece='1' description='PA7_01 PaP2 Nom Usuel' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PA7_02 PaP2 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PA7_03 PaP2 Lien De Parente' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PA7_04 PaP2 Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PA7_05 PaP2 Complement' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PA7_06 PaP2 Pays' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PA7_07 PaP2 Code Postal' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PA7_08 PaP2 Localite' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PA7_09 PaP2 Telephone Domicile' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PA7_10 PaP2 Telephone Professionnel' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PA7_11 Indicateur Dernier Mouvement' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PA7_12 Utilisateur' datatype='CCOM_Utilisateur' max_length='20' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PA7_13 Identifiants RDV Pre Episode' datatype='CCOM_IdRDVPreEpisode' max_length='100' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PB' description='Démographie Patient'>
    <SegmentSubStructure piece='1' description='PB_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PB_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PB_03 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PB_04 Nom Usuel' max_length='35' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PB_05 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PB_06 Qualite' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PB_07 Nom De Naissance' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PB_08 Localite De Naissance' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PB_09 Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PB_10 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PB_11 No Rue Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PB_12 Code Postal Adresse' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PB_13 List IPP Externe' datatype='CCOM_IPP_Ext' symbol='+' max_length='999' required='O' ifrepeating='1'/>
</SegmentStructure>
<SegmentStructure name='PB2' description='Démographie Patient'>
    <SegmentSubStructure piece='1' description='PB2_01 Localite Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PB2_02 Telephone Domicile' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PB2_03 Nationalite' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PB2_04 Pays De Naissance' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PB2_05 Departement De Naissance' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PB2_06 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PB2_07 Pays Adresse' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PB2_08 Telephone Professionnel' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PB2_09 Date De Deces' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PB2_10 Situation Familiale' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PB2_11 Nombre Enfants' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PB2_12 Dernier Numero Episode' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PB2_13 Autres Prenoms' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='PB2_14 Criteres Discriminants Modifies' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='PB2_15 Informations Identite' datatype='CCOM_InfosIdentite' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='PB2_16 Type Dernier Episode' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='PB2_17 Telephone Portable' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='PB2_18 Utilisateur' datatype='CCOM_Utilisateur' max_length='20' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='PB2_19 IPP Autre' datatype='CCOM_ID' symbol='+' max_length='999' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='20' description='PB2_20 Identifiant National' datatype='CCOM_ID' symbol='+' max_length='999' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='21' description='PB2_21 Rang Gemellaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='PB2_22 From WebService' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='PB2_23 Email' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='PB2_24 Flag Decede Hors Etab' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='PB2_25 Profession' datatype='CCOM_Profession' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='PB2_26 Adresse Provisoire' datatype='CCOM_Adresse' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='PB2_27 WebService App' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PB3' description='Commentaire Patient'>
    <SegmentSubStructure piece='1' description='PB3_01 Commentaire' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PB4' description='Personnes A Prevenir'>
    <SegmentSubStructure piece='1' description='PB4_01 Occurrence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PB4_02 Nom Usuel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PB4_03 Prenom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PB4_04 Lien De Parente' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PB4_05 No Rue' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PB4_06 Complement Adresse' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PB4_07 Pays' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PB4_08 Code Postal' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PB4_09 Localite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PB4_10 Telephone Domicile' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PB4_11 Telephone Professionnel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PB4_12 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PB4_13 Telephone Mobile' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='PB4_14 Identifiant Unique' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='PB4_15 Date De Suppression' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='PB4_16 Civilite' max_length='9' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PB5' description='Mode De Placement PSY'>
    <SegmentSubStructure piece='1' description='PB5_01 Occurrence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PB5_02 Action' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PB5_03 Identifiant Unique' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PB5_04 Date Heure De Debut' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PB5_05 Date Heure De Fin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PB5_06 Mode Legal De Soin' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PB5_07 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PB5_08 Code RIMP Du Mode Legal' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PD' description='Préparation Départ'>
    <SegmentSubStructure piece='1' description='PD_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PD_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PD_03 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PD_04 Nom Usuel' datatype='CCOM_Nom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PD_05 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PD_06 Nom De Naissance' datatype='CCOM_Nom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PD_07 Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PD_08 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PD_09 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PD_10 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PD_11 Date Heure Sortie Prevue' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PD_12 Mode Sortie' datatype='CCOM_Code' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PD_13 Destination' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='PD_14 Code US Origine' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='PD_15 Code UF Origine' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='PD_16 Indicateur UF Origine Hebergee' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='PD_17 Transcode US Origine' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='PD_18 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='PD_19 Utilisateur' datatype='CCOM_Utilisateur' max_length='20' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PH' description='Prescription Medicament'>
    <SegmentSubStructure piece='1' description='PH_01 IPP' max_length='255' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PH_02 Nom Usuel' max_length='32' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PH_03 Nom De Naissance' max_length='32' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PH_04 Prenom' max_length='32' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PH_05 Date De Naissance' max_length='14' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PH_06 Date Lunaire' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PH_07 Sexe' max_length='16' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PH2' description='Prescription Medicament'>
    <SegmentSubStructure piece='1' description='PH2_01 Numero Episode' max_length='255' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PH3' description='Prescription Medicament'>
    <SegmentSubStructure piece='1' description='PH3_01 Mode Communication' max_length='16' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PH3_02 Date Heure Prescription' max_length='14' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PH3_03 Code Unite Hebergement' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PH3_04 Code Unite Responsabilite Medicale' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PH3_05 Commentaire' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PH4' description='Prescription Medicament'>
    <SegmentSubStructure piece='1' description='PH4_01 Code' max_length='16' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PH4_02 Date Heure Enregistrement' max_length='14' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PH4_03 Date Heure' max_length='14' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PH4_04 Valeur' datatype='CCOM_Valeur' max_length='32' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PH5' description='Prescription Medicament'>
    <SegmentSubStructure piece='1' description='PH5_01 Id Element De Prescription' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PH5_02 Creation Arret ?' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PH5_03 Fourniture' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PH5_04 Id Prescripteur' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PH5_05 Voie Administration' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PH5_06 Lieu Administration' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PH5_07 Dispositifs Associes' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PH5_08 Posologie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PH5_09 Date Heure Debut Prescription' max_length='14' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PH5_10 Date Heure Fin Prescription' max_length='14' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PH5_11 Indication' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PH5_12 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PH5_13 Utilisateur' datatype='CCOM_Utilisateur' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='PH5_14 Type Condition' max_length='255' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PH6' description='Prescription Medicament'>
    <SegmentSubStructure piece='1' description='PH6_01 Type De Code Composant' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PH6_02 Code Composant' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PH6_03 Libelle Composant' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PH6_04 Quantite' datatype='CCOM_Valeur' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PH6_05 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PH6_06 Est Vehicule' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PH6_07 Medicament MDS' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PH6_08 Medicament T2A' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PH6_09 Stupefiant' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PH6_10 Criteres De Tri' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PH6_11 Urgent' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PH6_12 Hors Livret' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PH6_13 Complement Distribution' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='PH6_14 Unite De Distribution' max_length='16' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='PH6_15 Nombre Unite De Prise Par Contenu' max_length='255' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='PH6_16 Est Divisible' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='PH6_17 Pump' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='PH6_18 Zone De Stockage' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='PH6_19 Code GEF Du Medicament' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='PH6_20 Est Retrocedable' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='PH6_21 Est ATU' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='PH6_22 Code Interne Medicament' max_length='10' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='PH6_23 Nature' datatype='CCOM_Code' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='PH6_24 Indication Utilisation' datatype='CCOM_Code' max_length='255' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PH7' description='Prescription Medicament'>
    <SegmentSubStructure piece='1' description='PH7_01 Frequence' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PH7_02 Type Evenement Debut' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PH7_03 Evenement Debut' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PH7_04 Intervalle Temps Evenement Debut' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PH7_05 Type Evenement Fin' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PH7_06 Evenement Fin' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PH7_07 Intervalle Temps Evenement Fin' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PH7_08 Duree' datatype='CCOM_Valeur' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PH7_09 Debit' datatype='CCOM_Valeur' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PH7_10 Quantite' datatype='CCOM_Valeur' max_length='32' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PH7_11 Type Evenement2 Debut' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PH7_12 Evenement2 Debut' max_length='255' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PH8' description='Prescription Medicament'>
    <SegmentSubStructure piece='1' description='PH8_01 Id Element Lie' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PH8_02 Type Liaison' max_length='16' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PID' description='Patient Identification Segment'>
    <SegmentSubStructure piece='1' description='PID_01 Set ID - PID' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PID_02 Patient ID' max_length='20' required='B' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PID_03 Patient Identifier List' symbol='+' max_length='20' required='R' ifrepeating='1'/>
    <SegmentSubStructure piece='4' description='PID_04 Alternate Patient ID - PID' symbol='*' max_length='20' required='B' ifrepeating='1'/>
    <SegmentSubStructure piece='5' description='PID_05 Patient Name' symbol='+' max_length='48' required='R' ifrepeating='1'/>
    <SegmentSubStructure piece='6' description='PID_06 Mothers Maiden Name' symbol='*' max_length='48' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='7' description='PID_07 Date/Time Of Birth' max_length='26' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PID_08 Sex' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PID_09 Patient Alias' symbol='*' max_length='48' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='10' description='PID_10 Race' symbol='*' max_length='80' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='11' description='PID_11 Patient Address' symbol='*' max_length='106' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='12' description='PID_12 County Code' max_length='4' required='B' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PID_13 Phone Number - Home' symbol='*' max_length='40' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='14' description='PID_14 Phone Number - Business' symbol='*' max_length='40' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='15' description='PID_15 Primary Language' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='PID_16 Marital Status' max_length='80' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='PID_17 Religion' max_length='80' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='PID_18 Patient Account Number' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='PID_19 SSN Number - Patient' max_length='16' required='B' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='PID_20 Driver License Number - Patient' max_length='25' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='PID_21 Mother Identifier' symbol='*' max_length='20' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='22' description='PID_22 Ethnic Group' symbol='*' max_length='80' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='23' description='PID_23 Birth Place' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='PID_24 Multiple Birth Indicator' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='PID_25 Birth Order' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='PID_26 Citizenship' symbol='*' max_length='80' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='27' description='PID_27 Veterans Military Status' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='PID_28 Nationality' max_length='80' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='29' description='PID_29 Patient Death Date and Time' max_length='26' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='30' description='PID_30 Patient Death Indicator' max_length='1' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PL' description='Cloture Pré Admission'>
    <SegmentSubStructure piece='1' description='PL_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PL_02 Code Hopital' datatype='CCOM_Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PL_03 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PL_04 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PL_05 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PL_06 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PL_07 Date Heure Cloture Pre Admission' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PL_08 Motif Cloture' max_length='30' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PL_09 Nom Usuel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PL_10 Prenom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PL_11 Nom De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PL_12 Sexe' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PL_13 Date De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='PL_14 Code UF' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='PL_15 Code US' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='PL_16 Identifiant Unique De Mouvement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='PL_17 Date Heure Admission Prevue' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PM' description='Fusion'>
    <SegmentSubStructure piece='1' description='PM_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PM_02 Source IPP Interne' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PM_03 Source Episode Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PM_04 Source IPP' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PM_05 Cible Episode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PM_06 Cible IPP Interne' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PM_07 Cible Episode Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PM_08 Cible IPP' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PM_09 Source Nom Usuel' max_length='35' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PM_10 Source Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PM_11 Cible Nom Usuel' max_length='35' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PM_12 Cible Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PM_13 Cible Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='PM_14 Cible Sexe' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='PM_15 Source Nom De Naissance' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='PM_16 Cible Nom De Naissance' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='PM_17 Utilisateur' datatype='CCOM_Utilisateur' max_length='20' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='PM_18 Source Informations Identite' datatype='CCOM_InfosIdentite' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='PM_19 Cible Informations Identite' datatype='CCOM_InfosIdentite' max_length='999' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PP' description='Patient Present'>
    <SegmentSubStructure piece='1' description='PP_01 Numero Episode' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PP_02 IPP' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PP_03 Code US' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PP_04 Nom Usuel' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PP_05 Prenom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PP_06 Sexe' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PP_07 Date De Naissance' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PP_08 Date De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PP_09 Nom De Naissance' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PP_10 Chambre' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PP_11 Code UF' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PP_12 Lit' max_length='999' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PT' description='Préparation Mutation'>
    <SegmentSubStructure piece='1' description='PT_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PT_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PT_03 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PT_04 Nom Usuel' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PT_05 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PT_06 Nom De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PT_07 Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PT_08 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PT_09 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PT_10 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PT_11 Date Heure Prevue Mutation' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PT_12 Hopital' datatype='CCOM_Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PT_13 Code US' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='PT_14 Code UF' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='PT_15 Indicateur UF Hebergee' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='PT_16 Transcode US' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='PT_17 Medecin Responsable' datatype='CCOM_Medecin' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='PT_18 Code US Origine' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='PT_19 Code UF Origine' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='PT_20 Indicateur UF Origine Hebergee' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='PT_21 Transcode US Origine' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='PT_22 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='PT_23 Utilisateur' datatype='CCOM_Utilisateur' max_length='20' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PU' description='Préparation Admission'>
    <SegmentSubStructure piece='1' description='PU_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PU_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PU_03 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PU_04 Nom Usuel' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PU_05 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PU_06 Nom De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PU_07 Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PU_08 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PU_09 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PU_10 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PU_11 Date Heure Prevue Decision' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PU_12 Code Hospital' datatype='CCOM_Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PU_13 Code US' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='PU_14 Code UF' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='PU_15 Indicateur UF Hebergee' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='PU_16 Transcode US' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='PU_17 Medecin Responsable' datatype='CCOM_Medecin' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='PU_18 UM' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='PU_19 Destination' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='PU_20 Decision Medicale' datatype='CCOM_Code' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='PU_21 Orientation' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='PU_22 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='PU_23 Motif Attente' datatype='CCOM_Code' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='PU_24 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='PU_25 Utilisateur' datatype='CCOM_Utilisateur' max_length='20' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PV1' description='Patient Visit Segment'>
    <SegmentSubStructure piece='1' description='PV1_01 Set ID - PV1' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PV1_02 Patient Class' symbol='!' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PV1_03 Assigned Patient Location' max_length='80' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PV1_04 Admission Type' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PV1_05 Preadmit Number' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PV1_06 Prior Patient Location' max_length='80' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PV1_07 Attending Doctor' symbol='*' max_length='60' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='8' description='PV1_08 Referring Doctor' symbol='*' max_length='60' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='9' description='PV1_09 Consulting Doctor' symbol='*' max_length='60' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='10' description='PV1_10 Hospital Service' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PV1_11 Temporary Location' max_length='80' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PV1_12 Preadmit Test Indicator' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PV1_13 Re-admission Indicator' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='PV1_14 Admit Source' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='PV1_15 Ambulatory Status' symbol='*' max_length='2' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='16' description='PV1_16 VIP Indicator' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='PV1_17 Admitting Doctor' symbol='*' max_length='60' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='18' description='PV1_18 Patient Type' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='PV1_19 Visit Number' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='PV1_20 Financial Class' symbol='*' max_length='50' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='21' description='PV1_21 Charge Price Indicator' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='PV1_22 Courtesy Code' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='PV1_23 Credit Rating' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='PV1_24 Contract Code' symbol='*' max_length='2' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='25' description='PV1_25 Contract Effective Date' symbol='*' max_length='8' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='26' description='PV1_26 Contract Amount' symbol='*' max_length='12' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='27' description='PV1_27Contract Period' symbol='*' max_length='3' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='28' description='PV1_28 Interest Code' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='29' description='PV1_29 Transfer to Bad Debt Code' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='30' description='PV1_30 Transfer to Bad Debt Date' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='31' description='PV1_31 Bad Debt Agency Code' max_length='10' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='32' description='PV1_32 Bad Debt Transfer Amount' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='33' description='PV1_33 Bad Debt Recovery Amount' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='34' description='PV1_34 Delete Account Indicator' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='35' description='PV1_35 Delete Account Date' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='36' description='PV1_36 Discharge Disposition' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='37' description='PV1_37 Discharged to Location' max_length='25' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='38' description='PV1_38 Diet Type' max_length='80' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='39' description='PV1_39 Servicing Facility' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='40' description='PV1_40 Bed Status' max_length='1' required='B' ifrepeating='0'/>
    <SegmentSubStructure piece='41' description='PV1_41 Account Status' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='42' description='PV1_42 Pending Location' max_length='80' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='43' description='PV1_43 Prior Temporary Location' max_length='80' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='44' description='PV1_44 Admit Date/Time' max_length='26' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='45' description='PV1_45 Discharge Date/Time' max_length='26' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='46' description='PV1_46 Current Patient Balance' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='47' description='PV1_47 Total Charges' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='48' description='PV1_48 Total Adjustments' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='49' description='PV1_49 Total Payments' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='50' description='PV1_50 Alternate Visit ID' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='51' description='PV1_51 Visit Indicator' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='52' description='PV1_52 Other Healthcare Provider' symbol='*' max_length='60' required='O' ifrepeating='1'/>
</SegmentStructure>
<SegmentStructure name='QAK' description='Query Acknowledgment Segment'>
    <SegmentSubStructure piece='1' description='QAK_01 Query Tag' max_length='32' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='QAK_02 Query Response Status' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='QAK_03 Message Query Name' max_length='250' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='QAK_04 Hit Count' max_length='10' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='QAK_05 This payload' max_length='10' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='QAK_06 Hits remaining' max_length='10' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='QPD' description='Query Definition Segment'>
    <SegmentSubStructure piece='1' description='QPD_01 Message Query Name' max_length='250' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='QPD_02 Query Tag' max_length='32' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='QPD_03 Person Identifier' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='QPD_04 Domain' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='QPD_05 Non Utilise' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='QPD_06 Non Utilise' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='QPD_07 Non Utilise' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='QPD_08 What Domains Returned' max_length='99' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='RCP' description='RCP Segment'>
    <SegmentSubStructure piece='1' description='RCP_01 Query Priority' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='RCP_02 Quantity Limited Request' max_length='40' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='RI' description='Retour Permission'>
    <SegmentSubStructure piece='1' description='RI_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='RI_02 Code Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='RI_03 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='RI_04 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='RI_05 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='RI_06 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='RI_07 Date Heure Debut Permission' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='RI_08 Date Heure Retour' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='RI_09 Code US' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='RI_10 Code UF' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='RI_11 Code Medecin Responsable' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='RI_12 Supplement Chambre Seule' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='RI_13 Chambre' max_length='5' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='RI_14 Lit' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='RI_15 Acte Prive' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='RI_16 Transcode Medecin' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='RI_17 Type Admission' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='RI_18 Transcode US' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='RI_19 Indicateur UF Hebergee' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='RI_20 Indicateur Dernier Mouvement' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='RI_21 Nom Usuel' datatype='CCOM_Nom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='RI_22 Prenom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='RI_23 Nom De Naissance' datatype='CCOM_Nom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='RI_24 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='RI_25 Date De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='RI_26 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='RI_27 Mode Permission' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='RI_28 From WebService' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='29' description='RI_29 Code Etablissement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='30' description='RI_30 Type Depart Long Sejour' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='31' description='RI_31 WebService App' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='RSS' description='PMSI CONSORE - RSS'>
    <SegmentSubStructure piece='1' description='RSS_01 Numero RSS' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='RUM' description='PMSI CONSORE - RUM'>
    <SegmentSubStructure piece='1' description='RUM_01 Code UM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='RUM_02 Date Entree' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='RUM_03 Mode Entree' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='RUM_04 Provenance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='RUM_05 Date Sortie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='RUM_06 Mode Sortie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='RUM_07 Destination' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='RUM_08 Nombre Seances' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='RUM_09 Type Machine' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='SD' description='Départ Permission'>
    <SegmentSubStructure piece='1' description='SD_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='SD_02 Code Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='SD_03 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='SD_04 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='SD_05 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='SD_06 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='SD_07 Date Heure Debut Permission' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='SD_08 Date Heure Prevue Retour' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='SD_09 Motif Permission' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='SD_10 Type Admission' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='SD_11 Code UF' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='SD_12 Code US' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='SD_13 Transcode US' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='SD_14 Indicateur UF Hebergee' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='SD_15 Chambre' max_length='5' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='SD_16 Lit' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='SD_17 Mode Permission' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='SD_18 Indicateur Dernier Mouvement' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='SD_19 Nom Usuel' datatype='CCOM_Nom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='SD_20 Prenom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='SD_21 Nom De Naissance' datatype='CCOM_Nom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='SD_22 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='SD_23 Date De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='SD_24 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='SD_25 From WebService' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='SD_26 Code Etablissement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='SD_27 Type Depart Long Sejour' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='SD_28 WebService App' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='SI' description='Recueil PMSI (Patient)'>
    <SegmentSubStructure piece='1' description='SI_01 IPP' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='SI_02 Numero Sejour' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='SI2' description='Recueil PMSI (RSS)'>
    <SegmentSubStructure piece='1' description='SI2_01 Identifiant Unique' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='SI2_02 Date Debut' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='SI2_03 Date Fin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='SI2_04 CMD' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='SI2_05 GHM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='SI2_06 Numero GHS' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='SI2_07 Code Retour Groupage' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='SI2_08 Confirmation Codage' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='SI3' description='Recueil PMSI (RUM)'>
    <SegmentSubStructure piece='1' description='SI3_01 Mode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='SI3_02 Identifiant RUM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='SI3_03 Code UM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='SI3_04 Date Entree UM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='SI3_05 Date Sortie UM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='SI3_06 Mode Entree UM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='SI3_07 Code PMSI Provenance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='SI3_08 Mode Sortie UM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='SI3_09 Code PMSI Destination' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='SI3_10 Type Autorisation Lit Dedie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='SI3_11 Poids NN Entree UM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='SI3_12 Age Gestationnel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='SI3_13 Date Dernières Règles' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='SI3_14 Nombre Seances' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='SI3_15 IGS2' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='SI3_16 Radiotherapie - Type RSS' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='SI3_17 Radiotherapie - Type Machine' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='SI3_18 Radiotherapie - Dosimetrie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='SI3_19 Numero Inovation' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='SI4' description='Recueil PMSI (Diagnostic)'>
    <SegmentSubStructure piece='1' description='SI4_01 Identifiant RUM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='SI4_02 Code CIM10' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='SI4_03 Type Diagnostic' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='SU' description='Sortie des Urgences'>
    <SegmentSubStructure piece='1' description='SU_01 Mode' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='SU_02 Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='SU_03 IPP Interne' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='SU_04 Numero Episode Interne' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='SU_05 IPP' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='SU_06 Numero Episode' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='SU_07 Nom Usuel' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='SU_08 Prenom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='SU_09 Nom De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='SU_10 Date De Naissance' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='SU_11 Code Sexe' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='SU_12 Date Heure Decision Medicale' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='SU_13 Code Decision Medicale' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='SU_14 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='SU_15 Date Heure Episode' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='SU_16 Code US' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='SU_17 Code UF' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='SU_18 Type Decision Medicale' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='SU_19 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='SU_20 From WebService' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='SU_21 WebService App' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='TL' description='Téléphonie'>
    <SegmentSubStructure piece='1' description='TL_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='TL_02 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='TL_03 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='TL_04 Nom Usuel' max_length='35' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='TL_05 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='TL_06 Code US' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='TL_07 Code UF' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='TL_08 Chambre' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='TL_09 Lit' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='TL_10 Type De Ligne' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='TL_11 Credit Verse' max_length='9' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='TL_12 Numero SDA' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='TL_13 Code Secret' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='TL_14 Statut De La Ligne' max_length='1' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='TR' description='Mutation'>
    <SegmentSubStructure piece='1' description='TR_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='TR_02 Code Hopital' datatype='CCOM_Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='TR_03 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='TR_04 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='TR_05 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='TR_06 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='TR_07 Date Heure Mutation' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='TR_08 Date Heure Mutation Precedente' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='TR_09 Code US' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='TR_10 Chambre' max_length='5' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='TR_11 Telephone' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='TR_12 Supplement Chambre' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='TR_13 Code UF' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='TR_14 Lit' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='TR_15 Medecin Responsable' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='TR_16 Transcode US' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='TR_17 Type Mutation' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='TR_18 Indicateur Acte Prive' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='TR_19 Transcode Medecin Responsable' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='TR_20 Type Admission' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='TR_21 Code UF Precedente' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='TR_22 Indicateur UF Hebergee' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='TR_23 Code US Precedente' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='TR_24 Indicateur UF Precedente Hebergee' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='TR_25 Mode Placement PSY' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='TR_26 Indicateur Dernier Mouvement' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='TR_27 Nom Usuel' datatype='CCOM_Nom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='TR_28 Prenom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='29' description='TR_29 Nom De Naissance' datatype='CCOM_Nom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='30' description='TR_30 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='31' description='TR_31 Date De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='32' description='TR_32 Indicateur Venue Demi Journee' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='33' description='TR_33 Chambre Precedente' max_length='5' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='34' description='TR_34 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='35' description='TR_35 From WebService' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='36' description='TR_36 WebService App' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='37' description='TR_37 Confidentialite Medicale' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='UC' description='Unité de consultation'>
    <SegmentSubStructure piece='1' description='UC_01 Mode' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='UC_02 Code' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='UC_03 Description' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='UC_04 Flag Supprime' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='UC_05 Code Etablissement' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='UC_06 UF par Defaut' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='UC_07 Type UC' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='UC_08 UF Rattachees' datatype='CCOM_UF' symbol='*' max_length='99' required='O' ifrepeating='1'/>
</SegmentStructure>
<SegmentStructure name='UF' description='Unite fonctionnelle'>
    <SegmentSubStructure piece='1' description='UF_01 Mode' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='UF_02 Code' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='UF_03 Description' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='UF_04 Flag Actif' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='UF_05 Flag Supprime' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='UF_06 Type Episode' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='UF_07 Type PMSI' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='UF_08 Code Service' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='UF_09 Code Departement' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='UF_10 Lettre Budgetaire' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='UF_11 Code Etablissement' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='UF_12 Code MedecinResponsable' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='UF_13 Correspondants' symbol='+' max_length='999' required='O' ifrepeating='1'/>
</SegmentStructure>
<SegmentStructure name='UR' description='Enregistrement Urgences'>
    <SegmentSubStructure piece='1' description='UR_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='UR_02 IPP Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='UR_03 IPP' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='UR_04 Nom Usuel' datatype='CCOM_Nom' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='UR_05 Prenom' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='UR_06 Qualite' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='UR_07 Nom De Naissance' datatype='CCOM_Nom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='UR_08 Localite De Naissance' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='UR_09 Date De Naissance' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='UR_10 Sexe' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='UR_11 No Rue Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='UR_12 Code Postal Adresse' max_length='8' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='UR2' description='Enregistrement Urgences'>
    <SegmentSubStructure piece='1' description='UR2_01 Localite Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='UR2_02 Telephone Domicile' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='UR2_03 Nationalite' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='UR2_04 Pays De Naissance' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='UR2_05 Departement De Naissance' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='UR2_06 Complement Adresse' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='UR2_07 Pays Adresse' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='UR2_08 Telephone Professionnel' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='UR2_09 Telephone Portable' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='UR2_10 Identifiant Unique De Mouvement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='UR2_11 Informations Identite' datatype='CCOM_InfosIdentite' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='UR2_12 Numero SS Dernier Episode' max_length='15' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='UR2_13 Employeur' datatype='CCOM_Employeur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='UR2_14 Confidentialite Medicale' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='UR2_15 From WebService' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='UR2_16 WebService App' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='UR3' description='Enregistrement Urgences'>
    <SegmentSubStructure piece='1' description='UR3_01 Code Hopital' datatype='CCOM_Hopital' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='UR3_02 Numero Episode Interne' max_length='9' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='UR3_03 Numero Episode' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='UR3_04 Numero Episode Precedent' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='UR3_05 Code US' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='UR3_06 Code UF' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='UR3_07 Date Heure Enregistrement' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='UR3_08 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='UR3_09 Situation Familiale' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='UR3_10 Nombre Enfants' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='UR3_11 Categorie Socioprofessionnelle' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='UR3_12 Profession' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='UR3_13 Transcode US' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='UR3_14 Telephone Adresse Temporaire' max_length='20' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='UR3_15 Medecin Responsable' datatype='CCOM_Medecin' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='UR3_16 Indicateur Dernier Mouvement' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='UR3_17 Medecin Referent' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='UR3_18 Autres Prenoms' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='UR3_19 Mode Entree' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='UR3_20 Utilisateur' datatype='CCOM_Utilisateur' max_length='20' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='UR3_21 Code Parcours De Soins' max_length='3' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='UR3_22 Episode Confidentiel' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='UR3_23 Mode Transport' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='UR3_24 Informations Accident' datatype='CCOM_Accident' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='UR3_25 Ambulance' datatype='CCOM_Ambulance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='UR3_26 Etablissement Origine' datatype='CCOM_Etab' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='UR4' description='Enregistrement Urgences'>
    <SegmentSubStructure piece='1' description='UR4_01 Adresse Temporaire' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='UR4_02 Complement Adresse Temporaire' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='UR4_03 Pays Adresse Temporaire' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='UR4_04 Code Postal Adresse Temporaire' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='UR4_05 Localite Adresse Temporaire' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='UR4_06 Nom Du Pere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='UR4_07 Prenom Du Pere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='UR4_08 Pere Decede' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='UR4_09 Nom De La Mere' max_length='35' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='UR5' description='Enregistrement Urgences'>
    <SegmentSubStructure piece='1' description='UR5_01 Prenom De La Mere' max_length='35' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='UR5_02 Mere Decedee' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='UR5_03 Medecin Traitant' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='UR5_04 Code Medecin Correspondant 1' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='UR5_05 Code Medecin Correspondant 2' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='UR5_06 Code Medecin Correspondant 3' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='UR5_07 Code Medecin Correspondant 4' max_length='7' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='UR5_08 Code Medecin Correspondant 5' max_length='7' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='US' description='Unite de soins'>
    <SegmentSubStructure piece='1' description='US_01 Mode' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='US_02 Code' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='US_03 Description' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='US_04 Flag Supprime' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='US_05 Code Etablissement' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='US_06 UF par Defaut' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='US_07 Nombre de Lits' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='US_08 UF Rattachees' datatype='CCOM_UF' max_length='99' required='O' ifrepeating='1'/>
</SegmentStructure>
<SegmentStructure name='XD2' description='Document Bureautique - Demographie'>
    <SegmentSubStructure piece='1' description='XD2_01 Qualite' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='XD2_02 Departement De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='XD2_03 Localite De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='XD2_04 Pays De Naissance' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='XD2_05 Adresse Num Rue' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='XD2_06 Adresse Complement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='XD2_07 Adresse Pays' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='XD2_08 Adresse Code Postal' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='XD2_09 Adresse Localite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='XD2_10 Numero Telephone' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='XD2_11 Numero Telephone Professionnel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='XD2_12 Numero Telephone Mobile' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='XD2_13 Nationalite' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='XD2_14 Situation Famille' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='XD2_15 Nombre Enfants' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='XD2_16 Categorie Professionnelle' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='XD2_17 Profession' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='XD2_18 Indicateur Identite Provisoire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='XD2_19 Commentaire' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='XD3' description='Document Bureautique - Sejour'>
    <SegmentSubStructure piece='1' description='XD3_01 Numero Episode' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='XD3_02 Date Heure Debut' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='XD3_03 Date Heure Fin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='XD3_04 Centre Hospitalier' datatype='CCOM_Code' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='XD3_05 Etablissement' datatype='CCOM_Code' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='XD3_06 Unite De Soins' datatype='CCOM_Code' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='XD3_07 Unite Fonctionnelle' datatype='CCOM_DMP_UF' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='XD3_08 Medecin Responsable' datatype='CCOM_DMP_Medecin' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='XD3_09 Statut Episode' datatype='CCOM_Code' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='XD3_10 Chambre' datatype='CCOM_DMP_Chambre' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='XD3_11 Indicateur Prive ?' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='XD3_12 Infos Entree' datatype='CCOM_DMP_InfosEntree' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='XD3_13 Infos Sortie' datatype='CCOM_DMP_InfosSortie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='XD3_14 Infos Urgences' datatype='CCOM_DMP_InfosUrgence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='XD3_15 Date Heure Dernier Mouvement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='XD3_16 UF Admission' datatype='CCOM_DMP_UF' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='XD3_17 Diagnostic Principal Du Dernier RUM' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='XD4' description='Document Bureautique - Document'>
    <SegmentSubStructure piece='1' description='XD4_01 Code Action' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='XD4_02 Identifiant Externe Du Document' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='XD4_03 Identifiant De La Source' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='XD4_04 Identifiant Unique De Document' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='XD4_05 Organisation Ou Groupe' datatype='CCOM_Code' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='XD4_06 Auteur' datatype='CCOM_DMP_Medecin' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='XD4_07 Date Heure Creation' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='XD4_08 Date Heure Intervention' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='XD4_09 Specialite' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='XD4_10 Caractere Sensible' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='XD4_11 Type De Document' datatype='CCOM_Code' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='XD4_12 Soustype' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='XD4_13 Nom Du Document Titre' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='XD4_14 Format Du Document' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='XD4_15 Statut Du Document' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='XD4_16 Motif' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='XD4_17 Acte Principal' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='XD4_18 URL Chemin Et Nom De Stockage Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='XD4_19 Nom De Stockage Interne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='XD4_20 Code Langue' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='XD4_21 Type MIME Du Fichier' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='XD4_22 Type Organisation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='XD4_23 Cadre Exercice' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='XD4_24 Type URL' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='XD4_25 Date Heure Validation Document' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='XD4_26 Episode Précédent' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='XD4_27 Contexte De Production' datatype='CCOM_BUR_Contexte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='XD4_28 Lettre-Type' datatype='CCOM_BUR_LettreType' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>

<DataType name='CCOM_Accident' description='Informations Accident'>
    <DataSubType piece='1' description='Date'/>
    <DataSubType piece='2' description='Reference'/>
    <DataSubType piece='3' description='Code'/>
    <DataSubType piece='4' description='Libelle'/>
</DataType>
<DataType name='CCOM_Adresse' description='Adresse'>
    <DataSubType piece='1' description='Num Rue'/>
    <DataSubType piece='2' description='Complement'/>
    <DataSubType piece='3' description='Pays'/>
    <DataSubType piece='4' description='Code Postal'/>
    <DataSubType piece='5' description='Ville'/>
    <DataSubType piece='6' description='Telephone'/>
</DataType>
<DataType name='CCOM_Ambulance' description='Ambulance'>
    <DataSubType piece='1' description='Code'/>
    <DataSubType piece='2' description='Description'/>
    <DataSubType piece='3' description='Adresse1'/>
    <DataSubType piece='4' description='Adresse2'/>
    <DataSubType piece='5' description='Code Postal'/>
    <DataSubType piece='6' description='Ville'/>
    <DataSubType piece='7' description='Pays'/>
    <DataSubType piece='8' description='Telephone'/>
    <DataSubType piece='9' description='Fax'/>
</DataType>
<DataType name='CCOM_BUR_Contexte' description='Contexte De Production'>
    <DataSubType piece='1' description='Domaine'/>
    <DataSubType piece='2' description='Module'/>
    <DataSubType piece='3' description='Source'/>
</DataType>
<DataType name='CCOM_BUR_Examen' description='Examen'>
    <DataSubType piece='1' description='Code'/>
    <DataSubType piece='2' description='Libelle'/>
    <DataSubType piece='3' description='Code Discipline'/>
    <DataSubType piece='4' description='Libelle Discipline'/>
</DataType>
<DataType name='CCOM_BUR_LettreType' description='Lettre-Type'>
    <DataSubType piece='1' description='Nom'/>
    <DataSubType piece='2' description='Arborescence Stockage'/>
</DataType>
<DataType name='CCOM_Code' description='Donnee Codee'>
    <DataSubType piece='1' description='Code'/>
    <DataSubType piece='2' description='Libelle'/>
    <DataSubType piece='3' description='Table'/>
</DataType>
<DataType name='CCOM_DMP_Chambre' description='Chambre'>
    <DataSubType piece='1' description='Chambre'/>
    <DataSubType piece='2' description='Lit'/>
    <DataSubType piece='3' description='Chambre Particuliere'/>
</DataType>
<DataType name='CCOM_DMP_InfosEntree' description='Infos Entree'>
    <DataSubType piece='1' description='Code Mode Entree'/>
    <DataSubType piece='2' description='Libelle Mode Entree'/>
    <DataSubType piece='3' description='Code Etablissement'/>
    <DataSubType piece='4' description='Libelle Etablissement'/>
    <DataSubType piece='5' description='Date Hospitalisation Precedente'/>
</DataType>
<DataType name='CCOM_DMP_InfosSortie' description='Infos Sortie'>
    <DataSubType piece='1' description='Code Mode Sortie'/>
    <DataSubType piece='2' description='Libelle Mode Sortie'/>
    <DataSubType piece='3' description='Code Etablissement'/>
    <DataSubType piece='4' description='Libelle Etablissement'/>
</DataType>
<DataType name='CCOM_DMP_InfosUrgence' description='Infos Urgence'>
    <DataSubType piece='1' description='Date Heure Admission Urgence'/>
    <DataSubType piece='2' description='Date Heure Decision Medicale'/>
    <DataSubType piece='3' description='Code Decision Medicale'/>
    <DataSubType piece='4' description='Libelle Decision Medicale'/>
</DataType>
<DataType name='CCOM_DMP_Medecin' description='Medecin'>
    <DataSubType piece='1' description='Code Clinicom'/>
    <DataSubType piece='2' description='Nom'/>
    <DataSubType piece='3' description='Prenom'/>
    <DataSubType piece='4' description='Code ADELI'/>
    <DataSubType piece='5' description='Titre'/>
    <DataSubType piece='6' description='Numero RPPS'/>
</DataType>
<DataType name='CCOM_DMP_UF' description='Unite Fonctionnelle'>
    <DataSubType piece='1' description='Code'/>
    <DataSubType piece='2' description='Libelle'/>
    <DataSubType piece='3' description='Code Service'/>
    <DataSubType piece='4' description='Libelle Service'/>
</DataType>
<DataType name='CCOM_Employeur' description='Employeur'>
    <DataSubType piece='1' description='Nom'/>
    <DataSubType piece='2' description='Adresse 1'/>
    <DataSubType piece='3' description='Adresse 2'/>
    <DataSubType piece='4' description='Code Postal'/>
    <DataSubType piece='5' description='Localite'/>
    <DataSubType piece='6' description='Telephone'/>
    <DataSubType piece='7' description='Code Pays'/>
</DataType>
<DataType name='CCOM_Etab' description='Etablissement Origine Ou Destination'>
    <DataSubType piece='1' description='Code Etablissement'/>
    <DataSubType piece='2' description='Proposition MT PMSI'/>
</DataType>
<DataType name='CCOM_HPRIM_Adresse' description='AdresseDetaillee'>
    <DataSubType piece='1' description='Ligne1'/>
    <DataSubType piece='2' description='Ligne2'/>
    <DataSubType piece='3' description='Ville'/>
    <DataSubType piece='4' description='Code Pays'/>
    <DataSubType piece='5' description='Code Postal'/>
</DataType>
<DataType name='CCOM_HPRIM_Dates' description='DatesEpisode'>
    <DataSubType piece='1' description='Date Entree'/>
    <DataSubType piece='2' description='Date Mvt Ou Sortie'/>
</DataType>
<DataType name='CCOM_HPRIM_Localisation' description='Localisation'>
    <DataSubType piece='1' description='UF Ou Transacode US'/>
    <DataSubType piece='2' description='Chambre'/>
    <DataSubType piece='3' description='Non Utilise'/>
</DataType>
<DataType name='CCOM_HPRIM_Nom' description='Nom Detaille'>
    <DataSubType piece='1' description='Nom'/>
    <DataSubType piece='2' description='Prenom'/>
    <DataSubType piece='3' description='Autres Prenoms'/>
    <DataSubType piece='4' description='Non Utilise'/>
    <DataSubType piece='5' description='Civilite'/>
    <DataSubType piece='6' description='Vide'/>
</DataType>
<DataType name='CCOM_HPRIM_UF' description='UF Detaillee'>
    <DataSubType piece='1' description='Indicateur UF Hebergee'/>
    <DataSubType piece='2' description='Code US'/>
    <DataSubType piece='3' description='Transcode US'/>
    <DataSubType piece='4' description='Code UF'/>
</DataType>
<DataType name='CCOM_Hopital' description='Hopital'>
    <DataSubType piece='1' description='Code Hopital'/>
    <DataSubType piece='2' description='Code Etablissement'/>
</DataType>
<DataType name='CCOM_ID' description='Identifiant'>
    <DataSubType piece='1' description='Valeur'/>
    <DataSubType piece='2' description='Type'/>
    <DataSubType piece='3' description='DateObtention'/>
</DataType>
<DataType name='CCOM_INSI' description='INSi'>
    <DataSubType piece='1' description='NirIndividu'/>
    <DataSubType piece='2' description='NomPatronymique'/>
    <DataSubType piece='3' description='NomUsuel'/>
    <DataSubType piece='4' description='Prenom'/>
    <DataSubType piece='5' description='DateNaissance'/>
</DataType>
<DataType name='CCOM_IPP_Ext' description='IPP Externe'>
    <DataSubType piece='1' description='IPP'/>
    <DataSubType piece='2' description='Origine'/>
</DataType>
<DataType name='CCOM_IdRDVPreEpisode' description='Identifiants RDV Pre Episode'>
    <DataSubType piece='1' description='Identifiant'/>
    <DataSubType piece='2' description='Date'/>
</DataType>
<DataType name='CCOM_IdpAdmin' description='Administrateur'>
    <DataSubType piece='1' description='Identifiant'/>
    <DataSubType piece='2' description='Nom'/>
    <DataSubType piece='3' description='Prenom'/>
</DataType>
<DataType name='CCOM_InfosIdentite' description='Informations Identite'>
    <DataSubType piece='1' description='Indicateur Identite Provisoire'/>
    <DataSubType piece='2' description='Piece Presentee' datatype='CCOM_Code'/>
    <DataSubType piece='3' description='Date'/>
    <DataSubType piece='4' description='Indicateur Identite Validee'/>
</DataType>
<DataType name='CCOM_Medecin' description='Medecin'>
    <DataSubType piece='1' description='Code Clinicom'/>
    <DataSubType piece='2' description='Nom'/>
    <DataSubType piece='3' description='Prenom'/>
    <DataSubType piece='4' description='Code ADELI'/>
    <DataSubType piece='5' description='Qualite'/>
    <DataSubType piece='6' description='Titre'/>
    <DataSubType piece='7' description='No RPPS'/>
</DataType>
<DataType name='CCOM_Nom' description='Nom Patient'>
    <DataSubType piece='1' description='Nom'/>
    <DataSubType piece='2' description='Name Type Code'/>
</DataType>
<DataType name='CCOM_ORM_CC' description='Champs Complementaires'>
    <DataSubType piece='1' description='CC1'/>
    <DataSubType piece='2' description='CC2'/>
    <DataSubType piece='3' description='CC3'/>
    <DataSubType piece='4' description='CC4'/>
    <DataSubType piece='5' description='CC5'/>
    <DataSubType piece='6' description='CC6'/>
    <DataSubType piece='7' description='CC7'/>
    <DataSubType piece='8' description='CC8'/>
    <DataSubType piece='9' description='CC9'/>
    <DataSubType piece='10' description='CC10'/>
    <DataSubType piece='11' description='CC11'/>
    <DataSubType piece='12' description='CC12'/>
    <DataSubType piece='13' description='CC13'/>
    <DataSubType piece='14' description='CC14'/>
    <DataSubType piece='15' description='CC15'/>
    <DataSubType piece='16' description='CC16'/>
    <DataSubType piece='17' description='CC17'/>
    <DataSubType piece='18' description='CC18'/>
    <DataSubType piece='19' description='CC19'/>
    <DataSubType piece='20' description='Commentaire General'/>
    <DataSubType piece='21' description='SEST1'/>
    <DataSubType piece='22' description='SEST2'/>
    <DataSubType piece='23' description='SEST3'/>
    <DataSubType piece='24' description='SEST4'/>
    <DataSubType piece='25' description='SEST5'/>
    <DataSubType piece='26' description='SEST6'/>
    <DataSubType piece='27' description='SEST7'/>
    <DataSubType piece='28' description='SEST8'/>
    <DataSubType piece='29' description='SEST9'/>
    <DataSubType piece='30' description='SEST10'/>
</DataType>
<DataType name='CCOM_ORM_Prestation' description='Prestation'>
    <DataSubType piece='1' description='Code'/>
    <DataSubType piece='2' description='Libelle'/>
    <DataSubType piece='3' description='Champs Specifiques' datatype='CCOM_ORM_SVS'/>
    <DataSubType piece='4' description='Fin'/>
    <DataSubType piece='5' description='non Utilise'/>
</DataType>
<DataType name='CCOM_ORM_SVS' description='Champs Specifiques'>
    <DataSubType piece='1' description='CC0'/>
    <DataSubType piece='2' description='CC1'/>
    <DataSubType piece='3' description='CC2'/>
    <DataSubType piece='4' description='CC3'/>
    <DataSubType piece='5' description='CC4'/>
    <DataSubType piece='6' description='CC5'/>
    <DataSubType piece='7' description='CC6'/>
    <DataSubType piece='8' description='CC7'/>
    <DataSubType piece='9' description='CC8'/>
    <DataSubType piece='10' description='CC9'/>
    <DataSubType piece='11' description='CC10'/>
    <DataSubType piece='12' description='CC11'/>
    <DataSubType piece='13' description='CC12'/>
    <DataSubType piece='14' description='CC13'/>
    <DataSubType piece='15' description='CC14'/>
    <DataSubType piece='16' description='CC15'/>
    <DataSubType piece='17' description='CC16'/>
    <DataSubType piece='18' description='CC17'/>
    <DataSubType piece='19' description='CC18'/>
    <DataSubType piece='20' description='CC19'/>
    <DataSubType piece='21' description='CC20'/>
</DataType>
<DataType name='CCOM_Profession' description='Profession'>
    <DataSubType piece='1' description='Categorie Socio Prof'/>
    <DataSubType piece='2' description='Profession'/>
</DataType>
<DataType name='CCOM_Ressource' description='Ressource Agenda'>
    <DataSubType piece='1' description='Type'/>
    <DataSubType piece='2' description='Code'/>
    <DataSubType piece='3' description='Libelle'/>
</DataType>
<DataType name='CCOM_TypeCRAdmin' description='Type CR Administration'>
    <DataSubType piece='1' description='Action'/>
    <DataSubType piece='2' description='Date Heure Début Planification'/>
</DataType>
<DataType name='CCOM_UF' description='Unite Fonctionnelle'>
    <DataSubType piece='1' description='Code'/>
    <DataSubType piece='2' description='Indicateur UF Hebergee'/>
</DataType>
<DataType name='CCOM_Utilisateur' description='Utilisateur'>
    <DataSubType piece='1' description='Code Acces'/>
    <DataSubType piece='2' description='Username'/>
    <DataSubType piece='3' description='Nom'/>
</DataType>
<DataType name='CCOM_Valeur' description='ValeurEtUnite'>
    <DataSubType piece='1' description='Valeur'/>
    <DataSubType piece='2' description='Unite'/>
</DataType>
<DataType name='ISC_VERSION' description='$Id: //legacy/fr_products/CCOMTCC/REL/schema/hl7/Clinicom.xml#17 $'>
</DataType>

</Category>
</Document>

<Document name="ClinicomReceiver.HL7">
<Category name="ClinicomReceiver">

<MessageGroup name='ADT' description='Identites Mouvements'/>
<MessageGroup name='ALR' description='Alertes Clinipharm'/>
<MessageGroup name='CAP' description='Compte Rendu Analyse Pharmaceutique'/>
<MessageGroup name='DIG' description='Diagnostics'/>
<MessageGroup name='FA2' description='Actes NGAP'/>
<MessageGroup name='FIM' description='Indicateur Presence Images'/>
<MessageGroup name='HEM' description='Indicateur Hemovigilance'/>
<MessageGroup name='LIP' description='Livret Pharmaceutique'/>
<MessageGroup name='MCA' description='Actes CCAM/NGAP'/>
<MessageGroup name='MSI' description='Recueuil PMSI'/>
<MessageGroup name='OML' description='Demande labo'/>
<MessageGroup name='ORU' description='Resultats'/>
<MessageGroup name='PDQ' description='Patient Demographics Query'/>
<MessageGroup name='QPA' description='Pre Admission QPlanner'/>
<MessageGroup name='RC1' description='Retrocessions Facturation'/>
<MessageGroup name='SIU' description='RDV Agenda'/>
<MessageGroup name='TEL' description='Telephonie'/>
<MessageGroup name='VEN' description='Venues'/>

<MessageEvent name='ADT' description='Identites Mouvements'/>
<MessageEvent name='ALR' description='Alertes Clinipharm'/>
<MessageEvent name='CAP' description='Compte Rendu Analyse Pharmaceutique'/>
<MessageEvent name='DIG' description='Diagnostics'/>
<MessageEvent name='FA2' description='Actes NGAP'/>
<MessageEvent name='FIM' description='Indicateur Presence Images'/>
<MessageEvent name='HEM' description='Indicateur Hemovigilance'/>
<MessageEvent name='LIP' description='Livret Pharmaceutique'/>
<MessageEvent name='MCA' description='Actes CCAM/NGAP'/>
<MessageEvent name='MSI' description='Recueuil PMSI'/>
<MessageEvent name='OML' description='Demande labo'/>
<MessageEvent name='ORU' description='Resultats'/>
<MessageEvent name='PDQ' description='Patient Demographics Query'/>
<MessageEvent name='QPA' description='Pre Admission QPlanner'/>
<MessageEvent name='RC1' description='Retrocessions Facturation'/>
<MessageEvent name='SIU' description='RDV Agenda'/>
<MessageEvent name='TEL' description='Telephonie'/>
<MessageEvent name='VEN' description='Venues'/>

<MessageType name='ADT' structure='ADT'/>
<MessageType name='ALR' structure='ALR'/>
<MessageType name='CAP' structure='CAP'/>
<MessageType name='DIG' structure='DIG'/>
<MessageType name='FA2' structure='FA2'/>
<MessageType name='FIM' structure='FIM'/>
<MessageType name='HEM' structure='HEM'/>
<MessageType name='LIP' structure='LIP'/>
<MessageType name='MCA' structure='MCA'/>
<MessageType name='MSI' structure='MSI'/>
<MessageType name='OML' structure='OML'/>
<MessageType name='ORU' structure='ORU'/>
<MessageType name='PDQ' structure='PDQ'/>
<MessageType name='QPA' structure='QPA'/>
<MessageType name='RC1' structure='RC1'/>
<MessageType name='SIU' structure='SIU'/>
<MessageType name='TEL' structure='TEL'/>
<MessageType name='VEN' structure='VEN'/>

<MessageStructure name='ADT' definition='MSH~ADT~PAT~[~EPI~]~{~[~PAP~]~}' description='Identites Mouvements'/>
<MessageStructure name='ALR' definition='MSH~AL1~{~ALR~}' description='Alertes Clinipharm'/>
<MessageStructure name='CAP' definition='MSH~CAP~CAP2~CAP3~{~CAP4~{~[~CAP5~]~}~{~[~CAP6~]~}~{~[~CAP7~]~}~}' description='Compte Rendu Analyse Pharmaceutique'/>
<MessageStructure name='DIG' definition='MSH~DIG~{~DID~}' description='Diagnostics'/>
<MessageStructure name='FA2' definition='MSH~FAC~{~ACT~}' description='Actes NGAP'/>
<MessageStructure name='FIM' definition='MSH~{~FIM~}' description='Indicateur Presence Images'/>
<MessageStructure name='HEM' definition='MSH~HEM' description='Indicateur Hemovigilance'/>
<MessageStructure name='LIP' definition='MSH~LIP~{~MED~}' description='Livret Pharmaceutique'/>
<MessageStructure name='MCA' definition='MSH~GEN~{~[~DET~]~}~{~[~CCA~]~}~{~[~NGA~]~}' description='Actes CCAM/NGAP'/>
<MessageStructure name='MSI' definition='MSH~MSI~RSS~{~RUM~{~[~DIA~]~}~}~{~[~REE~]~}' description='Recueil PMSI'/>
<MessageStructure name='OML' definition='MSH~P~{~OBR~}' description='Resultats'/>
<MessageStructure name='ORU' definition='MSH~P~{~OBR~[~{~OBX~[~{~C~}~]~}~]~}' description='Resultats'/>
<MessageStructure name='PDQ' definition='{~MSH~}~QPD~RCP' description='Patient Demographics Query'/>
<MessageStructure name='QPA' definition='MSH~QPA' description='Pre Admission QPlanner'/>
<MessageStructure name='RC1' definition='MSH~RC1~{~RC2~}' description='Retrocessions Facturation'/>
<MessageStructure name='SIU' definition='MSH~SIU' description='RDV Agenda'/>
<MessageStructure name='TEL' definition='MSH~TEL' description='Telephonie'/>
<MessageStructure name='VEN' definition='MSH~VEN' description='Venues'/>

<SegmentStructure name='ACT' description='Acte'>
    <SegmentSubStructure piece='1' description='ACT_01 Code NGAP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='ACT_02 Coefficient NGAP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='ACT_03 Nombre Actes NGAP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='ACT_04 Indicateur Acte Prive' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='ACT_05 Indicateur Acte Gratuit' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='ACT_06 Code CDAM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='ACT_07 Table De Reference' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='ACT_08 Coefficient Multiplicateur CDAM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='ACT_09 Nombre De Jours' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='ACT_10 Pourcentage De Facturation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='ACT_11 Tarif' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='ACT_12 Taux De PEC' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='ACT_13 Code NABM' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ADT' description='Patient Entete'>
    <SegmentSubStructure piece='1' description='ADT_01 Identifiant Evenement' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='ADT_02 Identifiant Source' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='ADT_03 Identifiant Cible' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='ADT_04 Date Heure Message' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='ADT_05 Environnement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='ADT_06 Date Heure Evenement' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='ADT_07 Indicateur Identifiant Temporaire Du Patient' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='ADT_08 Mode Gestion IPP Ext' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='AL1' description='Alerte Entete'>
    <SegmentSubStructure piece='1' description='AL1_01 Date Export' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='AL1_02 Code Application Emettrice' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='AL1_03 Code Utilisateur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='AL1_04 Nombre Alertes' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ALR' description='Alerte Detail'>
    <SegmentSubStructure piece='1' description='ALR_01 Code Action' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='ALR_02 Type Alerte' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='ALR_03 Identifiant Alerte' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='ALR_04 Type US' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='ALR_05 Code US' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='ALR_06 Libelle Alerte' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='ALR_07 Date Alerte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='ALR_08 Lien URL' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='C' description='Resultat Texte'>
    <SegmentSubStructure piece='1' description='C_01 Occurrence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='C_02 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='C_03 Texte' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CAP' description='Patient'>
    <SegmentSubStructure piece='1' description='CAP_01 IPP' max_length='255' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CAP_02 Nom Usuel' max_length='32' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CAP_03 Nom De Naissance' max_length='32' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CAP_04 Prenoms' max_length='32' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CAP_05 Date De Naissance' max_length='14' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CAP_06 Date Lunaire' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CAP_07 Sexe' max_length='16' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CAP2' description='Sejour'>
    <SegmentSubStructure piece='1' description='CAP2_01 Numero De Sejour' max_length='255' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CAP3' description='Compte rendu Analyse Pharmaceutique'>
    <SegmentSubStructure piece='1' description='CAP3_01 Date Heure Validation' max_length='14' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CAP3_02 Idp Pharmacien' max_length='1459' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CAP3_03 Commentaire' max_length='255' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CAP4' description='Element de Prescription'>
    <SegmentSubStructure piece='1' description='CAP4_01 Id Element De Prescription' max_length='255' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CAP4_02 Validation Pharmaceutique' max_length='16' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CAP4_03 Proposition Pharmaceutique' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CAP4_04 Voie Administration' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CAP4_05 Lieu Administration' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CAP4_06 Dispositifs Associes' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CAP4_07 Posologie' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='CAP4_08 Date Heure Debut Prescription' max_length='14' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='CAP4_09 Date Heure Fin Prescription' max_length='14' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='CAP4_10 Commentaire Pharmacien' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='CAP4_11 Indication' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='CAP4_12 Urgent' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='CAP4_13 Type Condition' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CAP5' description='Composant Prescrit'>
    <SegmentSubStructure piece='1' description='CAP5_01 Type De Composant' max_length='16' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CAP5_02 Code Composant' max_length='16' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CAP5_03 Libelle Composant' max_length='255' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CAP5_04 Quantite' datatype='CCOM_Valeur' max_length='32' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CAP5_05 Commentaire' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CAP5_06 Est Vehicule' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CAP5_07 Medicament MDS' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='CAP5_08 Medicament T2A' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='CAP5_09 Stupefiant' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='CAP5_10 Criteres De Tri' max_length='255' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='CAP5_11 Urgent' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='CAP5_12 Hors Livret' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='CAP5_13 Complement Distribution' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='CAP5_14 Unite De Distribution' max_length='16' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='CAP5_15 Nombre D Unite De Prise Par Contenu' max_length='255' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='CAP5_16 Est Divisible' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CAP6' description='Element de Posologie'>
    <SegmentSubStructure piece='1' description='CAP6_01 Frequence' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CAP6_02 Type Evenement Debut' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CAP6_03 Evenement Debut' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CAP6_04 Intervalle Temps Evenement Debut' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CAP6_05 Type Evenement Fin' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CAP6_06 Evenement Fin' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CAP6_07 Intervalle Temps Evenement Fin' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='CAP6_08 Duree' datatype='CCOM_Valeur' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='CAP6_09 Debit' datatype='CCOM_Valeur' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='CAP6_10 Quantite' datatype='CCOM_Valeur' max_length='32' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='CAP6_11 Type Evenement2 Debut' max_length='16' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='CAP6_12 Evenement2 Debut' max_length='255' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CAP7' description='Element lies'>
    <SegmentSubStructure piece='1' description='CAP7_01 Id Element Lie' max_length='255' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CAP7_02 Type Liaison' max_length='16' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='CCA' description='Acte CCAM'>
    <SegmentSubStructure piece='1' description='CCA_01 Occurrence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='CCA_02 Mode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='CCA_03 Identifiant Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='CCA_04 Code CCAM' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='CCA_05 Code Activite' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='CCA_06 Code Phase' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='CCA_07 Code Extension Documentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='CCA_08 Code Association' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='CCA_09 Code Remboursement Exceptionnel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='CCA_10 Nombre De Realisations Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='CCA_11 Code UF De Realisation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='CCA_12 Code Realisateur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='CCA_13 Modificateurs' symbol='+' max_length='999' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='14' description='CCA_14 Montant Des Honoraires' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='CCA_15 Indicateur Acte Prive' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='CCA_16 Indicateur Acte Gratuit' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='CCA_17 Taux De Prise En Charge Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='CCA_18 Indicateur Dispositif De Prevention' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='CCA_19 Indicateur Acte Ayant Motive PEC Secteur Operatoire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='CCA_20 Indicateur Forfait SEH' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='CCA_21 Indicateur Forfait FSD' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='CCA_22 Type De Machine En Radiotherapie Interface RUM' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='CCA_23 Type De Dosimetrie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='CCA_24 Nombre De Faisceaux Interface RUM' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='CCA_25 Numero De Dent' max_length='999' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='26' description='CCA_26 Code Extension PMSI' max_length='2' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DET' description='Detail Acte'>
    <SegmentSubStructure piece='1' description='DET_01 Occurrence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DET_02 CCAM Code Acte' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DET_03 CCAM Code Activite' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DET_04 CCAM Code Phase' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DET_05 CCAM Code Extension Documentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DET_06 CCAM Code Association' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DET_07 CCAM Code Remboursement Exceptionnel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DET_08 CCAM Nombre De Realisations Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DET_09 CCAM Code UF De Realisation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='DET_10 CCAM Code Realisateur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='DET_11 CCAM Modificateurs' symbol='+' max_length='999' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='12' description='DET_12 NGAP Lettre Cle' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='DET_13 NGAP Coefficient' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='DET_14 NGAP Nombre Actes' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='DET_15 NGAP Indicateur Acte Prive' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='DET_16 NGAP Indicateur Acte Gratuit' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='DET_17 NGAP Pourcentage De Facturation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='DET_18 NGAP Tarif Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='DET_19 NGAP Taux De Prise En Charge Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='DET_20 NGAP Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='DET_21 BLOC Indicateur Accouchement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='DET_22 BLOC Nombre Enfants' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='DET_23 BLOC Indicateur Consultation Anesthesie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='DET_24 BLOC Indicateur Amplificateur De Brillance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='DET_25 NABM Code Acte' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='DET_26 NABM Coefficient Multiplicateur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='DET_27 CCAM Montant Des Honoraires' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='DET_28 CCAM Indicateur Acte Prive' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='29' description='DET_29 CCAM Indicateur Acte Gratuit' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='30' description='DET_30 CCAM Taux De Prise En Charge Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='31' description='DET_31 CCAM Indicateur Dispositif De Prevention' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='32' description='DET_32 CCAM Indicateur Acte Ayant Motive La Prise En Charge En Secteur Operatoire' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DIA' description='Diagnostic du RUM'>
    <SegmentSubStructure piece='1' description='DIA_01 Identifiant RUM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DIA_02 Code CIM10' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DIA_03 Type Diagnostic' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DID' description='Diagnostics Detail'>
    <SegmentSubStructure piece='1' description='DID_01 Code Diagnostic' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DID_02 Table De Diagnostics' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DID_03 Type De Diagnostic Etablissement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DID_04 Type De Diagnostic' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DID_05 Issu du DPI' max_length='1' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='DIG' description='Diagnostics Entete'>
    <SegmentSubStructure piece='1' description='DIG_01 Mode' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='DIG_02 Identifiant Unique' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='DIG_03 IPP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='DIG_04 Numero De Sejour' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='DIG_05 Date Heure' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='DIG_06 UF De Realisation' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='DIG_07 UF De Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='DIG_08 Medecin Realisateur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='DIG_09 Code Acces Utilisateur Clinicom' max_length='3' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='DIG_10 Type De RSS A Alimenter En Radiotherapie' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='DIG_11 Type De Machine En Radiotherapie' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='DIG_12 Type De Dosimetrie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='DIG_13 Nombre De Faisceaux' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='DIG_14 Poids Nouveau-ne' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='DIG_15 Age Gestationnel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='DIG_16 Date Dernieres Regles' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='EPI' description='Patient Episode'>
    <SegmentSubStructure piece='1' description='EPI_01 Numero Episode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='EPI_02 Localisation' datatype='CCOM_ADT_Localisation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='EPI_03 Code UF' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='EPI_04 Medecin' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='EPI_05 Date Heure Entree Dans UF' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='EPI_06 Date Heure Depart Ou Retour' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='EPI_07 Localisation Temporaire' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='EPI_08 Numero Unique De Transfert' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='FAC' description='Acte Entete'>
    <SegmentSubStructure piece='1' description='FAC_01 Mode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='FAC_02 Identifiant Unique De Seance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='FAC_03 IPP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='FAC_04 Numero Episode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='FAC_05 Numero Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='FAC_06 Date Heure' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='FAC_07 UF Realisation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='FAC_08 UF Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='FAC_09 Module Producteur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='FAC_10 Identifiant Module Producteur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='FAC_11 Indicateur Fin Cotation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='FAC_12 Medecin Realisateur' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='FIM' description='Presence Images'>
    <SegmentSubStructure piece='1' description='FIM_01 Code Action' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='FIM_02 IPP' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='FIM_03 Identifiant Image' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='GEN' description='Actes'>
    <SegmentSubStructure piece='1' description='GEN_01 Mode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='GEN_02 Identifiant De Seance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='GEN_03 IPP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='GEN_04 Numero Episode' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='GEN_05 Numero De Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='GEN_06 Code UF De Realisation' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='GEN_07 Code Realisateur Principal' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='GEN_08 Code UF De Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='GEN_09 Date Heure Seance' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='GEN_10 Operateur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='GEN_11 Date Heure Saisie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='GEN_12 Identifiant Module Producteur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='GEN_13 Forfait Technique Numero Appareil Ou Agrement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='GEN_14 Forfait Technique Numero Ordre Ou Nombre Incrementation' max_length='999' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='15' description='GEN_15 Mise A Jour Donnees Seance' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='HEM' description='Dossier Hemovigilance'>
    <SegmentSubStructure piece='1' description='HEM_01 Indicateur' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='HEM_02 Date Heure Creation' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='HEM_03 Date Heure Mise A Jour' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='LIP' description='Livret Pharmaceutique'>
    <SegmentSubStructure piece='1' description='LIP_01 Date Export' max_length='255' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MED' description='Detail Medicament'>
    <SegmentSubStructure piece='1' description='MED_01 Code Action' max_length='255' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MED_02 Code Produit' max_length='255' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MED_03 Code UCD' max_length='255' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MED_04 Libelle Long' max_length='255' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MED_05 Libelle Court' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MED_06 Appartenance Au Livret' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='MED_07 Retrait Produit' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='MED_08 Flag T2A' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='MED_09 Flag ATU' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='MED_10 DCP' max_length='255' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='MED_11 Unite Administration' datatype='CCOM_LIP_UniteAdmin' max_length='255' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='12' description='MED_12 Voie Administration' datatype='CCOM_LIP_VoieAdmin' max_length='255' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='13' description='MED_13 Forme Pharmaceutique' datatype='CCOM_Code' max_length='255' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='14' description='MED_14 Lien URL' datatype='CCOM_LIP_LienURL' max_length='255' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='15' description='MED_15 Classification' datatype='CCOM_LIP_Classification' max_length='255' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='16' description='MED_16 Composant' datatype='CCOM_Code' max_length='255' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='17' description='MED_17 T2A' datatype='CCOM_LIP_T2A' max_length='255' required='O' ifrepeating='1'/>
</SegmentStructure>
<SegmentStructure name='MSH' description='Message Header Segment'>
    <SegmentSubStructure piece='1' description='MSH_01 Field Separator' symbol='!' max_length='1' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MSH_02 Encoding Characters' symbol='!' max_length='4' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='MSH_03 Sending Application' max_length='180' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='MSH_04 Sending Facility' max_length='180' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='MSH_05 Receiving Application' max_length='180' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='MSH_06 Receiving Facility' max_length='180' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='MSH_07 Date Time Of Message' max_length='26' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='MSH_08 Security' max_length='40' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='MSH_09 Message Type' symbol='!' max_length='7' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='MSH_10 Message Control ID' symbol='!' max_length='20' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='MSH_11 Processing ID' symbol='!' max_length='3' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='MSH_12 Version ID' symbol='!' max_length='8' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='MSH_13 Sequence Number' max_length='15' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='MSH_14 Continuation Pointer' max_length='180' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='MSH_15 Accept Acknowledgement Type' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='MSH_16 Application Acknowledgement Type' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='MSH_17 Country Code' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='MSH_18 Character Set' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='MSH_19 Principal Language Of Message' max_length='3' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='MSI' description='Entete PMSI'>
    <SegmentSubStructure piece='1' description='MSI_01 IPP' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='MSI_02 Numero Sejour' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='NGA' description='Acte NGAP'>
    <SegmentSubStructure piece='1' description='NGA_01 Occurrence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='NGA_02 Mode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='NGA_03 Identifiant Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='NGA_04 Code NGAP' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='NGA_05 Coefficient NGAP' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='NGA_06 Nombre Actes' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='NGA_07 Indicateur Acte Prive' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='NGA_08 Indicateur Acte Gratuit' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='NGA_09 Pourcentage De Facturation Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='NGA_10 Tarif Acte NGAP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='NGA_11 Taux De Prise En Charge Del Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='NGA_12 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='NGA_13 Indicateur Accouchement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='NGA_14 Nombre Enfants' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='NGA_15 Indicateur Consultation Anesthesie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='NGA_16 Indicateur Amplificateur De Brillance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='NGA_17 Code NABM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='NGA_18 Coefficient Multiplicateur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='NGA_19 Indicateur Supplement Nuit' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='NGA_20 Indicateur Supplement Ferie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='NGA_21 Quantite' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='OBR' description='Demande'>
    <SegmentSubStructure piece='1' description='OBR_01 Occurrence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='OBR_02 Numero De Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='OBR_03 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='OBR_04 Examen' datatype='CCOM_ORU_Examen' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='OBR_05 Priorite' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='OBR_06 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='OBR_07 Date Heure Prelevement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='OBR_08 Recipient' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='OBR_09 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='OBR_10 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='OBR_11 Code Action' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='OBR_12 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='OBR_13 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='OBR_14 Date Heure Demande' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='OBR_15 Echantillon' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='OBR_16 Medecin Prescripteur' datatype='CCOM_Medecin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='OBR_17 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='OBR_18 Code UF Realisation' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='OBR_19 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='OBR_20 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='OBR_21 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='OBR_22 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='OBR_23 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='OBR_24 Lieu De Realisation' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='OBR_25 Statut Demande' max_length='1' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='OBX' description='Resultat'>
    <SegmentSubStructure piece='1' description='OBX_01 Occurrence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='OBX_02 Type De Resultat' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='OBX_03 Examen' datatype='CCOM_ORU_Examen' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='OBX_04 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='OBX_05 Resultat' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='OBX_06 Unites' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='OBX_07 Normales' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='OBX_08 Indicateur Anormalite' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='OBX_09 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='OBX_10 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='OBX_11 Statut Resultat' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='OBX_12 Nom Du Document' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='OBX_13 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='OBX_14 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='OBX_15 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='OBX_16 Valideur' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='OBX_17 Date Heure RDV' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='P' description='Patient'>
    <SegmentSubStructure piece='1' description='P_01 Occurrence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='P_02 IPP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='P_03 Non Utilise' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='P_04 Numero De Sejour' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='P_05 Nom Patient' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='P_06 Nom de Jeune Fille' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='P_07 Date de Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='P_08 Sexe' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PAP' description='Personne A Prevenir'>
    <SegmentSubStructure piece='1' description='PAP_01 Occurrence' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PAP_02 Lien De Parente' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PAP_03 Civilite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PAP_04 Nom Usuel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PAP_05 Prenom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PAP_06 Adresse' datatype='CCOM_Adresse' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PAP_07 Telephones' datatype='CCOM_ADT_Telephones' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PAP_08 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PAP_09 Date Enregistrement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PAP_10 Identifiant PaP' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='PAT' description='Patient Base'>
    <SegmentSubStructure piece='1' description='PAT_01 IPP' datatype='CCOM_ADT_IPP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='PAT_02 Nom Usuel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='PAT_03 Prenom' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='PAT_04 Nom De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='PAT_05 Date De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='PAT_06 Sexe' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='PAT_07 Adresse' datatype='CCOM_Adresse' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='PAT_08 Telephones' datatype='CCOM_ADT_Telephones' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='PAT_09 Statut Marital' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='PAT_10 Date De Deces' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='PAT_11 Indicateur Id Provisoire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='PAT_12 IPP Precedent' datatype='CCOM_ADT_IPP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='PAT_13 Nationalite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='PAT_14 Departement De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='PAT_15 Pays De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='PAT_16 Civilite' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='PAT_17 Localite De Naissance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='PAT_18 Autres Prenoms' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='PAT_19 Nombre Enfants' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='PAT_20 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='PAT_21 Piece Presentee' datatype='CCOM_Piece' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='PAT_22 Adresse Provisoire' datatype='CCOM_Adresse' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='PAT_23 Profession' datatype='CCOM_Code' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='PAT_24 Email' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='PAT_25 INSC' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='PAT_26 IPP Externes' datatype='CCOM_ADT_IPP' symbol='*' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='27' description='PAT_27 Medecin Traitant' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='PAT_28 Identite Validee' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='QPA' description='Identifiant Msg'>
    <SegmentSubStructure piece='1' description='QPA_01 Code Action' max_length='99' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='QPA_02 Type Episode' max_length='99' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='QPA_03 Date Heure Creation' max_length='99' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='QPA_04 Date Heure Prevue Admission' max_length='99' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='QPA_05 IPP' max_length='99' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='QPA_06 Numero Episode' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='QPA_07 Code US Ou UC' max_length='99' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='QPA_08 Code UF' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='QPA_09 Code Medecin' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='QPA_10 Mode Entree' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='QPA_11 Cellule De Gestion' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='QPA_12 Commentaire' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='QPA_13 Numero Item Attente' max_length='99' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='QPA_14 Date RDV' max_length='99' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='QPD' description='Query Definition Segment'>
    <SegmentSubStructure piece='1' description='QPD_01 Message Query Name' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='QPD_02 Query Tag' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='QPD_03 Person Identifier' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='QPD_04 Domain' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='QPD_05 Non Utilise' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='QPD_06 Non Utilise' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='QPD_07 Non Utilise' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='QPD_08 What Domains Returned' max_length='99' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='RC1' description='Retrocession Donnees generales'>
    <SegmentSubStructure piece='1' description='RC1_01 Action' max_length='2' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='RC1_02 Numero Episode' max_length='8' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='RC1_03 Identifiant Unique Cession' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='RC1_04 Identifiant Cession A Annuler' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='RC1_05 Code Etablissement' max_length='6' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='RC1_06 Code UF De Realisation' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='RC1_07 Code Prescripteur Medecin' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='RC1_08 Date Heure Realisation' max_length='12' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='RC1_09 Date Heure Annulation' max_length='12' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='RC1_10 Transcode Medecin' max_length='8' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='RC1_11 Origine De La Prescription' max_length='1' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='RC2' description='Retrocession Detail'>
    <SegmentSubStructure piece='1' description='RC2_01 Code Medicament' max_length='10' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='RC2_02 Code UCD' max_length='13' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='RC2_03 Lettre Cle NGAP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='RC2_04 Quantite Du Medicament' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='RC2_05 Montant Medicament' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='RC2_06 Valeur Marge' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='RC2_07 Valeur Reconstitution' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='RC2_08 Montant Cession' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='RC2_09 Montant Unitaire Ecart Indemnisable' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='RC2_10 Montant Total Ecart Indemnisable' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='RC2_11 Indication medicament ATU' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='RCP' description='RCP Segment'>
    <SegmentSubStructure piece='1' description='RCP_01 Query Priority' max_length='99' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='RCP_02 Quantity Limited Request' max_length='40' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='REE' description='Actes de reeducation'>
    <SegmentSubStructure piece='1' description='REE_01 Mode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='REE_02 Identifiant Acte' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='REE_03 Code CSARR' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='REE_04 Modulateurs' symbol='+' max_length='999' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='5' description='REE_05 Code Appareillage' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='REE_06 Type Intervenant SSR' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='REE_07 Nombre Patients En Acte Individuel' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='REE_08 Nombre Realisations' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='REE_09 Date Heure Realisation' max_length='999' required='R' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='RSS' description='RSS'>
    <SegmentSubStructure piece='1' description='RSS_01 Identifiant Unique' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='RSS_02 Date Debut' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='RSS_03 Date Fin' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='RSS_04 CMD' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='RSS_05 GHM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='RSS_06 Numero GHS' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='RSS_07 Code Retour Groupage' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='RSS_08 Confirmation Codage' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='RUM' description='RUM'>
    <SegmentSubStructure piece='1' description='RUM_01 Mode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='RUM_02 Identifiant RUM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='RUM_03 Code UM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='RUM_04 Date Entree UM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='RUM_05 Date Sortie UM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='RUM_06 Mode Entree UM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='RUM_07 Code PMSI Provenance' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='RUM_08 Mode Sortie UM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='RUM_09 Code PMSI Destination' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='RUM_10 Type Autorisation Lit Dedie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='RUM_11 Poids NN Entree UM' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='RUM_12 Age Gestationnel' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='RUM_13 Date Dernières Règles' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='RUM_14 Nombre Seances' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='RUM_15 IGS2' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='RUM_16 Radiotherapie - Type RSS' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='RUM_17 Radiotherapie - Type Machine' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='RUM_18 Radiotherapie - Dosimetrie' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='RUM_19 Numero Inovation' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='SIU' description='RDV Agenda'>
    <SegmentSubStructure piece='1' description='SIU_01 Code Action' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='SIU_02 Identifiant Module Producteur' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='SIU_03 Identifiant Unique RDV' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='SIU_04 Type Entite Attendue' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='SIU_05 IPP' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='SIU_06 Code Agenda' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='SIU_07 Date Heure Debut RDV' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='SIU_08 Date Heure Fin RDV' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='SIU_09 Statut RDV' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='SIU_10 Prestation Agenda' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='SIU_11 Type Ressource' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='SIU_12 Code Ressource' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='SIU_13 Code Etablissement' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='SIU_14 Commentaire' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='SIU_15 Date Heure Action' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='SIU_16 Code Utilisateur' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='TEL' description='Telephonie'>
    <SegmentSubStructure piece='1' description='TEL_01 Mode' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='TEL_02 IPP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='TEL_03 Numero Episode' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='TEL_04 Statut' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='TEL_05 Numero SDA' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='TEL_06 Code Secret' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='TEL_07 Montant Restant' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='VEN' description='Venues'>
    <SegmentSubStructure piece='1' description='VEN_01 Mode' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='VEN_02 IPP' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='VEN_03 Numero Episode' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='VEN_04 Date Heure De Debut' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='VEN_05 Date Heure De Fin' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='VEN_06 Code US' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='VEN_07 Code UF' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='VEN_08 Code Medecin Responsable' max_length='999' required='R' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='VEN_09 Chambre' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='VEN_10 Lit' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='VEN_11 Supplement Chambre Seule' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='VEN_12 Prive' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='VEN_13 Date Heure Debut Precedente' max_length='999' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='VEN_14 Date Heure Fin Precedente' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>

<DataType name='CCOM_ADT_IPP' description='IPP'>
    <DataSubType piece='1' description='IPP'/>
    <DataSubType piece='2' description='Assigning Authority'/>
    <DataSubType piece='3' description='Type Assigning Authority'/>
</DataType>
<DataType name='CCOM_ADT_Localisation' description='Localisation'>
    <DataSubType piece='1' description='Code US'/>
    <DataSubType piece='2' description='Chambre'/>
    <DataSubType piece='3' description='Lit'/>
</DataType>
<DataType name='CCOM_ADT_Telephones' description='Telephones'>
    <DataSubType piece='1' description='Personnel'/>
    <DataSubType piece='2' description='Professionnel'/>
    <DataSubType piece='3' description='Mobile'/>
</DataType>
<DataType name='CCOM_Adresse' description='Adresse Detaillee'>
    <DataSubType piece='1' description='Ligne1'/>
    <DataSubType piece='2' description='Ligne2'/>
    <DataSubType piece='3' description='Code Postal'/>
    <DataSubType piece='4' description='Ville'/>
    <DataSubType piece='5' description='Code Pays'/>
    <DataSubType piece='6' description='Telephone'/>
</DataType>
<DataType name='CCOM_Code' description='Donnee Codee'>
    <DataSubType piece='1' description='Code'/>
    <DataSubType piece='2' description='Libelle'/>
    <DataSubType piece='3' description='Table'/>
</DataType>
<DataType name='CCOM_LIP_Classification' description='Classification'>
    <DataSubType piece='1' description='Type Classification'/>
    <DataSubType piece='2' description='Code Classification'/>
    <DataSubType piece='3' description='Libelle Classification'/>
</DataType>
<DataType name='CCOM_LIP_LienURL' description='Lien URL'>
    <DataSubType piece='1' description='Code URL'/>
    <DataSubType piece='2' description='Lien'/>
    <DataSubType piece='3' description='Description'/>
</DataType>
<DataType name='CCOM_LIP_T2A' description='T2A'>
    <DataSubType piece='1' description='Code Indication'/>
    <DataSubType piece='2' description='Libelle Indication'/>
    <DataSubType piece='3' description='Groupe Indication'/>
</DataType>
<DataType name='CCOM_LIP_UniteAdmin' description='Unite Administration'>
    <DataSubType piece='1' description='Code Unite Administration'/>
    <DataSubType piece='2' description='Libelle Unite Administration'/>
    <DataSubType piece='3' description='VQR'/>
    <DataSubType piece='4' description='Unite Par Defaut'/>
</DataType>
<DataType name='CCOM_LIP_VoieAdmin' description='Voie Administration'>
    <DataSubType piece='1' description='Code Voie Administration'/>
    <DataSubType piece='2' description='Libelle Voie Administration'/>
    <DataSubType piece='3' description='Voie Par Defaut'/>
</DataType>
<DataType name='CCOM_Medecin' description='Medecin'>
    <DataSubType piece='1' description='Code Clinicom'/>
    <DataSubType piece='2' description='Nom'/>
    <DataSubType piece='3' description='Prenom'/>
    <DataSubType piece='4' description='Code ADELI'/>
    <DataSubType piece='5' description='Qualite'/>
    <DataSubType piece='6' description='Titre'/>
</DataType>
<DataType name='CCOM_ORU_Examen' description='Examen'>
    <DataSubType piece='1' description='Tanscode'/>
    <DataSubType piece='2' description='Non Utilise'/>
    <DataSubType piece='3' description='Discipline'/>
</DataType>
<DataType name='CCOM_Piece' description='Piece Presentee'>
    <DataSubType piece='1' description='Code'/>
    <DataSubType piece='2' description='Date'/>
</DataType>
<DataType name='CCOM_Valeur' description='ValeurEtUnite'>
    <DataSubType piece='1' description='Valeur'/>
    <DataSubType piece='2' description='Unite'/>
</DataType>
<DataType name='ISC_VERSION' description='$Id: //legacy/fr_products/CCOMTCC/REL/schema/hl7/ClinicomReceiver.xml#13 $'>
</DataType>

</Category>
</Document>

<Document name="EnsExportNotes.EnsExportProduction_2021-03-12 11-11-41_624+1.PTD"><ProjectTextDocument name="EnsExportNotes.EnsExportProduction_2021-03-12 11-11-41_624+1" description="Export Notes for export EnsExportProduction_2021-03-12 11-11-41_624+1">
<![CDATA[<Deployment>
<Creation>
<Machine>SRV-HEALTHCTR.CHCB.LOCAL</Machine>
<Instance>HEALTHCONNECT</Instance>
<Namespace>KSC</Namespace>
<SourceProduction>KSC.PROD.Formation</SourceProduction>
<Username>KSC</Username>
<UTC>2021-03-12 10:12:33.415</UTC>
</Creation>
<Notes>
</Notes>
<Contents>
<ExportProject>EnsExportProduction_2021-03-12 11-11-41_624+1</ExportProject>
<Item num="1">AGIRH.Absences.BatchIn.CLS</Item>
<Item num="2">AGIRH.Absences.CLS</Item>
<Item num="3">AGIRH.Absences.Record.CLS</Item>
<Item num="4">AGIRH.Accidents.BatchIn.CLS</Item>
<Item num="5">AGIRH.Accidents.CLS</Item>
<Item num="6">AGIRH.Accidents.Record.CLS</Item>
<Item num="7">AGIRH.Affectations.BatchIn.CLS</Item>
<Item num="8">AGIRH.Affectations.CLS</Item>
<Item num="9">AGIRH.Affectations.Record.CLS</Item>
<Item num="10">AGIRH.Arborescence.BatchIn.CLS</Item>
<Item num="11">AGIRH.Arborescence.CLS</Item>
<Item num="12">AGIRH.Arborescence.Record.CLS</Item>
<Item num="13">AGIRH.Enfants.BatchIn.CLS</Item>
<Item num="14">AGIRH.Enfants.CLS</Item>
<Item num="15">AGIRH.Enfants.Record.CLS</Item>
<Item num="16">AGIRH.Formations.BatchIn.CLS</Item>
<Item num="17">AGIRH.Formations.CLS</Item>
<Item num="18">AGIRH.Formations.Record.CLS</Item>
<Item num="19">AGIRH.Handicap.BatchIn.CLS</Item>
<Item num="20">AGIRH.Handicap.CLS</Item>
<Item num="21">AGIRH.Handicap.Record.CLS</Item>
<Item num="22">AGIRH.Nomenclature.BatchIn.CLS</Item>
<Item num="23">AGIRH.Nomenclature.CLS</Item>
<Item num="24">AGIRH.Nomenclature.Record.CLS</Item>
<Item num="25">AGIRH.Personnes.BatchIn.CLS</Item>
<Item num="26">AGIRH.Personnes.CLS</Item>
<Item num="27">AGIRH.Personnes.Record.CLS</Item>
<Item num="28">AGIRHtoCHRONOS.Nomenclature.CLS</Item>
<Item num="29">AGIRHtoKITRY.Absences.CLS</Item>
<Item num="30">AGIRHtoKITRY.Accidents.CLS</Item>
<Item num="31">AGIRHtoKITRY.Affectations.CLS</Item>
<Item num="32">AGIRHtoKITRY.Arborescence.CLS</Item>
<Item num="33">AGIRHtoKITRY.Enfants.CLS</Item>
<Item num="34">AGIRHtoKITRY.Formations.CLS</Item>
<Item num="35">AGIRHtoKITRY.Handicap.CLS</Item>
<Item num="36">AGIRHtoKITRY.Personnes.CLS</Item>
<Item num="37">CHRONOS.Nomenclature.BatchOut.CLS</Item>
<Item num="38">CHRONOS.Nomenclature.CLS</Item>
<Item num="39">CHRONOS.Nomenclature.Record.CLS</Item>
<Item num="40">Clinicom.HL7</Item>
<Item num="41">ClinicomReceiver.HL7</Item>
<Item num="42">HL7v231IHE.HL7</Item>
<Item num="43">HL7v25IHE.HL7</Item>
<Item num="44">ISSAS.Common.Adapter.Default.File.OutboundAdapter.CLS</Item>
<Item num="45">ISSAS.Common.Adapter.HL7.File.OutboundAdapter.CLS</Item>
<Item num="46">ISSAS.Common.Adapter.MTS.Message.Header.CLS</Item>
<Item num="47">ISSAS.Common.Adapter.MTS.Message.ListOfSegment.CLS</Item>
<Item num="48">ISSAS.Common.Adapter.MTS.Message.Message.CLS</Item>
<Item num="49">ISSAS.Common.Adapter.MTS.Message.Segment.CLS</Item>
<Item num="50">ISSAS.Common.Adapter.MTS.TCP.InboundAdapter.CLS</Item>
<Item num="51">ISSAS.Common.Adapter.MTS.TCP.OutboundAdapter.CLS</Item>
<Item num="52">ISSAS.Common.BO.HL7.FileOperation.CLS</Item>
<Item num="53">ISSAS.Common.BO.MTS.TCPOperation.CLS</Item>
<Item num="54">ISSAS.Common.BS.MTS.TCPService.CLS</Item>
<Item num="55">ISSAS.Common.BS.MTS.TCPServiceKSC.CLS</Item>
<Item num="56">ISSAS.Common.DTL.CCOMtoDMP.DMPSeb.CLS</Item>
<Item num="57">ISSAS.Common.DTL.CCOMtoDOCTOLIB.PBtoADT.CLS</Item>
<Item num="58">ISSAS.Common.DTL.CCOMtoHL7v231.ADtoADT.CLS</Item>
<Item num="59">ISSAS.Common.DTL.CCOMtoHL7v231.AStoADT.CLS</Item>
<Item num="60">ISSAS.Common.DTL.CCOMtoHL7v231.DStoADT.CLS</Item>
<Item num="61">ISSAS.Common.DTL.CCOMtoHL7v231.HMtoMFN.CLS</Item>
<Item num="62">ISSAS.Common.DTL.CCOMtoHL7v231.NDtoADT.CLS</Item>
<Item num="63">ISSAS.Common.DTL.CCOMtoHL7v231.NRtoADT.CLS</Item>
<Item num="64">ISSAS.Common.DTL.CCOMtoHL7v231.OD2toADT.CLS</Item>
<Item num="65">ISSAS.Common.DTL.CCOMtoHL7v231.OPtoADT.CLS</Item>
<Item num="66">ISSAS.Common.DTL.CCOMtoHL7v231.ORtoADT.CLS</Item>
<Item num="67">ISSAS.Common.DTL.CCOMtoHL7v231.PAtoADT.CLS</Item>
<Item num="68">ISSAS.Common.DTL.CCOMtoHL7v231.PBtoADT.CLS</Item>
<Item num="69">ISSAS.Common.DTL.CCOMtoHL7v231.PMtoADT.CLS</Item>
<Item num="70">ISSAS.Common.DTL.CCOMtoHL7v231.TRtoADT.CLS</Item>
<Item num="71">ISSAS.Common.DTL.CCOMtoHL7v231.URtoADT.CLS</Item>
<Item num="72">ISSAS.Common.DTL.CCOMtoHL7v25.ADtoADT.CLS</Item>
<Item num="73">ISSAS.Common.DTL.CCOMtoHL7v25.AStoADT.CLS</Item>
<Item num="74">ISSAS.Common.DTL.CCOMtoHL7v25.DStoADT.CLS</Item>
<Item num="75">ISSAS.Common.DTL.CCOMtoHL7v25.EVtoADT.CLS</Item>
<Item num="76">ISSAS.Common.DTL.CCOMtoHL7v25.NDtoADT.CLS</Item>
<Item num="77">ISSAS.Common.DTL.CCOMtoHL7v25.NRtoADT.CLS</Item>
<Item num="78">ISSAS.Common.DTL.CCOMtoHL7v25.OD2toADT.CLS</Item>
<Item num="79">ISSAS.Common.DTL.CCOMtoHL7v25.OPtoADT.CLS</Item>
<Item num="80">ISSAS.Common.DTL.CCOMtoHL7v25.ORtoADT.CLS</Item>
<Item num="81">ISSAS.Common.DTL.CCOMtoHL7v25.PAtoADT.CLS</Item>
<Item num="82">ISSAS.Common.DTL.CCOMtoHL7v25.PBtoADT.CLS</Item>
<Item num="83">ISSAS.Common.DTL.CCOMtoHL7v25.PLtoADT.CLS</Item>
<Item num="84">ISSAS.Common.DTL.CCOMtoHL7v25.PMtoADT.CLS</Item>
<Item num="85">ISSAS.Common.DTL.CCOMtoHL7v25.RItoADT.CLS</Item>
<Item num="86">ISSAS.Common.DTL.CCOMtoHL7v25.SDtoADT.CLS</Item>
<Item num="87">ISSAS.Common.DTL.CCOMtoHL7v25.SVtoADT.CLS</Item>
<Item num="88">ISSAS.Common.DTL.CCOMtoHL7v25.TRtoADT.CLS</Item>
<Item num="89">ISSAS.Common.DTL.CCOMtoHL7v25.URtoADT.CLS</Item>
<Item num="90">ISSAS.Common.DTL.CCOMtoTC.APtoSRM.CLS</Item>
<Item num="91">ISSAS.Common.DTL.CCOMtoTC.ORtoADT.CLS</Item>
<Item num="92">ISSAS.Common.DTL.CCOMtoTITAN25.ADtoADT.CLS</Item>
<Item num="93">ISSAS.Common.DTL.CCOMtoTITAN25.DStoADT.CLS</Item>
<Item num="94">ISSAS.Common.DTL.CCOMtoTITAN25.PBtoADT.CLS</Item>
<Item num="95">ISSAS.Common.DTL.CCOMtoTITAN25.RItoADT.CLS</Item>
<Item num="96">ISSAS.Common.DTL.CCOMtoTITAN25.SDtoADT.CLS</Item>
<Item num="97">ISSAS.Common.DTL.CCOMtoTITAN25.TRtoADT.CLS</Item>
<Item num="98">ISSAS.Common.DTL.Doctolib.A08toTCA31.CLS</Item>
<Item num="99">ISSAS.Common.DTL.Doctolib.ADTtoA40Direct.CLS</Item>
<Item num="100">ISSAS.Common.DTL.Doctolib.CCOMADTA28ToTCADTA28.CLS</Item>
<Item num="101">ISSAS.Common.DTL.Doctolib.CCOMtoHL7v25PMtoADT.CLS</Item>
<Item num="102">ISSAS.Common.DTL.Doctolib.SIU14toDLSIU14.CLS</Item>
<Item num="103">ISSAS.Common.DTL.Doctolib.SIUtoSRM.CLS</Item>
<Item num="104">ISSAS.Common.DTL.Doctolib.SIUtoSRMUPD1.CLS</Item>
<Item num="105">ISSAS.Common.DTL.Doctolib.SIUtoSRMUPD2.CLS</Item>
<Item num="106">ISSAS.Common.DTL.Doctolib.TCSIUtoCCOMSIU.CLS</Item>
<Item num="107">ISSAS.Common.DTL.Doctolib.TCSIUtoDoctolibSIU.CLS</Item>
<Item num="108">ISSAS.Common.DTL.TCtoCCOM.ADTtoDIG.CLS</Item>
<Item num="109">ISSAS.Common.DTL.TCtoCCOM.SIUtoSIU.CLS</Item>
<Item num="110">ISSAS.Common.DTL.TCtoMONDOCTEUR.SIUtoSIU.CLS</Item>
<Item num="111">ISSAS.Common.Message.ClinicomHL7.CLS</Item>
<Item num="112">ISSAS.Common.Message.HPRIMv2HL7.CLS</Item>
<Item num="113">ISSAS.Common.Tools.RulesFunctions.CLS</Item>
<Item num="114">ISSAS.Sites.Bayonne.DTL.AXBIOCEANtoTC.ORUtoORU.CLS</Item>
<Item num="115">ISSAS.Sites.Bayonne.DTL.CCOMToAXBIOCEAN.ADTToADM.CLS</Item>
<Item num="116">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS.ORMtoOML.CLS</Item>
<Item num="117">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.ADtoADT.CLS</Item>
<Item num="118">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.AStoADT.CLS</Item>
<Item num="119">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.DStoADT.CLS</Item>
<Item num="120">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.EVtoADT.CLS</Item>
<Item num="121">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.NDtoADT.CLS</Item>
<Item num="122">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.NRtoADT.CLS</Item>
<Item num="123">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.ODtoADT.CLS</Item>
<Item num="124">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.OPtoADT.CLS</Item>
<Item num="125">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.ORtoADT.CLS</Item>
<Item num="126">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.PAtoADT.CLS</Item>
<Item num="127">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.PBtoADT.CLS</Item>
<Item num="128">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.PMtoADT.CLS</Item>
<Item num="129">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.RItoADT.CLS</Item>
<Item num="130">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.SDtoADT.CLS</Item>
<Item num="131">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.SVtoADT.CLS</Item>
<Item num="132">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.TRtoADT.CLS</Item>
<Item num="133">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.UFtoMFN.CLS</Item>
<Item num="134">ISSAS.Sites.Bayonne.DTL.CCOMtoGLIMS231.URtoADT.CLS</Item>
<Item num="135">ISSAS.Sites.Bayonne.DTL.GLIMStoTC.ORUtoORU.CLS</Item>
<Item num="136">ISSAS.Sites.Bayonne.DTL.HEMADIALtoTC.ORUtoORU.CLS</Item>
<Item num="137">ISSAS.Sites.Bayonne.DTL.TCtoGLIMS.ORMtoOML.CLS</Item>
<Item num="138">ISSAS.Sites.Bayonne.DTL.TCtoVENUS.ORMtoORM.CLS</Item>
<Item num="139">ISSAS.Sites.Bayonne.DTL.TCtoVENUS.ORMtoORMsp.CLS</Item>
<Item num="140">ISSAS.Sites.Bayonne.DTL.VENUStoTC.ORMtoORM.CLS</Item>
<Item num="141">ISSAS.Sites.Bayonne.PRD.DTL.AGENDAtoQPLANNER.IAtoSIU.CLS</Item>
<Item num="142">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoCHIMIO.ADtoADT.CLS</Item>
<Item num="143">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoCHIMIO.ORtoADT.CLS</Item>
<Item num="144">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoCHIMIO.TRtoADT.CLS</Item>
<Item num="145">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoGRAAL.ADtoADT.CLS</Item>
<Item num="146">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoGRAAL.DStoADT.CLS</Item>
<Item num="147">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoGRAAL.RItoADT.CLS</Item>
<Item num="148">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoGRAAL.SDtoADT.CLS</Item>
<Item num="149">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoGRAAL.TRtoADT.CLS</Item>
<Item num="150">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.ADtoADT.CLS</Item>
<Item num="151">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.DStoADT.CLS</Item>
<Item num="152">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.NDtoADT.CLS</Item>
<Item num="153">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.NRtoADT.CLS</Item>
<Item num="154">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.OPtoADT.CLS</Item>
<Item num="155">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.ORtoADT.CLS</Item>
<Item num="156">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.PAtoADT.CLS</Item>
<Item num="157">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.PBtoADT.CLS</Item>
<Item num="158">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.TRtoADT.CLS</Item>
<Item num="159">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHEMOS.URtoADT.CLS</Item>
<Item num="160">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.ADtoADT.CLS</Item>
<Item num="161">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.DStoADT.CLS</Item>
<Item num="162">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.NDtoADT.CLS</Item>
<Item num="163">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.NRtoADT.CLS</Item>
<Item num="164">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.OPtoADT.CLS</Item>
<Item num="165">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.PAtoADT.CLS</Item>
<Item num="166">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.PBtoADT.CLS</Item>
<Item num="167">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoHL7v231.TRtoADT.CLS</Item>
<Item num="168">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoINFOSERV.DStoUP2.CLS</Item>
<Item num="169">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoINFOSERV.TRtoUP2.CLS</Item>
<Item num="170">ISSAS.Sites.Bayonne.PRD.DTL.CCOMtoPIMPIRIN.CMtoCESSION.CLS</Item>
<Item num="171">ISSAS.Sites.Bayonne.PRD.DTL.COPILOTEtoCCOM.ORUtoORU.CLS</Item>
<Item num="172">ISSAS.Sites.Bayonne.PRD.DTL.COPILOTEtoTC.ORUtoORU.CLS</Item>
<Item num="173">ISSAS.Sites.Bayonne.PRD.DTL.HEMOStoTC.HMVtoORU.CLS</Item>
<Item num="174">ISSAS.Sites.Bayonne.PRD.DTL.IMAGEtoTC.PHtoORU.CLS</Item>
<Item num="175">ISSAS.Sites.Bayonne.PRD.DTL.OPESIMtoCCOM.ORUtoORU.CLS</Item>
<Item num="176">ISSAS.Sites.Bayonne.PRD.DTL.OPESIMtoTC.ORUtoORU.CLS</Item>
<Item num="177">ISSAS.Sites.Bayonne.PRD.DTL.QPLANNERtoCCOM.SIUtoQPA.CLS</Item>
<Item num="178">ISSAS.Sites.Bayonne.PRD.DTL.QPLANNERtoCCOM.SIUtoSIU.CLS</Item>
<Item num="179">ISSAS.Sites.Bayonne.PRD.DTL.TCtoCCOM.SIUtoSIU.CLS</Item>
<Item num="180">ISSAS.Sites.Bayonne.PRD.DTL.VENUStoCCOM.ORUtoORU.CLS</Item>
<Item num="181">ISSAS.Sites.Bayonne.PRD.DTL.VENUStoTC.ORUtoORU.CLS</Item>
<Item num="182">ISSAS.Sites.Bayonne.PRD.DTL.VIEWPOINTtoCCOM.ORUtoORU.CLS</Item>
<Item num="183">ISSAS.Sites.Bayonne.PRD.DTL.VIEWPOINTtoTC.ORUtoORU.CLS</Item>
<Item num="184">ISSAS.Sites.Bayonne.PRD.Prod.RouterCCOMSourceRoutingRule.CLS</Item>
<Item num="185">ISSAS.Sites.Bayonne.TRN.Prod.RouterCCOMSourceRoutingRule.CLS</Item>
<Item num="186">ISSAS.Sites.Bayonne.TRN.Prod.RouterCCOMTargetRoutingRule.CLS</Item>
<Item num="187">ISSAS.Sites.Bayonne.TRN.Prod.RouterDoctolibHL7RoutingRule.CLS</Item>
<Item num="188">KITRY.Absences.BatchOut.CLS</Item>
<Item num="189">KITRY.Absences.CLS</Item>
<Item num="190">KITRY.Absences.Record.CLS</Item>
<Item num="191">KITRY.Accidents.BatchOut.CLS</Item>
<Item num="192">KITRY.Accidents.CLS</Item>
<Item num="193">KITRY.Accidents.Record.CLS</Item>
<Item num="194">KITRY.Affectations.BatchOut.CLS</Item>
<Item num="195">KITRY.Affectations.CLS</Item>
<Item num="196">KITRY.Affectations.Record.CLS</Item>
<Item num="197">KITRY.Arborescence.BatchOut.CLS</Item>
<Item num="198">KITRY.Arborescence.CLS</Item>
<Item num="199">KITRY.Arborescence.Record.CLS</Item>
<Item num="200">KITRY.Enfants.BatchOut.CLS</Item>
<Item num="201">KITRY.Enfants.CLS</Item>
<Item num="202">KITRY.Enfants.Record.CLS</Item>
<Item num="203">KITRY.Formations.BatchOut.CLS</Item>
<Item num="204">KITRY.Formations.CLS</Item>
<Item num="205">KITRY.Formations.Record.CLS</Item>
<Item num="206">KITRY.Handicap.BatchOut.CLS</Item>
<Item num="207">KITRY.Handicap.CLS</Item>
<Item num="208">KITRY.Handicap.Record.CLS</Item>
<Item num="209">KITRY.Personnes.BatchOut.CLS</Item>
<Item num="210">KITRY.Personnes.CLS</Item>
<Item num="211">KITRY.Personnes.Record.CLS</Item>
<Item num="212">KSC.DTL.Alert.CLS</Item>
<Item num="213">KSC.DTL.Doctolib.CLS</Item>
<Item num="214">KSC.FileToMail.CLS</Item>
<Item num="215">KSC.FromVenus1.CLS</Item>
<Item num="216">KSC.MessageDPT.Record.CLS</Item>
<Item num="217">KSC.PROD.Formation.CLS</Item>
<Item num="218">KSC.Regles.RouteurDEPT.CLS</Item>
<Item num="219">MessageDPT.CLS</Item>
<Item num="220">Router.GTTRoutingRule.CLS</Item>
<Item num="221">Router.KitryRoutingRule.CLS</Item>
<Item num="222">RouteurCCOM.KSCRoutingRule.CLS</Item>
<Item num="223">RouteurDoctolib.KSCRoutingRule.CLS</Item>
<Item num="224">TrakCare.HL7</Item>
<Item num="225">User.MessageDPT.CLS</Item>
</Contents>
<ProductionClassInExport>KSC.PROD.Formation</ProductionClassInExport>
</Deployment>

]]></ProjectTextDocument>
</Document>

<Document name="HL7v231IHE.HL7">
<Category name="HL7v231IHE" base="2.3.1">

<MessageType name='ADT_AXX' structure='ADT_AXX'/>

<MessageStructure name='ADT_AXX' definition='base:MSH~base:EVN~base:PID~[~base:MRG~]~[~{~base:ROL~}~]~[~{~base:NK1~}~]~[~base:PV1~]~[~base:PV2~]~[~ZFU~]'/>

<SegmentStructure name='ZFU' description='Functionnal Unit Segment'>
    <SegmentSubStructure piece='1' description='Nursing Functional Unit' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='Nursing Functional Unit Start Date Time' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='Housing Functional Unit' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='Housing Functional Unit Start Date Time' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='Medical Functional Unit' datatype='base:CX' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='Medical Functional Unit Start Date Time' max_length='60' required='O' ifrepeating='0'/>
</SegmentStructure>

<DataType name='ISC_VERSION' description='$Id: //legacy/fr_products/CCOMTCC/REL/schema/hl7/HL7v231IHE.xml#5 $'>
</DataType>

</Category>
</Document>

<Document name="HL7v25IHE.HL7">
<Category name="HL7v25IHE" base="2.5">

<MessageType name='ADT_AXX' structure='ADT_AXX'/>
<MessageType name='QBP_ZV1' structure='QBP_ZV1' returntype='RSP_ZV2'/>
<MessageType name='RSP_ZV2' structure='RSP_ZV2'/>

<MessageStructure name='ADT_AXX' definition='base:MSH~base:EVN~base:PID~[~base:MRG~]~[~base:PD1~]~[~{~base:ROL~}~]~[~{~base:NK1~}~]~[~base:PV1~]~[~base:PV2~]~[~ZBE~]~[~ZFP~]~[~ZFV~]~[~ZFM~]~[~ZFD~]~[~{~ZFS~}~]~[~base:OBX~]~[~{~base:IN1~[~base:IN2~]~[~{~base:IN3~}~]~[~{~base:ROL~}~]~}~]~[~base:ACC~]'/>
<MessageStructure name='QBP_ZV1' definition='base:MSH~[~{~base:SFT~}~]~QPD~base:RCP~[~base:DSC~]'/>
<MessageStructure name='RSP_ZV2' definition='base:MSH~[~{~base:SFT~}~]~base:MSA~[~base:ERR~]~base:QAK~QPD~[~{~base:PID~[~base:PD1~]~[~{~base:NK1~}~]~[~{~base:PV1~}~]~[~base:QRI~]~}~]~[~base:DSC~]'/>

<SegmentStructure name='QPD' description='Query Parameter Definition'>
    <SegmentSubStructure piece='1' description='Message Query Name' datatype='base:CE' symbol='!' max_length='250' required='R' ifrepeating='0' codetable='base:471'/>
    <SegmentSubStructure piece='2' description='Query Tag' datatype='base:ST' symbol='?' max_length='32' required='C' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='User Parameters (in successive fields)' symbol='*' max_length='256' required='O' ifrepeating='1'/>
</SegmentStructure>
<SegmentStructure name='ZBE' description='Movement Action segment'>
    <SegmentSubStructure piece='1' description='Movement ID' datatype='base:EI' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='Start Movement Date/Time' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='End Movement Date/Time' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='Movement Action' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='Historical Movement Indicator' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='Original trigger event code' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='Responsible Ward' datatype='base:XON' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='Responsible Care' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='Nature Mouvement' max_length='0' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ZFD' description='Complement demographique'>
    <SegmentSubStructure piece='1' description='Date Lunaire' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='Nombre de semaines de gestation' max_length='60' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ZFM' description='Mouvement PMSI'>
    <SegmentSubStructure piece='1' description='Mode Entree PMSI' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='Mode Sortie PMSI' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='Mode Provenance PMSI' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='Mode Destination PMSI' max_length='60' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ZFP' description='Situation professionnelle'>
    <SegmentSubStructure piece='1' description='Activite sociopro' max_length='60' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='Categorie sociopro' max_length='60' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ZFS' description='Mode legal de soins en psychiatrie'>
    <SegmentSubStructure piece='1' description='Set ID ZFS' max_length='4' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='Identifiant' datatype='base:EI' max_length='427' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='Date Heure Debut Mode Legal' datatype='base:TS' max_length='26' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='Date Heure Fin Mode Legal' datatype='base:TS' max_length='26' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='Action' max_length='6' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='Mode Legal' datatype='base:CWE' max_length='250' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='Code RIMP-P Mode Legal' datatype='base:CNE' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='Commentaires' max_length='65536' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ZFV' description='Complements sur la rencontre'>
    <SegmentSubStructure piece='1' description='Etb provenance' datatype='base:DLD' max_length='47' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='Mode de transport de sortie' datatype='base:CE' max_length='250' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='Type de preadmission' max_length='2' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='Date debut placement psy' datatype='base:TS' max_length='26' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='Date fin placement psy' datatype='base:TS' max_length='26' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='Adresse etb provenance ou destination' datatype='base:XAD' max_length='250' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='NDA etb provenance' datatype='base:CX' max_length='250' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='Numero archives' datatype='base:CX' max_length='250' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='Mode sortie personnalise' max_length='6' required='O' ifrepeating='0'/>
</SegmentStructure>

<DataType name='ISC_VERSION' description='$Id: //legacy/fr_products/CCOMTCC/REL/schema/hl7/HL7v25IHE.xml#7 $'>
</DataType>

</Category>
</Document>

<Document name="TrakCare.HL7">
<Category name="TrakCare" base="2.4">

<MessageType name='ADR_A19' structure='ADR_A19'/>
<MessageType name='ADT_A01' structure='ADT_A01' returntype='base:ACK_A01'/>
<MessageType name='ADT_A04' structure='ADT_A01' returntype='base:ACK_A04'/>
<MessageType name='ADT_A08' structure='ADT_A01' returntype='base:ACK_A08'/>
<MessageType name='ADT_A28' structure='ADT_A05' returntype='base:ACK_A28'/>
<MessageType name='ADT_A31' structure='ADT_A05' returntype='base:ACK_A31'/>
<MessageType name='ORM_O01' structure='ORM_O01'/>
<MessageType name='QRY_A19' structure='QRY_A19' returntype='ADR_A19'/>
<MessageType name='SIU_S12' structure='SIU_S12' returntype='base:ACK_S12'/>
<MessageType name='SIU_S14' structure='SIU_S12' returntype='base:ACK_S14'/>
<MessageType name='SIU_S15' structure='SIU_S12' returntype='base:ACK_S15'/>
<MessageType name='ZTC_CBA' structure='base:ACK'/>

<MessageStructure name='ADR_A19' definition='base:MSH~base:MSA~[~base:ERR~]~[~base:QAK~]~base:QRD~[~base:QRF~]~{~[~base:EVN~]~base:PID~[~base:PD1~]~[~{~base:ROL~}~]~[~{~base:NK1~}~]~base:PV1~[~base:PV2~]~[~{~base:ROL~}~]~[~{~base:DB1~}~]~[~{~base:OBX~}~]~[~{~base:AL1~}~]~[~{~base:DG1~}~]~[~base:DRG~]~[~{~base:PR1~[~{~base:ROL~}~]~}~]~[~{~base:GT1~}~]~[~{~base:IN1~[~base:IN2~]~[~{~base:IN3~}~]~[~{~base:ROL~}~]~}~]~[~base:ACC~]~[~base:UB1~]~[~base:UB2~]~[~ZID~]~}~[~base:DSC~]'/>
<MessageStructure name='ADT_A01' definition='base:MSH~base:EVN~base:PID~[~base:MRG~]~[~base:PD1~]~[~{~base:ROL~}~]~[~{~base:NK1~}~]~base:PV1~[~base:PV2~]~[~{~base:ROL~}~]~[~{~base:DB1~}~]~[~{~base:OBX~}~]~[~{~base:AL1~}~]~[~{~base:DG1~}~]~[~base:DRG~]~[~{~base:PR1~[~{~base:ROL~}~]~}~]~[~{~base:GT1~}~]~[~{~base:IN1~[~base:IN2~]~[~{~base:IN3~}~]~[~{~base:ROL~}~]~}~]~[~base:ACC~]~[~base:UB1~]~[~base:UB2~]~[~base:PDA~]~[~ZAP~]~[~ZV1~]~[~ZID~]~[~ZBD~]'/>
<MessageStructure name='ADT_A05' definition='base:MSH~base:EVN~base:PID~[~base:NTE~]~[~base:MRG~]~[~base:PD1~]~[~{~base:ROL~}~]~[~{~base:NK1~}~]~base:PV1~[~base:PV2~]~[~{~base:ROL~}~]~[~{~base:DB1~}~]~[~{~base:OBX~}~]~[~{~base:AL1~}~]~[~{~base:DG1~}~]~[~base:DRG~]~[~{~base:PR1~[~{~base:ROL~}~]~}~]~[~{~base:GT1~}~]~[~{~base:IN1~[~base:IN2~]~[~{~base:IN3~}~]~[~{~base:ROL~}~]~}~]~[~base:ACC~]~[~base:UB1~]~[~base:UB2~]~[~ZAP~]~[~ZID~]~[~ZBD~]'/>
<MessageStructure name='ORM_O01' definition='base:MSH~base:PID~[~{~base:NTE~}~]~base:PV1~{~base:ORC~{~base:OBR~[~{~base:NTE~}~]~[~{~base:OBX~}~]~}~}~[~ZAC~]~[~{~ZCC~}~]~[~{~ZNG~}~]'/>
<MessageStructure name='QRY_A19' definition='base:MSH~base:QRD~[~base:QRF~]~[~ZQY~]'/>
<MessageStructure name='SIU_S12' definition='base:MSH~base:SCH~[~{~base:NTE~}~]~[~{~base:PID~[~base:PD1~]~[~base:PV1~]~[~base:PV2~]~[~{~base:OBX~}~]~[~{~base:DG1~}~]~}~]~{~base:RGS~[~{~base:AIS~[~{~base:NTE~}~]~}~]~[~{~base:AIG~[~{~base:NTE~}~]~}~]~[~{~base:AIL~[~{~base:NTE~}~]~}~]~[~{~base:AIP~[~{~base:NTE~}~]~}~]~}'/>
<MessageStructure name='ZTC_CBA' definition='base:MSH~base:MSA~[~base:ERR~]'/>

<SegmentStructure name='ZAC' description='Actes Donnees Generales'>
    <SegmentSubStructure piece='1' description='Mode' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='Identifiant Seance' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='Date Heure Realisation' max_length='256' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ZAP' description='Additional Appointment Details'>
    <SegmentSubStructure piece='1' description='Interpreter Required' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='Infectious' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='Escort' max_length='250' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='Transport Required' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='Transport Type' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='Transport Comments' max_length='10000' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='Session Clinic' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='Session Clinic Address' max_length='10000' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='Session Room' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='Session Room Address' max_length='256' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ZBD' description='Birth Details'>
    <SegmentSubStructure piece='1' description='Gestation Weeks' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='Birth Weight' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='Outcome of Pregnancy' datatype='base:CE' symbol='!' max_length='250' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='Presentation' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='Delivery Method' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='Other Resuscitation Methods' symbol='!' max_length='10000' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='First Respiration' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='Outcome Free Text' symbol='!' max_length='10000' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='AGPAR1' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='AGPAR5' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='Mother Registration Number' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='Plurality' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='Delivery Place' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='Birth Order' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='Birth Date and Time' datatype='base:TS' symbol='!' max_length='26' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='Operative Delivery Indication' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ZCC' description='Actes CCAM'>
    <SegmentSubStructure piece='1' description='Mode' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='Identifiant Acte' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='Code CCAM' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='Code Activite' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='Code Phase' max_length='256' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ZID' description='Additional Patient Details'>
    <SegmentSubStructure piece='1' description='Nation' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='National Resident' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='Australian South Sea Islander' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='Patient Name 4' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='Special Needs Status' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='Free Text Post Code' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='Patient Remarks' symbol='!' max_length='1000' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='8' description='Preferred Contact Method' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='Interpreter Required' symbol='!' max_length='256' required='O' ifrepeating='0' codetable='base:136'/>
    <SegmentSubStructure piece='10' description='Previous NHS Contact' symbol='!' max_length='256' required='O' ifrepeating='0' codetable='base:136'/>
    <SegmentSubStructure piece='11' description='Official Death Notification Status' symbol='!' max_length='256' required='O' ifrepeating='0' codetable='base:136'/>
    <SegmentSubStructure piece='12' description='VIP' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='Patient Type' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='Employment Status' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='ID Document Type' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='Free Text Occupation' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='Region' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='Second Phone' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='19' description='Social Status' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='20' description='Pension Type' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='21' description='Employee Department' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='22' description='Employee Company' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='23' description='Employee Date From' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='24' description='Employee Date To' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='25' description='Employee Type' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='26' description='Health Card Expiry Date' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='27' description='Reason for Attention' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='28' description='Overseas Visitor Status' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='29' description='Country' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='30' description='Free Text 1' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='31' description='Free Text 2' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='32' description='Free Text 3' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='33' description='Free Text 4' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='34' description='Free Text 5' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='35' description='Free Text 6' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='36' description='Child Count' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='37' description='Temporary Address' datatype='TC_AdresseProvisoire' max_length='999' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ZNG' description='Actes NGAP'>
    <SegmentSubStructure piece='1' description='Mode' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='Identifiant Acte' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='Code NGAP' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='Coefficient' max_length='256' required='O' ifrepeating='0'/>
</SegmentStructure>
<SegmentStructure name='ZOR' description='Additional Order Details'>
    <SegmentSubStructure piece='1' description='Receiving Location' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='Order Resource Care Provider' datatype='base:XCN' symbol='!' max_length='256' required='O' ifrepeating='1'/>
</SegmentStructure>
<SegmentStructure name='ZQY' description='Additional Query Details'>
    <SegmentSubStructure piece='1' description='DVA Number' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='Medicare Number' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='Patient Name' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='Patient Name2' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='Date of Birth' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='Date of Birth Range' datatype='base:DR' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='Date of Death Range' datatype='base:DR' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='Patient Address' datatype='base:XAD' symbol='*' max_length='106' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='9' description='Family GP/Practice' datatype='base:PI' symbol='!' max_length='100' required='O' ifrepeating='1'/>
    <SegmentSubStructure piece='10' description='Previous NHS Contact' symbol='!' max_length='1' required='O' ifrepeating='0' codetable='base:136'/>
    <SegmentSubStructure piece='11' description='Query User ID' datatype='base:XCN' symbol='*' max_length='250' required='O' ifrepeating='1' codetable='base:188'/>
</SegmentStructure>
<SegmentStructure name='ZV1' description='Additional Admission Details'>
    <SegmentSubStructure piece='1' description='Presenting Problem' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='2' description='Referring Doctor Clinic' datatype='base:CE' symbol='!' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='3' description='Transport Mode' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='4' description='Date Heure Decision Medicale' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='5' description='Numero Episode Precedent' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='6' description='Confidentialite Administrative' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='7' description='Exo Acquise Flag' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='8' description='Exo Acquise Date' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='9' description='Exo Acquise FPA Non Applicable' max_length='1' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='10' description='Unite Consultation' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='11' description='Recurrent' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='12' description='Ambulance' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='13' description='Etablissement Origine' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='14' description='Date Hospitalisation Precedente' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='15' description='Nb Jour Hospitalisation Precedente' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='16' description='Date Parcours De Soins' max_length='256' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='17' description='Commentaire Sortie' max_length='10000' required='O' ifrepeating='0'/>
    <SegmentSubStructure piece='18' description='Indicateur Venue Demi Journee' max_length='256' required='O' ifrepeating='0'/>
</SegmentStructure>

<DataType name='ISC_VERSION' description='$Id: //legacy/fr_products/CCOMTCC/REL/schema/hl7/TrakCare.xml#13 $'>
</DataType>
<DataType name='TC_AdresseProvisoire' description='Adresse Provisoire'>
    <DataSubType piece='1' description='NumRue'/>
    <DataSubType piece='2' description='Complement'/>
    <DataSubType piece='3' description='CodePostal'/>
    <DataSubType piece='4' description='Ville'/>
    <DataSubType piece='5' description='Pays'/>
    <DataSubType piece='6' description='Telephone'/>
    <DataSubType piece='7' description='AddressType'/>
</DataType>

</Category>
</Document></Export>
